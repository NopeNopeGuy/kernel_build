{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d7551c79_bcacf430",
        "filename": "kleaf/docs/errors.md",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-10-12T15:25:56Z",
      "side": 1,
      "message": "How would you like `--clang_prebuilt_path\u003d/path/to/llvm-project/llvm/build/bin` instead? If so, please open a go/kleaf-bug",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 40
      },
      "revId": "fc91835b3245aadc8b949311e08a4b1a5c7c77a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d06c55c_3cf59f84",
        "filename": "kleaf/docs/errors.md",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-12T22:17:58Z",
      "side": 1,
      "message": "+1, specifying environment variables like CLANG_PREBUILT_BIN is not going to take effect for Kleaf.\n\nAlso, do we want to restrict the use to only clang prebuilts under prebuilt/ (possibly different versions), or do we want to support arbitrary clang toolchains (e.g. installed on host)? If the former, I would rather have `--toolchain_version\u003dr123456` instead.",
      "parentUuid": "d7551c79_bcacf430",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 40
      },
      "revId": "fc91835b3245aadc8b949311e08a4b1a5c7c77a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a20e6bf9_41e9488e",
        "filename": "kleaf/docs/errors.md",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-10-13T11:43:05Z",
      "side": 1,
      "message": "I think `--toolchain_version\u003dr123456` would be equivalent to changing the TOOLCHAIN_VERSION file and likely anyway be used when updating the toolchain. So, there is little value for that use case.\n\nThe intention here is to try out arbitrary clang builds (local dev builds) and for that we basically need to allow things from the host (not really hermetic, but totally ok for that case).\n\nNick, correct me if I am wrong with the above. Assuming I am right, what would be actually a useful path to specify to also include other files like clang runtime libs and/or stdlib headers and stubs etc. ?",
      "parentUuid": "3d06c55c_3cf59f84",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 40
      },
      "revId": "fc91835b3245aadc8b949311e08a4b1a5c7c77a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
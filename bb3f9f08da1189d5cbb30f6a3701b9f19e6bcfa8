{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "51cbda76_91f8adc0",
        "filename": "kleaf/kernel.bzl",
        "patchSetId": 20
      },
      "lineNbr": 48,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2022-04-04T17:16:34Z",
      "side": 1,
      "message": "If you are including \"short\" then you should also include \"\" (well, minus \".\", if you see what I mean).\n\nEither drop \"short\" (which is just a link) or prepend \".\" to all of the existing ones and add \"\" (which will also just be a link).\n\nThe links are for backwards compatibility, I\u0027d rather not add more dependencies on them.",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 48,
        "endChar": 1
      },
      "revId": "bb3f9f08da1189d5cbb30f6a3701b9f19e6bcfa8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "764bcd93_d778d218",
        "filename": "kleaf/kernel.bzl",
        "patchSetId": 20
      },
      "lineNbr": 48,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-04-04T20:43:07Z",
      "side": 1,
      "message": "The \"\" one is the \"report\" one in L3844. It is kept separate because it is needed as an argument to diff_abi.",
      "parentUuid": "51cbda76_91f8adc0",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 48,
        "endChar": 1
      },
      "revId": "bb3f9f08da1189d5cbb30f6a3701b9f19e6bcfa8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08391eed_23c3642b",
        "filename": "kleaf/kernel.bzl",
        "patchSetId": 20
      },
      "lineNbr": 3848,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2022-04-04T17:16:34Z",
      "side": 1,
      "message": "This ties Kleaf to the particular diff_abi implementation choice and means we need to update them together. Is it really needed?",
      "range": {
        "startLine": 3845,
        "startChar": 0,
        "endLine": 3848,
        "endChar": 5
      },
      "revId": "bb3f9f08da1189d5cbb30f6a3701b9f19e6bcfa8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f90fafb_d3e5f24c",
        "filename": "kleaf/kernel.bzl",
        "patchSetId": 20
      },
      "lineNbr": 3848,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-04-04T20:43:07Z",
      "side": 1,
      "message": "Yes, because Bazel needs to know all output paths ahead.\n\nA second choice is to declare a \"directory\", or a tarball, of all of the reports. Though I don\u0027t know how that works with copy_to_dist_dir yet. Let me try that.",
      "parentUuid": "08391eed_23c3642b",
      "range": {
        "startLine": 3845,
        "startChar": 0,
        "endLine": 3848,
        "endChar": 5
      },
      "revId": "bb3f9f08da1189d5cbb30f6a3701b9f19e6bcfa8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a70d604_f5b5b52b",
        "filename": "kleaf/kernel.bzl",
        "patchSetId": 20
      },
      "lineNbr": 3848,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-04-04T21:26:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5f90fafb_d3e5f24c",
      "range": {
        "startLine": 3845,
        "startChar": 0,
        "endLine": 3848,
        "endChar": 5
      },
      "revId": "bb3f9f08da1189d5cbb30f6a3701b9f19e6bcfa8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bfb71bf_f68cab32",
        "filename": "kleaf/kernel.bzl",
        "patchSetId": 20
      },
      "lineNbr": 3848,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-04-04T21:32:23Z",
      "side": 1,
      "message": "This will need CL:2055225.\n\nThough, missing CL:2055225 won\u0027t break the build, just missing the outputs.",
      "parentUuid": "2a70d604_f5b5b52b",
      "range": {
        "startLine": 3845,
        "startChar": 0,
        "endLine": 3848,
        "endChar": 5
      },
      "revId": "bb3f9f08da1189d5cbb30f6a3701b9f19e6bcfa8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7df89df5_fbccc876",
        "filename": "kleaf/kernel.bzl",
        "patchSetId": 20
      },
      "lineNbr": 3848,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-04-04T21:39:27Z",
      "side": 1,
      "message": "Note: the downside of the current approach is that, with CL:2055225, the directory abi_diff is not flattened in $DIST_DIR, unlike build_abi.sh where abi.report.* are in the $DIST_DIR directly.\n\nI can make CL:2055225 to flatten the directory too but I think it is not so correct. I am open to ideas here.",
      "parentUuid": "7bfb71bf_f68cab32",
      "range": {
        "startLine": 3845,
        "startChar": 0,
        "endLine": 3848,
        "endChar": 5
      },
      "revId": "bb3f9f08da1189d5cbb30f6a3701b9f19e6bcfa8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62d155a1_e6bdd47d",
        "filename": "kleaf/kernel.bzl",
        "patchSetId": 20
      },
      "lineNbr": 3848,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-04-05T05:11:46Z",
      "side": 1,
      "message": "I think this is a minor implementation detail, so closing until someone complains about this",
      "parentUuid": "7df89df5_fbccc876",
      "range": {
        "startLine": 3845,
        "startChar": 0,
        "endLine": 3848,
        "endChar": 5
      },
      "revId": "bb3f9f08da1189d5cbb30f6a3701b9f19e6bcfa8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8800d5d_b2ef70c3",
        "filename": "kleaf/kernel.bzl",
        "patchSetId": 20
      },
      "lineNbr": 3867,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2022-04-04T17:16:34Z",
      "side": 1,
      "message": "Wouldn\u0027t it be simpler to add a diff_abi argument of the form --enforce or --ignore-breaks to turn ABI breaks into a useful exit code (0 or 1), according to whether or not enforcement is needed?\n\nThis would be a continuation of moving logic out of build_abi.sh and into diff_abi.",
      "range": {
        "startLine": 3856,
        "startChar": 0,
        "endLine": 3867,
        "endChar": 10
      },
      "revId": "bb3f9f08da1189d5cbb30f6a3701b9f19e6bcfa8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09369de0_2a5d637d",
        "filename": "kleaf/kernel.bzl",
        "patchSetId": 20
      },
      "lineNbr": 3867,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-04-04T20:43:07Z",
      "side": 1,
      "message": "I moved this logic to a separate kmi_enforced rule to avoid re-diffing when nothing\u0027s changed.\n\nSo, if I were to put the KMI_ENFORCED check here, and if building the diff report fails because of the KMI_ENFORCED check, then doing a no-op rebuild will re-do the diffing when it doesn\u0027t need to.\n\nThat\u0027s why I put the exit code in a file but don\u0027t immediately fail.",
      "parentUuid": "f8800d5d_b2ef70c3",
      "range": {
        "startLine": 3856,
        "startChar": 0,
        "endLine": 3867,
        "endChar": 10
      },
      "revId": "bb3f9f08da1189d5cbb30f6a3701b9f19e6bcfa8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4032d588_c29b6a86",
        "filename": "kleaf/kernel.bzl",
        "patchSetId": 20
      },
      "lineNbr": 3867,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2022-04-05T17:18:32Z",
      "side": 1,
      "message": "You can still cache an \"outcome\" if you like and it won\u0027t change if the diff inputs, KMI_ENFORCED and UPDATE do not. Given that UPDATE\u003d1 updates the XML used as one of the inputs for the diff, I\u0027m not sure what the caching buys unless UPDATE is always 0. And in the UPDATE\u003d1 case, how often will a user request an update after a failure without actually changing anything at all? Actually, it will be odd, just like it is now, the XML update will happen, but the command will fail.\n\nAt a philosophical level I am uncomfortable about the diff_abi script being a build rule at all... it fundamentally has to consume a \"baseline\" XML file which is not built, but either should be fetched from a readonly store or is read from the tree but can be overwritten in update mode.\n\nI do feel this is building up if not technical debt then at least overengineering for an action that will in the future complete in less than 1s, if the inputs are in page cache, and I think diff_abi is being more tightly coupled than it could or should be.",
      "parentUuid": "09369de0_2a5d637d",
      "range": {
        "startLine": 3856,
        "startChar": 0,
        "endLine": 3867,
        "endChar": 10
      },
      "revId": "bb3f9f08da1189d5cbb30f6a3701b9f19e6bcfa8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "589d575e_a91f8b98",
        "filename": "kleaf/kernel.bzl",
        "patchSetId": 20
      },
      "lineNbr": 3923,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2022-04-04T17:16:34Z",
      "side": 1,
      "message": "I hope this can be simplified away if we treat diff_abi.",
      "range": {
        "startLine": 3916,
        "startChar": 0,
        "endLine": 3923,
        "endChar": 10
      },
      "revId": "bb3f9f08da1189d5cbb30f6a3701b9f19e6bcfa8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "432d19c0_6c589999",
        "filename": "kleaf/kernel.bzl",
        "patchSetId": 20
      },
      "lineNbr": 3923,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-04-04T20:43:07Z",
      "side": 1,
      "message": "See previous comment",
      "parentUuid": "589d575e_a91f8b98",
      "range": {
        "startLine": 3916,
        "startChar": 0,
        "endLine": 3923,
        "endChar": 10
      },
      "revId": "bb3f9f08da1189d5cbb30f6a3701b9f19e6bcfa8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
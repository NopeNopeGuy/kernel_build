{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bb5f1472_42ec0996",
        "filename": "kleaf/docs/testing.md",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-28T11:03:30Z",
      "side": 1,
      "message": "this document is about \"testing kleaf\", but the change is about scmversion. those are different changes that need to be split.",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b93b583_265c2e2e",
        "filename": "kleaf/docs/testing.md",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-28T22:10:58Z",
      "side": 1,
      "message": "The change is about \"testing scmversion\", not just \"scmversion\".\n\nI can split it if you want.",
      "parentUuid": "bb5f1472_42ec0996",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "213f5bfd_396eee58",
        "filename": "kleaf/docs/testing.md",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-29T00:16:07Z",
      "side": 1,
      "message": "Moved to a different CL.",
      "parentUuid": "3b93b583_265c2e2e",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff23e570_74e2449d",
        "filename": "kleaf/docs/testing.md",
        "patchSetId": 7
      },
      "lineNbr": 3,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-28T11:03:30Z",
      "side": 1,
      "message": "explain what is tested. even if you leave out details, set some expectations in what is and what is not tested.",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b70f4eb6_951477ff",
        "filename": "kleaf/docs/testing.md",
        "patchSetId": 7
      },
      "lineNbr": 3,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-29T00:16:07Z",
      "side": 1,
      "message": "Done, see follow up CL.",
      "parentUuid": "ff23e570_74e2449d",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2215170a_36b6563f",
        "filename": "kleaf/tests/kernel_module_test.py",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-28T11:03:30Z",
      "side": 1,
      "message": "nit empty line, why the separation?",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0cf15abd_70c2355d",
        "filename": "kleaf/tests/kernel_module_test.py",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-28T22:10:58Z",
      "side": 1,
      "message": "because my code formatter is not smart enough :(\n\nwill do",
      "parentUuid": "2215170a_36b6563f",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed44e73d_9579e876",
        "filename": "kleaf/tests/kernel_module_test.py",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-29T00:16:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0cf15abd_70c2355d",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28eaf228_28d6f88b",
        "filename": "kleaf/tests/kernel_module_test.py",
        "patchSetId": 7
      },
      "lineNbr": 44,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-28T11:03:30Z",
      "side": 1,
      "message": "12 is unlikely guaranteed forever. In fact, the hardcoded 12 recommendation from the kernel has been dropped and these days you should rather check a bit more flexible. \n\nMore context: https://lore.kernel.org/lkml/20181220000112.24891-1-avarab@gmail.com/",
      "range": {
        "startLine": 44,
        "startChar": 58,
        "endLine": 44,
        "endChar": 60
      },
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b7fdc9a_868cccdf",
        "filename": "kleaf/tests/kernel_module_test.py",
        "patchSetId": 7
      },
      "lineNbr": 44,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-28T11:03:30Z",
      "side": 1,
      "message": "define as a global constant",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9417dd58_8a03ea06",
        "filename": "kleaf/tests/kernel_module_test.py",
        "patchSetId": 7
      },
      "lineNbr": 44,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-28T11:03:30Z",
      "side": 1,
      "message": "no need to pre-compile, the python interpreter will cache the compiled regex for you. Just pass the pattern as r\"string\"",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4b9c978_11b42145",
        "filename": "kleaf/tests/kernel_module_test.py",
        "patchSetId": 7
      },
      "lineNbr": 44,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-28T22:10:58Z",
      "side": 1,
      "message": "Any suggestions? I could do {1,40} but 1 seems too small",
      "parentUuid": "28eaf228_28d6f88b",
      "range": {
        "startLine": 44,
        "startChar": 58,
        "endLine": 44,
        "endChar": 60
      },
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3505f292_8e317c77",
        "filename": "kleaf/tests/kernel_module_test.py",
        "patchSetId": 7
      },
      "lineNbr": 44,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-28T22:10:58Z",
      "side": 1,
      "message": "I think this is a class static constant, which is \"global\" in a sense. Any reason to put it outside fo the class?",
      "parentUuid": "1b7fdc9a_868cccdf",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9302a132_76488aff",
        "filename": "kleaf/tests/kernel_module_test.py",
        "patchSetId": 7
      },
      "lineNbr": 44,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-29T00:16:07Z",
      "side": 1,
      "message": "Resolving, let me know if you think global is better.",
      "parentUuid": "3505f292_8e317c77",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7d93b55_b4cdaca6",
        "filename": "kleaf/tests/kernel_module_test.py",
        "patchSetId": 7
      },
      "lineNbr": 44,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-29T00:16:07Z",
      "side": 1,
      "message": "Good to know! But with the usage below, let me keep it as a compiled regex.",
      "parentUuid": "9417dd58_8a03ea06",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e760362_2b7fbfcf",
        "filename": "kleaf/tests/kernel_module_test.py",
        "patchSetId": 7
      },
      "lineNbr": 44,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-29T00:16:07Z",
      "side": 1,
      "message": "Using 6,40 now",
      "parentUuid": "a4b9c978_11b42145",
      "range": {
        "startLine": 44,
        "startChar": 58,
        "endLine": 44,
        "endChar": 60
      },
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aef1d4d4_510ff696",
        "filename": "kleaf/tests/kernel_module_test.py",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-28T11:03:30Z",
      "side": 1,
      "message": "host tool?",
      "range": {
        "startLine": 47,
        "startChar": 40,
        "endLine": 47,
        "endChar": 47
      },
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ce9d228_1156e7e0",
        "filename": "kleaf/tests/kernel_module_test.py",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-28T11:03:30Z",
      "side": 1,
      "message": "a better way of safely extracting the scmversion is using \u0027modinfo\u0027. This is a host tool that is unlikely missing anywhere, but can also be built from the kernel sources.",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92d258d7_b019efec",
        "filename": "kleaf/tests/kernel_module_test.py",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-28T22:10:58Z",
      "side": 1,
      "message": "Yes. Since this is a test, I don\u0027t think we care about hermeticity here, right?",
      "parentUuid": "aef1d4d4_510ff696",
      "range": {
        "startLine": 47,
        "startChar": 40,
        "endLine": 47,
        "endChar": 47
      },
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72e3c211_68acfb05",
        "filename": "kleaf/tests/kernel_module_test.py",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-28T22:10:58Z",
      "side": 1,
      "message": "This sounds like a better idea. I\u0027ll replace it with host modinfo for now, and maybe later change it to modinfo from kernel sources",
      "parentUuid": "5ce9d228_1156e7e0",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a284e722_14dd1ef4",
        "filename": "kleaf/tests/kernel_module_test.py",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-29T00:16:07Z",
      "side": 1,
      "message": "I tried modinfo but on my machine, it is installed to `/usr/sbin`, where `bazel test ...` won\u0027t recognize as part of the `PATH`, so it won\u0027t be able to use modinfo from host.\n\nI added a TODO to change this to modinfo from the one build from kernel source, but for now, can I keep using host strings?",
      "parentUuid": "72e3c211_68acfb05",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ad8f34c_237b1632",
        "filename": "kleaf/tests/kernel_module_test.py",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-29T00:34:59Z",
      "side": 1,
      "message": "I also don\u0027t see modinfo.c anywhere in the kernel source tree.",
      "parentUuid": "a284e722_14dd1ef4",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18a393cf_1eba44b4",
        "filename": "kleaf/tests/kernel_module_test.py",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-29T01:17:00Z",
      "side": 1,
      "message": "I resolved the problem of using modinfo in CL:2047004, but then I also hit the problem of modinfo not returning the scmversion / vermagic. It appears that modinfo doesn\u0027t work for a subset of modules (I am hitting errors with spidev.ko in raviole-5.15 build), but strings will find the strings properly.\n\nMaybe I have an old version of modinfo that doesn\u0027t support certain new kernel module binary layouts?",
      "parentUuid": "3ad8f34c_237b1632",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "faa41d9a_c7c9c63c",
        "filename": "kleaf/tests/kernel_module_test.py",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-29T01:45:21Z",
      "side": 1,
      "message": "PS: spidev.ko is the only module that fails the test with modinfo but passes with strings.\n\nI added a hard-coded exempt list in the test now, but I don\u0027t know what to do with the module.",
      "parentUuid": "18a393cf_1eba44b4",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "415850ae_b3006246",
        "filename": "kleaf/tests/kernel_module_test.py",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-28T11:03:30Z",
      "side": 1,
      "message": "if you decide to keep the precompiled regex, then use it directly\n\n_scmversion_pattern.match(s)",
      "range": {
        "startLine": 50,
        "startChar": 10,
        "endLine": 50,
        "endChar": 60
      },
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6da8edd4_52be5b17",
        "filename": "kleaf/tests/kernel_module_test.py",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-29T00:16:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "415850ae_b3006246",
      "range": {
        "startLine": 50,
        "startChar": 10,
        "endLine": 50,
        "endChar": 60
      },
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e190c277_42612c79",
        "filename": "kleaf/tests/kernel_test.bzl",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-28T11:03:30Z",
      "side": 1,
      "message": "it feels wasteful that you are writing a file with arguments, then you substitute the path to it in a templated test file and eventually return this as an executable to test.\n\nThere must be a better way to parameterize the tests. Perhaps unittest.bzl from the skylib? https://docs.bazel.build/versions/main/skylark/testing.html",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad46fcc2_c5c1a596",
        "filename": "kleaf/tests/kernel_test.bzl",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-28T22:10:58Z",
      "side": 1,
      "message": "unittest.bzl is for analysis-time tests.\n\nThese `bazel test`s are for artifacts.\n\nhttps://docs.bazel.build/versions/main/skylark/testing.html#for-validating-artifacts",
      "parentUuid": "e190c277_42612c79",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5af17bf3_da8cdf76",
        "filename": "kleaf/tests/kernel_test.bzl",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-28T22:16:34Z",
      "side": 1,
      "message": "Also, this is not unique to tests; I face the same problem when writing any kind of executables that can be `bazel run`.",
      "parentUuid": "ad46fcc2_c5c1a596",
      "revId": "efb906adf6465ff9d852c5d8a7cf0ae363c31f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
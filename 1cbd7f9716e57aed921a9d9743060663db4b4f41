{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bb16e826_4b09504f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2023-02-16T21:34:40Z",
      "side": 1,
      "message": "Hi John:\n\nThanks for the patch.\n\nThe reason we don\u0027t have this infrastructure as we don\u0027t support signing the vendor modules[1][2]. Can you explain why do you need this?\n\nWe need to make sure this doesn\u0027t pave a way for the vendor to bypass GKI modules feature as signed modules which can be verified using the kernel\u0027s key ring will have the unrestricted access to runtime.\n\nCR-1 until we know more.\n\n[1]: https://source.android.com/docs/core/architecture/kernel/loadable-kernel-modules#module-signing\n[2]: https://docs.partner.android.com/partners/guides/gki/whatsnew#2022-jan-21\n\nThanks,\nRamji",
      "revId": "1cbd7f9716e57aed921a9d9743060663db4b4f41",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3379088c_3a8da91c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2023-02-16T21:37:38Z",
      "side": 1,
      "message": "Markdown ate the links (Reposting links):\n\n- https://docs.partner.android.com/partners/guides/gki/whatsnew#2022-jan-21\n- https://source.android.com/docs/core/architecture/kernel/loadable-kernel-modules#module-signing",
      "parentUuid": "bb16e826_4b09504f",
      "revId": "1cbd7f9716e57aed921a9d9743060663db4b4f41",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6816cc7_30542519",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2023-02-16T21:59:03Z",
      "side": 1,
      "message": "Hi Ramji, as we understand it, Kleaf is not an Android-specific framework. We have several non-GKI targets we\u0027re planning on using Kleaf to build and would want to be able to sign the modules for them. At least until this point, Kleaf has been able to satisfy all of the needs of our non\u003dGKI targets.\n\nCan we clarify Google\u0027s intention here?",
      "parentUuid": "3379088c_3a8da91c",
      "revId": "1cbd7f9716e57aed921a9d9743060663db4b4f41",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f123bed_11d76532",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-02-17T00:23:20Z",
      "side": 1,
      "message": "LGTM implementation-wise. Ramji / John, please discuss in the bug to seek agreement in this issue.",
      "revId": "1cbd7f9716e57aed921a9d9743060663db4b4f41",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7069fc3_ee61e232",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-02-17T00:25:47Z",
      "side": 1,
      "message": "Implementation is okay from Kleaf\u0027s perspective. Policy-wise, Ramji has the authority here. I\u0027ll leave this to Ramji.",
      "parentUuid": "a6816cc7_30542519",
      "revId": "1cbd7f9716e57aed921a9d9743060663db4b4f41",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd218ad9_c9cfe200",
        "filename": "kleaf/impl/kernel_config.bzl",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-02-17T00:23:20Z",
      "side": 1,
      "message": "nit: could you please refactor the code to deduplicate the logic with _determine_raw_symbollist_path? This helps not duplicating the chunk L40~L58.",
      "range": {
        "startLine": 79,
        "startChar": 4,
        "endLine": 79,
        "endChar": 34
      },
      "revId": "1cbd7f9716e57aed921a9d9743060663db4b4f41",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "37ea1e75_2aade770",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-05-24T09:12:31Z",
      "side": 1,
      "message": "This change alone does not seem enough to actually pass this information to kernel_build. So, an additional change is needed. But before you do this. We have already a debug option that should work very well: `--notrim`. I am hesitant to take yet another one.",
      "revId": "8385ad01dc88be2e8368bec273c19532123ac4b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "025671d4_6efed38e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-05-25T18:50:40Z",
      "side": 1,
      "message": "additional change: CL:2601885 and cherry-picks.\n\n@quic_johmoo@quicinc.com could you please address Matthias\u0027s comment and see if `--notrim` works for you, and if not, explain why in the commit message?",
      "parentUuid": "37ea1e75_2aade770",
      "revId": "8385ad01dc88be2e8368bec273c19532123ac4b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "064b1823_fff2cfe8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-05-26T01:08:38Z",
      "side": 1,
      "message": "I put the changes in the same topic.\n\n@maennich@google.com Qualcomm has responded in the bug. Could you please take a look there? b/281573008",
      "parentUuid": "025671d4_6efed38e",
      "revId": "8385ad01dc88be2e8368bec273c19532123ac4b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4528707_1eef63b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1961395
      },
      "writtenOn": "2023-05-26T10:17:49Z",
      "side": 1,
      "message": "My 2c: If this is for development/debugging purposes there are [options](https://android.googlesource.com/kernel/build/+/refs/heads/master/kleaf/docs/debugging.md#disabling-checks) to bypass these checks if `--notrim` alone is not enough.",
      "parentUuid": "064b1823_fff2cfe8",
      "revId": "8385ad01dc88be2e8368bec273c19532123ac4b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df402ae1_1fd5b63b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-06-05T12:48:14Z",
      "side": 1,
      "message": "Awaiting outcome of discussion in bug.",
      "revId": "8385ad01dc88be2e8368bec273c19532123ac4b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e490bbb_cc073ce8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-06-08T09:31:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df402ae1_1fd5b63b",
      "revId": "8385ad01dc88be2e8368bec273c19532123ac4b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea208389_dbba1432",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-06-08T09:31:42Z",
      "side": 1,
      "message": "The only thing that bothers me with the change is that we need to have a change in the common kernels (adding the filegroup to the symbol list list). Is there a chance that we can handle this within Kleaf only? E.g. by actually defining an implicit input in kernel_build? After all, if this is a flag it should apply to all builds and not just the ones that happen to have the filegroup defined.",
      "revId": "8385ad01dc88be2e8368bec273c19532123ac4b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3da028c3_82f79403",
        "filename": "kleaf/BUILD.bazel",
        "patchSetId": 3
      },
      "lineNbr": 147,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-06-05T12:48:14Z",
      "side": 1,
      "message": "nit: that might be nitpicking, but how does the interface look then? In particular I want to make sure we get the plural correct:\n\n`--gki_aarch64_additional_symbol_lists\u003dpath/to/list`, how are multiple lists specified?",
      "range": {
        "startLine": 147,
        "startChar": 12,
        "endLine": 147,
        "endChar": 47
      },
      "revId": "8385ad01dc88be2e8368bec273c19532123ac4b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d37aad96_06bdb6f9",
        "filename": "kleaf/BUILD.bazel",
        "patchSetId": 3
      },
      "lineNbr": 147,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-06-06T20:24:21Z",
      "side": 1,
      "message": "`--gki_aarch64_additional_symbol_lists\u003d//path/to:a_label`. The label needs to be an exports_files(), a filegroup, etc.\n\nIf multiple files are needed, a filegroup is needed.",
      "parentUuid": "3da028c3_82f79403",
      "range": {
        "startLine": 147,
        "startChar": 12,
        "endLine": 147,
        "endChar": 47
      },
      "revId": "8385ad01dc88be2e8368bec273c19532123ac4b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2595287c_f69bd763",
        "filename": "kleaf/BUILD.bazel",
        "patchSetId": 3
      },
      "lineNbr": 147,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-06-08T09:31:42Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "d37aad96_06bdb6f9",
      "range": {
        "startLine": 147,
        "startChar": 12,
        "endLine": 147,
        "endChar": 47
      },
      "revId": "8385ad01dc88be2e8368bec273c19532123ac4b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "181452f0_78e0ff0b",
        "filename": "kleaf/bazelrc/flags.bazelrc",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-05-24T09:12:31Z",
      "side": 1,
      "message": "I suppose those lists are on top of the existing \"additional\" lists. As such they should have another name. Further, the correct terminology would be `kmi_symbol_list`. How about `user_kmi_symbol_lists` ?",
      "revId": "8385ad01dc88be2e8368bec273c19532123ac4b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13a8eb63_b4084ad0",
        "filename": "kleaf/bazelrc/flags.bazelrc",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-05-26T01:09:03Z",
      "side": 1,
      "message": "+1; the naming aligns with `user.bazelrc` too",
      "parentUuid": "181452f0_78e0ff0b",
      "revId": "8385ad01dc88be2e8368bec273c19532123ac4b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
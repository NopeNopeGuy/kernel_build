{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "89f5b9d4_bd47ddc9",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 4
      },
      "lineNbr": 1884,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2023-03-23T21:47:13Z",
      "side": 1,
      "message": "This doesn\u0027t build for me:\n```\nError: \u0027KernelBuildAbiInfo\u0027 value has no field or method \u0027src_protected_modules_list\u0027\n```",
      "range": {
        "startLine": 1884,
        "startChar": 0,
        "endLine": 1884,
        "endChar": 118
      },
      "revId": "f31c5bdeea3caa3d48a68e5ad068a1a43dac2e57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b2199e0_a33be15a",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 4
      },
      "lineNbr": 1884,
      "author": {
        "id": 1858345
      },
      "writtenOn": "2023-03-23T21:51:32Z",
      "side": 1,
      "message": "Hmm, it\u0027s been building for me in our tree. Any way I could repro the issue?\n\n@elsk@google.com, I could do this, does it seem also correct?\n\n```\nif base_kernel_utils.get_base_kernel(ctx)[KernelBuildAbiInfo] \u0026\u0026 base_kernel_utils.get_base_kernel(ctx)[KernelBuildAbiInfo].src_protected_modules_list:\n    ...\n```",
      "parentUuid": "89f5b9d4_bd47ddc9",
      "range": {
        "startLine": 1884,
        "startChar": 0,
        "endLine": 1884,
        "endChar": 118
      },
      "revId": "f31c5bdeea3caa3d48a68e5ad068a1a43dac2e57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75d220a7_e0084306",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 4
      },
      "lineNbr": 1884,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2023-03-23T22:13:45Z",
      "side": 1,
      "message": "Probably protected_exports_list is not set in the kernel_build for the device.\n\nLike this: https://cs.android.com/android/kernel/superproject/+/common-android14-6.1:common/BUILD.bazel;l\u003d30\n\n`kleaf` also supports the non GKI targets from the ACK; so the default is not set to the base_kernel\u0027s value.\n\nhttps://android-review.git.corp.google.com/c/kernel/build/+/2470261/comment/e42f01d1_2be3558c/",
      "parentUuid": "1b2199e0_a33be15a",
      "range": {
        "startLine": 1884,
        "startChar": 0,
        "endLine": 1884,
        "endChar": 118
      },
      "revId": "f31c5bdeea3caa3d48a68e5ad068a1a43dac2e57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "469b7405_636a7858",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 4
      },
      "lineNbr": 1884,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2023-03-23T22:16:50Z",
      "side": 1,
      "message": "My mixed build configuration is setting:\n\n```\nbase_kernel \u003d \"//common:kernel_aarch64_download_or_build\",\n```",
      "parentUuid": "75d220a7_e0084306",
      "range": {
        "startLine": 1884,
        "startChar": 0,
        "endLine": 1884,
        "endChar": 118
      },
      "revId": "f31c5bdeea3caa3d48a68e5ad068a1a43dac2e57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97b071e6_7ac8cb36",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 4
      },
      "lineNbr": 1884,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2023-03-23T22:18:55Z",
      "side": 1,
      "message": "You are correct. \n\n```\nsrc_protected_modules_list \u003d base_kernel_utils.get_base_kernel(ctx)[KernelBuildAbiInfo].src_protected_modules_list\n\n```\n\nshould have pulled it at least in case of `build` not sure about `download` case though.",
      "parentUuid": "469b7405_636a7858",
      "range": {
        "startLine": 1884,
        "startChar": 0,
        "endLine": 1884,
        "endChar": 118
      },
      "revId": "f31c5bdeea3caa3d48a68e5ad068a1a43dac2e57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04303b82_f0500be9",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 4
      },
      "lineNbr": 1884,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-03-23T23:51:05Z",
      "side": 1,
      "message": "The Pixel error is intentional to catch the incompatibility between kernel_filegroup and kernel_build.\n\nLet me take a closer look at this error and come back to this CL.",
      "parentUuid": "97b071e6_7ac8cb36",
      "range": {
        "startLine": 1884,
        "startChar": 0,
        "endLine": 1884,
        "endChar": 118
      },
      "revId": "f31c5bdeea3caa3d48a68e5ad068a1a43dac2e57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed9ca7b9_0ed7fbf8",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 4
      },
      "lineNbr": 1884,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-03-24T00:13:03Z",
      "side": 1,
      "message": "I am going to leave a pretty long pedantic comment below. Please assign the bug to me or @umendez@google.com if you are not sure how to handle this.\n\n-----\n\nAccording to the doc of KernelBuildAbiInfo: https://cs.android.com/android/kernel/superproject/+/common-android-mainline:build/kernel/kleaf/impl/common_providers.bzl;l\u003d141;drc\u003d47401de338a7cc4fffbfb171ffebef986b53fc15\n```\n   doc \u003d \"A provider that specifies the expectations of a [`kernel_abi`](#kernel_abi) on a `kernel_build`.\",\n```\n\nYou should not assume that base_kernel contains `KernelBuildAbiInfo` with full information. And in this case, `kernel_filegroup` returns an incomplete `KernelBuildAbiInfo`. This is intentional because `kernel_filegroup` does not have other information, like `src_protected_modules_list`.\n\nSo in order to solve this, you\u0027ll need to either let base_kernel exposes `src_protected_modules_list` through some other provider, or re-purpose `KernelBuildAbiInfo` for this.\n\n---------\n\nThis is what I suggest to do in the short term:\n\n\n- Add `protected_modules_list` to kenrel_filegroup calls in `common_kernels.bzl`\n\nhttps://cs.android.com/android/kernel/superproject/+/common-android-mainline:build/kernel/kleaf/common_kernels.bzl;l\u003d852;drc\u003d714118718ac3e8feea9b1516235517921fca36b5\n\n```\nprotected_modules_list \u003d target_configs[name].get(\"protected_modules_list\")\n```\n\nwhere `target_configs` is defined in the `define_common_kernels()` macro:\n\nhttps://cs.android.com/android/kernel/superproject/+/common-android-mainline:build/kernel/kleaf/common_kernels.bzl;l\u003d534;drc\u003d714118718ac3e8feea9b1516235517921fca36b5\n\nso you need to send it to `_define_prebuilts()` macro via an argument.\n\n- Add `protected_modules_list` attribute to kernel_filegroup\n\nhttps://cs.android.com/android/kernel/superproject/+/common-android-mainline:build/kernel/kleaf/impl/kernel_filegroup.bzl;l\u003d166;drc\u003d011874cf1a23af73c204c1abde45c75b7c6662dd\n\n```\n\"protected_modules_list\": attr.label(allow_single_file \u003d True),  \n```\n\n- Change `KernelBuildAbiInfo` doc so it is more generic, e.g.\n\n```\nA provider that specifies ABI-related information of a `kernel_build`.\n```\n\n- Add `src_protected_modules_list` to the `KernelBuildAbiInfo` returned by `kernel_filegroup`.\n\nhttps://cs.android.com/android/kernel/superproject/+/common-android-mainline:build/kernel/kleaf/impl/kernel_filegroup.bzl;l\u003d119;drc\u003d011874cf1a23af73c204c1abde45c75b7c6662dd\n\n```\nKernelBuildAbiInfo(\n  src_protected_modules_list \u003d ctx.file.protected_modules_list,\n  ...\n)\n```",
      "parentUuid": "04303b82_f0500be9",
      "range": {
        "startLine": 1884,
        "startChar": 0,
        "endLine": 1884,
        "endChar": 118
      },
      "revId": "f31c5bdeea3caa3d48a68e5ad068a1a43dac2e57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aea3aede_a4fe2e31",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 4
      },
      "lineNbr": 1884,
      "author": {
        "id": 1961395
      },
      "writtenOn": "2023-03-28T20:58:55Z",
      "side": 1,
      "message": "I\u0027ve put the suggestions from @elsk@google.com in CL:2511076 feel free to put this Change on top of it and see if it works.",
      "parentUuid": "ed9ca7b9_0ed7fbf8",
      "range": {
        "startLine": 1884,
        "startChar": 0,
        "endLine": 1884,
        "endChar": 118
      },
      "revId": "f31c5bdeea3caa3d48a68e5ad068a1a43dac2e57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d105564e_f6015d87",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 4
      },
      "lineNbr": 1884,
      "author": {
        "id": 1858345
      },
      "writtenOn": "2023-05-09T23:42:21Z",
      "side": 1,
      "message": "@willmcvicker, does this change work for you now that CL:2511076 is merged?",
      "parentUuid": "aea3aede_a4fe2e31",
      "range": {
        "startLine": 1884,
        "startChar": 0,
        "endLine": 1884,
        "endChar": 118
      },
      "revId": "f31c5bdeea3caa3d48a68e5ad068a1a43dac2e57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a62bfc2_1af56800",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 4
      },
      "lineNbr": 1884,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-05-12T20:19:25Z",
      "side": 1,
      "message": "@willmcvicker@google.com PTAL at Elliot\u0027s comment",
      "parentUuid": "d105564e_f6015d87",
      "range": {
        "startLine": 1884,
        "startChar": 0,
        "endLine": 1884,
        "endChar": 118
      },
      "revId": "f31c5bdeea3caa3d48a68e5ad068a1a43dac2e57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "929a842c_37921912",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 4
      },
      "lineNbr": 1884,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2023-06-02T17:14:52Z",
      "side": 1,
      "message": "Sorry I missed this. Let me take a look today.",
      "parentUuid": "5a62bfc2_1af56800",
      "range": {
        "startLine": 1884,
        "startChar": 0,
        "endLine": 1884,
        "endChar": 118
      },
      "revId": "f31c5bdeea3caa3d48a68e5ad068a1a43dac2e57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "faf133f5_ada1368e",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 4
      },
      "lineNbr": 1884,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-06-02T17:28:18Z",
      "side": 1,
      "message": "Note: CL:2511076 does not set protected_modules_list for //common:kernel_aarch64_downloaded. I think we need to put this file in DefaultInfo so it shows up on build bots as well. This\u0027ll belong to a separate change.\n\n(That is, the change right now won\u0027t work with `//common:kernel_aarch64_downloaded` for now)",
      "parentUuid": "929a842c_37921912",
      "range": {
        "startLine": 1884,
        "startChar": 0,
        "endLine": 1884,
        "endChar": 118
      },
      "revId": "f31c5bdeea3caa3d48a68e5ad068a1a43dac2e57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d5900c6_490dfc87",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 4
      },
      "lineNbr": 1884,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-06-02T17:52:10Z",
      "side": 1,
      "message": "Here\u0027s my suggestion:\n\n- Turn this into a hard failure instead of silently filtering protected modules out;\n- On our end, the Kleaf team will work on uploading the list of protected GKI modules to ci.android.com, and making sure that `//common:kernel_aarch64_downloaded` has protected_modules_list set. (Internal Bug 285599560 to track this)",
      "parentUuid": "faf133f5_ada1368e",
      "range": {
        "startLine": 1884,
        "startChar": 0,
        "endLine": 1884,
        "endChar": 118
      },
      "revId": "f31c5bdeea3caa3d48a68e5ad068a1a43dac2e57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa51a931_06403a3d",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 4
      },
      "lineNbr": 1893,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2023-03-23T22:07:58Z",
      "side": 1,
      "message": "I think you can just do this:\n\n```\nbase_modules\u003d$(grep -v -w -F -f {protected_modules_list_path} {all_module_basenames_file})\n```\n\nHowever, I think that it\u0027s possible that the modules in `all_module_basenames_file` could just be the basename and not include the path. In that case, neither of these solutions would work. So you probably need to run $(basename ${{module}})",
      "range": {
        "startLine": 1888,
        "startChar": 0,
        "endLine": 1893,
        "endChar": 0
      },
      "revId": "f31c5bdeea3caa3d48a68e5ad068a1a43dac2e57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ec93d78_3adf8fd4",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 4
      },
      "lineNbr": 1893,
      "author": {
        "id": 1858345
      },
      "writtenOn": "2023-03-23T22:15:11Z",
      "side": 1,
      "message": "- base_modules is list of \"complete\" path to module (i.e. drivers/virt/gunyah/gunyah_irqfd.ko)\n - all_module_basenames_file contains only \"gunyah_irqfd.ko\"\n - protected_modules_list_path contains \"complete\" path to module (drivers/virt/gunyah/gunyah_irqfd.ko)\n \nMy proposed solution works because it is searching if \"gunyah_irqfd.ko\" is part of protected_modules_list_path (fixed string, word match) which has \"drivers/virt/gunyah/gunyah_irqfd.ko\".\n\nI think your optimization will not work because it would look for \"drivers/virt/gunyah/gunyah_irqfd.ko\" inside file with only \"gunyah_irqfd.ko\")",
      "parentUuid": "fa51a931_06403a3d",
      "range": {
        "startLine": 1888,
        "startChar": 0,
        "endLine": 1893,
        "endChar": 0
      },
      "revId": "f31c5bdeea3caa3d48a68e5ad068a1a43dac2e57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb403baf_60b33bd3",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 4
      },
      "lineNbr": 1893,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2023-03-23T22:16:50Z",
      "side": 1,
      "message": "Okay, sounds good to me.",
      "parentUuid": "4ec93d78_3adf8fd4",
      "range": {
        "startLine": 1888,
        "startChar": 0,
        "endLine": 1893,
        "endChar": 0
      },
      "revId": "f31c5bdeea3caa3d48a68e5ad068a1a43dac2e57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
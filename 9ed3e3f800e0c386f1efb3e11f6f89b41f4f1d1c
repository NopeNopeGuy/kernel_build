{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4d7dfcf4_e17141b3",
        "filename": "kleaf/impl/ddk/ddk_module.bzl",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-21T05:02:00Z",
      "side": 1,
      "message": "This should be \"subject to bourne shell tokenization\" like the native cc_library one. AFAIK, they should not be quoted unless it is quoted explictly. Right?\n\nhttps://docs.bazel.build/versions/4.1.0/be/common-definitions.html#sh-tokenization",
      "revId": "9ed3e3f800e0c386f1efb3e11f6f89b41f4f1d1c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ddee216f_12653b79",
        "filename": "kleaf/impl/ddk/ddk_module.bzl",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-21T20:33:05Z",
      "side": 1,
      "message": "As discussed in email, this should not do tokenization.",
      "parentUuid": "4d7dfcf4_e17141b3",
      "revId": "9ed3e3f800e0c386f1efb3e11f6f89b41f4f1d1c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "410cb890_b1c484ad",
        "filename": "kleaf/impl/ddk/gen_makefiles.py",
        "patchSetId": 4
      },
      "lineNbr": 145,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-21T05:30:21Z",
      "side": 1,
      "message": "This should keep the same logic as cc_library:\n\n```\ntokens \u003d shlex.split(local_define)\nif len(tokens) !\u003d 1:\n  die()\nwrite_ccflag(out_file, f\"-D{tokens[0]}\")\n```\n\nFor copts, skip the `len(tokens) \u003d\u003d 1` check and `write_ccflag` on each token.",
      "revId": "9ed3e3f800e0c386f1efb3e11f6f89b41f4f1d1c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cbb537b5_c5ee4553",
        "filename": "kleaf/impl/ddk/gen_makefiles.py",
        "patchSetId": 4
      },
      "lineNbr": 145,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-21T20:33:05Z",
      "side": 1,
      "message": "As discussed in email, this should not do tokenization.",
      "parentUuid": "410cb890_b1c484ad",
      "revId": "9ed3e3f800e0c386f1efb3e11f6f89b41f4f1d1c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5017b3a7_4660912d",
        "filename": "kleaf/impl/ddk/makefiles.bzl",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-21T07:02:38Z",
      "side": 1,
      "message": "Should \"expand_location\" here",
      "revId": "9ed3e3f800e0c386f1efb3e11f6f89b41f4f1d1c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d0ad5da_939acb7b",
        "filename": "kleaf/impl/ddk/makefiles.bzl",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-21T22:38:45Z",
      "side": 1,
      "message": "Done, but I am not sure if I should do this at all.\n\nThe problem of supporting $(location) expansion is that its behavior differs from what `copts` does. See explanation here:\n\nhttps://android-review.googlesource.com/c/kernel/build/+/2264923/1/kleaf/impl/ddk/ddk_module.bzl#143",
      "parentUuid": "5017b3a7_4660912d",
      "revId": "9ed3e3f800e0c386f1efb3e11f6f89b41f4f1d1c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b4308e6_88aa83f9",
        "filename": "kleaf/impl/ddk/makefiles.bzl",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-21T22:44:04Z",
      "side": 1,
      "message": "That is, if you specify \n\n```\nlocal_defines \u003d [\"FOO\u003d$(location //other:foo)\"]\n```\n\nthen the option to clang is\n\n```\nclang -D FOO\u003dother/foo\n```\n\nBut if you specify\n\n```\n# in package //package\ncopt \u003d [\"-include\", \"$(location //other:foo)\"]\n```\n\nthen the option to clang is\n\n```\nclang -include ../other/foo\n```\n\nThis can cause confusion, I guess?",
      "parentUuid": "3d0ad5da_939acb7b",
      "revId": "9ed3e3f800e0c386f1efb3e11f6f89b41f4f1d1c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b02c611a_0a776215",
        "filename": "kleaf/impl/ddk/makefiles.bzl",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2022-10-22T00:08:36Z",
      "side": 1,
      "message": "I don\u0027t see a reason to use a path for a define. I\u0027m not sure if that is even supported.",
      "parentUuid": "7b4308e6_88aa83f9",
      "revId": "9ed3e3f800e0c386f1efb3e11f6f89b41f4f1d1c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d991bb4_cb4d62fd",
        "filename": "kleaf/impl/ddk/makefiles.bzl",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-22T00:59:53Z",
      "side": 1,
      "message": "I agree that this is an awful thing to support. Dropping it and, if someone ever request about it, we\u0027ll discuss with them about the needs and add it back as an optional feature.",
      "parentUuid": "b02c611a_0a776215",
      "revId": "9ed3e3f800e0c386f1efb3e11f6f89b41f4f1d1c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
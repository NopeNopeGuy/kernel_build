{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "91384066_0abaf0ac",
        "filename": "build_utils.sh",
        "patchSetId": 3
      },
      "lineNbr": 375,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2023-09-07T02:47:14Z",
      "side": 1,
      "message": "Does `super.img` need avb hash footer?",
      "revId": "7eb8a42747c62d387c294c12b6220f929228d417",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ac1b9a4_925ec4e8",
        "filename": "build_utils.sh",
        "patchSetId": 3
      },
      "lineNbr": 375,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-07T03:07:28Z",
      "side": 1,
      "message": "No. AVB footer is only added to individual partition images.",
      "parentUuid": "91384066_0abaf0ac",
      "revId": "7eb8a42747c62d387c294c12b6220f929228d417",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01dea3af_e80ca8be",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T22:32:07Z",
      "side": 1,
      "message": "nit: The convention is not to quote here. If you do want to quote, change L49 to `build_utils_sh \u003d shell.quote(ctx.file._build_utils_sh.path),`\n\nhttps://cs.android.com/android/kernel/superproject/+/common-android-mainline:build/kernel/kleaf/fail.bzl;l\u003d45;drc\u003dc617c9252ade6d623d7b7c9ae80f8896627d427d\n\n(but it is not necessary, honestly) ðŸ˜Š",
      "range": {
        "startLine": 37,
        "startChar": 21,
        "endLine": 37,
        "endChar": 22
      },
      "revId": "7eb8a42747c62d387c294c12b6220f929228d417",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74b93e0a_4df95c0d",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2023-09-06T22:34:53Z",
      "side": 1,
      "message": "Is it possible for these paths to have a space in them? If so, would the command break?",
      "parentUuid": "01dea3af_e80ca8be",
      "range": {
        "startLine": 37,
        "startChar": 21,
        "endLine": 37,
        "endChar": 22
      },
      "revId": "7eb8a42747c62d387c294c12b6220f929228d417",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f9f971f_739bf08f",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-07T02:21:09Z",
      "side": 1,
      "message": "technically yes if the user checks out the tree in a path with spaces. It will break. But we mostly don\u0027t care. We don\u0027t quote paths virtually anywhere in Kleaf, but just tell people to not check out the tree in paths with weird characters.\n\nSo feel free not to quote them. I just suggest that, if you are quoting, then please use the most correct way to quote (shell.quote)",
      "parentUuid": "74b93e0a_4df95c0d",
      "range": {
        "startLine": 37,
        "startChar": 21,
        "endLine": 37,
        "endChar": 22
      },
      "revId": "7eb8a42747c62d387c294c12b6220f929228d417",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "790af098_6989489b",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 3
      },
      "lineNbr": 82,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T22:32:07Z",
      "side": 1,
      "message": "same for these. You don\u0027t have to quote, but if you do, please use shell.quote",
      "range": {
        "startLine": 82,
        "startChar": 25,
        "endLine": 82,
        "endChar": 26
      },
      "revId": "7eb8a42747c62d387c294c12b6220f929228d417",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccece439_2534889f",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T22:32:07Z",
      "side": 1,
      "message": "Now that I think about it -- @ramjiyani@google.com this will conflict with your changes to system_dlkm with multiple different filesystem formats included in DefaultInfo, right?",
      "range": {
        "startLine": 113,
        "startChar": 0,
        "endLine": 113,
        "endChar": 31
      },
      "revId": "7eb8a42747c62d387c294c12b6220f929228d417",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c021dac_1f5e76d1",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2023-09-07T02:47:14Z",
      "side": 1,
      "message": "I am not sure. The way I understand is attribute `system_dlkm_image` here will be set to either `system_dlkm.ext4.img` OR `system_dlkm.erofs.img` and both of them will be in the `DefaultInfo`. So, should be fine?",
      "parentUuid": "ccece439_2534889f",
      "range": {
        "startLine": 113,
        "startChar": 0,
        "endLine": 113,
        "endChar": 31
      },
      "revId": "7eb8a42747c62d387c294c12b6220f929228d417",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20b4e325_d01e0f20",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-07T03:06:47Z",
      "side": 1,
      "message": "No. The problem is that both images will be part of `SUPER_IMAGE_CONTENTS`, which goes into\n\nhttps://android-review.git.corp.google.com/c/kernel/build/+/2741980/3/build_utils.sh\n\nand will start breaking.\n\n---\n\nMy suggestion to @quic_johmoo@quicinc.com: this (and L118) should be `allow_single_file` to enforce the user to select a file by whatever means [1]. Also in L27~33, instead of blindly putting passing all images to SUPER_IMAGE_CONTENTS, it should explicitly pass the path to `ctx.file.X_dlkm_image` without assuming the name of the file (in build_utils.sh, the basename is assuming the name of the file)\n\n[1] The user may either provide a prebuilt file, or we can (in a separate CL) add OutputGroupInfo to system_dlkm so the user can use `filegroup(output_group \u003d ...)` to select the needed file.",
      "parentUuid": "9c021dac_1f5e76d1",
      "range": {
        "startLine": 113,
        "startChar": 0,
        "endLine": 113,
        "endChar": 31
      },
      "revId": "7eb8a42747c62d387c294c12b6220f929228d417",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf3e4927_b2aef080",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1966817
      },
      "writtenOn": "2023-09-07T16:58:52Z",
      "side": 1,
      "message": "It\u0027s not clear to me how to add the `OutputGroupInfo` to the `system_dlkm_image` and `vendor_dlkm_image` rules, so if I change this to `allow_single_file`, I don\u0027t know how to pass in just the `.img` file from those rules. Can you point to an example?",
      "parentUuid": "20b4e325_d01e0f20",
      "range": {
        "startLine": 113,
        "startChar": 0,
        "endLine": 113,
        "endChar": 31
      },
      "revId": "7eb8a42747c62d387c294c12b6220f929228d417",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
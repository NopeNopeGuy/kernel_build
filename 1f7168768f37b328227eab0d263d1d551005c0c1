{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "98da1a09_d4e7dd2a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T03:39:09Z",
      "side": 1,
      "message": "The overall idea LGTM. Thank you for upstreaming this!",
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "919ac8b3_cecb781c",
        "filename": "build_utils.sh",
        "patchSetId": 1
      },
      "lineNbr": 349,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T03:30:04Z",
      "side": 1,
      "message": "drop (for cleaner stdout output)\n\nThe other echo\u0027s in other build_X functions should also be dropped, but it is outside the scope of this change.",
      "range": {
        "startLine": 347,
        "startChar": 0,
        "endLine": 349,
        "endChar": 0
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec2f96b5_804f40f3",
        "filename": "build_utils.sh",
        "patchSetId": 1
      },
      "lineNbr": 349,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2023-09-06T19:53:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "919ac8b3_cecb781c",
      "range": {
        "startLine": 347,
        "startChar": 0,
        "endLine": 349,
        "endChar": 0
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44b53415_acb65344",
        "filename": "build_utils.sh",
        "patchSetId": 1
      },
      "lineNbr": 351,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T03:38:45Z",
      "side": 1,
      "message": "If using DIST_DIR\u003dutils.intermediates_dir(), then I would also recommend writing this to $DIST_DIR (which is our intermediates dir) instead of writing to /tmp",
      "range": {
        "startLine": 351,
        "startChar": 22,
        "endLine": 351,
        "endChar": 28
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7940b70_a0a34790",
        "filename": "build_utils.sh",
        "patchSetId": 1
      },
      "lineNbr": 351,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2023-09-06T19:53:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44b53415_acb65344",
      "range": {
        "startLine": 351,
        "startChar": 22,
        "endLine": 351,
        "endChar": 28
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43597002_ed1e7c32",
        "filename": "build_utils.sh",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T03:30:04Z",
      "side": 1,
      "message": "Do you need this?",
      "range": {
        "startLine": 354,
        "startChar": 26,
        "endLine": 354,
        "endChar": 29
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c497837_58f0474a",
        "filename": "build_utils.sh",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T03:41:04Z",
      "side": 1,
      "message": "I mean just `local super_image_size\u003d\"${SUPER_IMAGE_SIZE:-268435456}\"`\n\nOr, as I suggested in the other comment, simply assert that the variable should be set\n\n```\nif [[ -z ${SUPER_IMAGE_SIZE} ]]; then\n  echo \"ERROR: ...\" \u003e\u00262\n  exit 1\nfi\n```",
      "parentUuid": "43597002_ed1e7c32",
      "range": {
        "startLine": 354,
        "startChar": 26,
        "endLine": 354,
        "endChar": 29
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93034f9d_d23c4bb5",
        "filename": "build_utils.sh",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2023-09-06T19:53:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3c497837_58f0474a",
      "range": {
        "startLine": 354,
        "startChar": 26,
        "endLine": 354,
        "endChar": 29
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2650578_e13518af",
        "filename": "build_utils.sh",
        "patchSetId": 1
      },
      "lineNbr": 379,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T03:30:04Z",
      "side": 1,
      "message": "drop this too\n\nDIST_DIR doesn\u0027t even mean anything outside of the sandbox",
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "889825fa_994092d4",
        "filename": "build_utils.sh",
        "patchSetId": 1
      },
      "lineNbr": 379,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T03:38:45Z",
      "side": 1,
      "message": "... so the text in console is mostly useless.",
      "parentUuid": "b2650578_e13518af",
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32a6a00c_6d56a110",
        "filename": "build_utils.sh",
        "patchSetId": 1
      },
      "lineNbr": 379,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2023-09-06T19:53:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "889825fa_994092d4",
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d48463df_b23674ce",
        "filename": "build_utils.sh",
        "patchSetId": 1
      },
      "lineNbr": 381,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T03:30:04Z",
      "side": 1,
      "message": "This should be a separate Bazel action because it generates a different output and is naturally detached from super.img.\n\nSo if the dependencies of super.img changes, super.img might be rebuilt, but as long as super.img does not change (even after the rebuild), super_unsparsed.img does not need to be rebuild.",
      "range": {
        "startLine": 381,
        "startChar": 0,
        "endLine": 381,
        "endChar": 68
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d66090e5_b334ca35",
        "filename": "build_utils.sh",
        "patchSetId": 1
      },
      "lineNbr": 382,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T03:30:04Z",
      "side": 1,
      "message": "drop this too",
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3015e2e_5323e4fd",
        "filename": "build_utils.sh",
        "patchSetId": 1
      },
      "lineNbr": 382,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2023-09-06T19:53:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d66090e5_b334ca35",
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96d1f2ac_0dc620be",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T03:30:04Z",
      "side": 1,
      "message": "\u003e File is not formatted. Run `buildifier kleaf/impl/image/super_image.bzl` to format the file, or apply the suggested fix.\n\nPlease fix.",
      "parentUuid": "8b181a60_5bd56eb5",
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94762959_c927e2bf",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2023-09-06T19:53:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "96d1f2ac_0dc620be",
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fa29876_21fa0322",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T03:30:04Z",
      "side": 1,
      "message": "No space before and after",
      "range": {
        "startLine": 1,
        "startChar": 3,
        "endLine": 1,
        "endChar": 4
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "502d8cb1_a083a5c7",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2023-09-06T19:53:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2fa29876_21fa0322",
      "range": {
        "startLine": 1,
        "startChar": 3,
        "endLine": 1,
        "endChar": 4
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f381d39f_b510041b",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T03:30:04Z",
      "side": 1,
      "message": "Thank you!",
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc0bd7e4_640cbd6a",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T03:47:23Z",
      "side": 1,
      "message": "This should be avoided:\n\nhttps://bazel.build/rules/performance#avoid-depset-to-list\n\nThis could be cleaned up with Args.add_all or utils.write_depset\n\nhttps://bazel.build/rules/lib/builtins/Args#add_all\n\nhttps://cs.android.com/android/kernel/superproject/+/common-android-mainline:build/kernel/kleaf/impl/utils.bzl;l\u003d175;drc\u003d346241d8c7d74ba03b68c5275f8e1545b0838daa\n\nIf not sure, please just file a bug on us and add a TODO here.",
      "range": {
        "startLine": 24,
        "startChar": 17,
        "endLine": 24,
        "endChar": 36
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb336dc6_f23e7db9",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2023-09-06T19:53:24Z",
      "side": 1,
      "message": "Yeah, I\u0027m not sure what you\u0027re looking for here. we strictly need just the `.img` files out of the label, so I\u0027m not sure how to do that without iterating over the files.",
      "parentUuid": "fc0bd7e4_640cbd6a",
      "range": {
        "startLine": 24,
        "startChar": 17,
        "endLine": 24,
        "endChar": 36
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75eaf48a_6ca82734",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T03:30:04Z",
      "side": 1,
      "message": "Do you need a full KernelEnvInfo setup?\n\nIf not, please replace it with HermeticToolchainInfo.\n\nIf you are unsure, please create a bug and assign to me for further investigation, and add\n\n```\n# TODO(b/xxxxx): replace with HermeticToolchainInfo\n```",
      "range": {
        "startLine": 29,
        "startChar": 14,
        "endLine": 29,
        "endChar": 48
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb5f61b0_3a523b29",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T03:38:45Z",
      "side": 1,
      "message": "I highly doubt that you need the full KernelEnvInfo other than setting `DIST_DIR` to a `$(mktemp -d)`, or even better, `utils.intermediates_dir()`.\n\nSo I would recommend you to change this to hermetic toolchain in this CL, so you can drop L82~86 too.\n\nSee https://android.googlesource.com/kernel/build/+/main/kleaf/docs/hermeticity.md#custom-rules for example\n\n---\n\nWhy use utils.intermediates_dir()? It is similar to RULEDIR in genrule, which is recommended here (though it also say that /tmp is writable):\n\nhttps://bazel.build/reference/be/make-variables#predefined_genrule_variables",
      "parentUuid": "75eaf48a_6ca82734",
      "range": {
        "startLine": 29,
        "startChar": 14,
        "endLine": 29,
        "endChar": 48
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34d0649a_f07f8de5",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2023-09-06T19:53:24Z",
      "side": 1,
      "message": "I need it to access the `build_super` function in `build_utils.sh`. I tried with the `HermeticToolchainInfo`, but it seems that doesn\u0027t source `build_utils.sh`. Do you know of an easier way to do that?",
      "parentUuid": "bb5f61b0_3a523b29",
      "range": {
        "startLine": 29,
        "startChar": 14,
        "endLine": 29,
        "endChar": 48
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12266f13_bd0aaad8",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T03:30:04Z",
      "side": 1,
      "message": "This is an implementation detail, so drop this",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 42
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "170fec85_1c3fcc95",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2023-09-06T19:53:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "12266f13_bd0aaad8",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 42
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "103ca020_83123892",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T03:30:04Z",
      "side": 1,
      "message": "quote these, otherwise the underscore is going to be recognized as emphasis in markdown",
      "range": {
        "startLine": 69,
        "startChar": 11,
        "endLine": 69,
        "endChar": 22
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d11264f_3e5fbb5a",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2023-09-06T19:53:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "103ca020_83123892",
      "range": {
        "startLine": 69,
        "startChar": 11,
        "endLine": 69,
        "endChar": 22
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6c77a08_4a96bec5",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T03:47:23Z",
      "side": 1,
      "message": "(This and L79)\n\nDo you need both to build super image? One could technically build a super image with only either of them, or even neither of them, right?\n\nIf so, please drop L75 and L79",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 75,
        "endChar": 29
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d5b4350_77f9c7b1",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2023-09-06T19:53:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e6c77a08_4a96bec5",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 75,
        "endChar": 29
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46f3d4bd_945a8b18",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T03:47:23Z",
      "side": 1,
      "message": "Looks like you only depend on the files of the rules, not providers from `system_dlkm_image` rule.\n\nIf so, I think this should have `allow_files\u003dTrue`, so one can build super image from prebuilt *_dlkm images. (Same in L80)",
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "648fb762_bab87a81",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2023-09-06T19:53:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46f3d4bd_945a8b18",
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98a3bad0_73dc83df",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T03:30:04Z",
      "side": 1,
      "message": "The user of super_image technically shouldn\u0027t know about the implementation details of kernel_build.bzl. \n\nSo, if you absolutely need a KernelEnvInfo (see comment above), then please change this to:\n\n```\n\"kernel_build\": attr.label(providers \u003d [KernelBuildOriginalEnvInfo])\n```\n\nand access via `ctx.attr.kernel_build[KernelBuildOriginalEnvInfo].env_info`\n\nThen, the user of `super_image` can then do \n\n```\nkernel_build(name \u003d \"foo\")\nsuper_image(name \u003d \"foo_super_image\", kernel_build \u003d \":foo\")\n```\n\n... instead of ...\n\n```\nkernel_build(name \u003d \"foo\")\nsuper_image(name \u003d \"foo_super_image\", env \u003d \":foo_env\")\n```",
      "range": {
        "startLine": 82,
        "startChar": 9,
        "endLine": 82,
        "endChar": 12
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2e8cc07_72d17dc5",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2023-09-06T19:53:24Z",
      "side": 1,
      "message": "Okay - I\u0027ll do this pending resolution of if `HermeticToolchainInfo` could work.",
      "parentUuid": "98a3bad0_73dc83df",
      "range": {
        "startLine": 82,
        "startChar": 9,
        "endLine": 82,
        "endChar": 12
      },
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53ce3e32_118ae631",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-09-06T03:30:04Z",
      "side": 1,
      "message": "If you already have a default here, why do you need another default (with different value!) in build_utils.sh?\n\nMaybe build_super should fail if SUPER_IMG_SIZE is not set?",
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "411478e1_6a4aa3cf",
        "filename": "kleaf/impl/image/super_image.bzl",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2023-09-06T19:53:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53ce3e32_118ae631",
      "revId": "1f7168768f37b328227eab0d263d1d551005c0c1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
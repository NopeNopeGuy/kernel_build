{
  "comments": [
    {
      "key": {
        "uuid": "fca078ff_74c32427",
        "filename": "abi/extract_symbols",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2020-08-25T18:55:25Z",
      "side": 1,
      "message": "go/no-imperative",
      "range": {
        "startLine": 127,
        "startChar": 5,
        "endLine": 127,
        "endChar": 9
      },
      "revId": "ce2b3039c18c5288c7fa43c6cdf34a514f50bb0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88871a49_4c3fe315",
        "filename": "abi/extract_symbols",
        "patchSetId": 4
      },
      "lineNbr": 129,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2020-08-25T18:55:25Z",
      "side": 1,
      "message": "that is the default and can be omitted",
      "range": {
        "startLine": 129,
        "startChar": 23,
        "endLine": 129,
        "endChar": 26
      },
      "revId": "ce2b3039c18c5288c7fa43c6cdf34a514f50bb0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f6c2f51_2a748d5a",
        "filename": "abi/extract_symbols",
        "patchSetId": 4
      },
      "lineNbr": 129,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2020-08-26T12:40:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "88871a49_4c3fe315",
      "range": {
        "startLine": 129,
        "startChar": 23,
        "endLine": 129,
        "endChar": 26
      },
      "revId": "ce2b3039c18c5288c7fa43c6cdf34a514f50bb0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6c45a6e_34541c5a",
        "filename": "abi/extract_symbols",
        "patchSetId": 4
      },
      "lineNbr": 135,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2020-08-25T18:55:25Z",
      "side": 1,
      "message": "how about:\n\n with open(whitelist) as wl:\n   for line in [l.strip() for l in wl]:\n     if not line or line.startswith((\"#\", \"[abi_whitelist]\")):\n       continue\n     symbols.append(line)",
      "range": {
        "startLine": 129,
        "startChar": 2,
        "endLine": 135,
        "endChar": 16
      },
      "revId": "ce2b3039c18c5288c7fa43c6cdf34a514f50bb0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b749f73_c662191d",
        "filename": "abi/extract_symbols",
        "patchSetId": 4
      },
      "lineNbr": 135,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2020-08-26T12:40:16Z",
      "side": 1,
      "message": "Done, though I\u0027ll keep the full comparison on for the last one.",
      "parentUuid": "c6c45a6e_34541c5a",
      "range": {
        "startLine": 129,
        "startChar": 2,
        "endLine": 135,
        "endChar": 16
      },
      "revId": "ce2b3039c18c5288c7fa43c6cdf34a514f50bb0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c1e8428_f16ac7d8",
        "filename": "abi/extract_symbols",
        "patchSetId": 4
      },
      "lineNbr": 147,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2020-08-25T18:55:25Z",
      "side": 1,
      "message": "read_whitelist could return a set",
      "range": {
        "startLine": 147,
        "startChar": 21,
        "endLine": 147,
        "endChar": 42
      },
      "revId": "ce2b3039c18c5288c7fa43c6cdf34a514f50bb0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aeda0af5_ab46e104",
        "filename": "abi/extract_symbols",
        "patchSetId": 4
      },
      "lineNbr": 147,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2020-08-26T12:40:16Z",
      "side": 1,
      "message": "I considered that. I prefer it to return the sequence. If I were crazy, I\u0027d work out how to make it a generator.\n\nI\u0027ve made the code that uses it a bit nicer.",
      "parentUuid": "2c1e8428_f16ac7d8",
      "range": {
        "startLine": 147,
        "startChar": 21,
        "endLine": 147,
        "endChar": 42
      },
      "revId": "ce2b3039c18c5288c7fa43c6cdf34a514f50bb0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "845aaab3_749b9e04",
        "filename": "abi/extract_symbols",
        "patchSetId": 4
      },
      "lineNbr": 234,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2020-08-25T18:55:25Z",
      "side": 1,
      "message": "that is implied",
      "range": {
        "startLine": 234,
        "startChar": 6,
        "endLine": 234,
        "endChar": 20
      },
      "revId": "ce2b3039c18c5288c7fa43c6cdf34a514f50bb0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebae2191_74f1c07d",
        "filename": "abi/extract_symbols",
        "patchSetId": 4
      },
      "lineNbr": 234,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2020-08-26T12:40:16Z",
      "side": 1,
      "message": "default\u003dNone is the default\n\nI prefer the explicit False.",
      "parentUuid": "845aaab3_749b9e04",
      "range": {
        "startLine": 234,
        "startChar": 6,
        "endLine": 234,
        "endChar": 20
      },
      "revId": "ce2b3039c18c5288c7fa43c6cdf34a514f50bb0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56a30895_eb349b68",
        "filename": "abi/extract_symbols",
        "patchSetId": 4
      },
      "lineNbr": 234,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2020-08-26T13:24:03Z",
      "side": 1,
      "message": "https://docs.python.org/3.8/library/argparse.html#action\n\n\u0027store_true\u0027 and \u0027store_false\u0027 - These are special cases of \u0027store_const\u0027 using for storing the values True and False respectively. In addition, they create default values of False and True respectively.",
      "parentUuid": "ebae2191_74f1c07d",
      "range": {
        "startLine": 234,
        "startChar": 6,
        "endLine": 234,
        "endChar": 20
      },
      "revId": "ce2b3039c18c5288c7fa43c6cdf34a514f50bb0a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}
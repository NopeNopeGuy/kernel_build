{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6eb78054_570cb534",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-10-20T19:11:35Z",
      "side": 1,
      "message": "Clean! Nice!\n\nLGTM from my side, need Will\u0027s owner approval.\n\n---\n\nI think the \"right way\" to do this is probably to unpack the cpio archive into the format of `gen_init_cpio`, like\n\n  dir /dev 755 0 0\n  nod /dev/console 644 0 0 c 5 1\n  nod /dev/loop0 644 0 0 b 7 0\n  dir /bin 755 1000 1000\n  slink /bin/sh busybox 777 0 0\n  file /bin/busybox initramfs/busybox 755 0 0\n  dir /proc 755 0 0\n  dir /sys 755 0 0\n  dir /mnt 755 0 0\n  file /init initramfs/init.sh 755 0 0\n  \nand use `gen_init_cpio` to repack the initramfs here, but we don\u0027t have the inverse of `gen_init_cpio` right now... (or do we?) Someone probably need to implement an option for `cpio` to output the `gen_init_cpio` format. Thoughts?",
      "revId": "45f9e91ddcc3f7489844a502731fbe03b72d848a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8c3d201_c9ded803",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1899690
      },
      "writtenOn": "2021-11-08T18:18:11Z",
      "side": 1,
      "message": "Can we work to merge this soon? Is there something else I need to do?",
      "revId": "45f9e91ddcc3f7489844a502731fbe03b72d848a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47213402_ca3130f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2021-11-12T00:28:15Z",
      "side": 1,
      "message": "Since you are completely dropping all the kernel modules, why not just use SKIP_VENDOR_BOOT\u003d1? If you have a prebuilt vendor_ramdisk you probably already have a prebuilt vendor_boot.img since everything else inside the vendor_boot.img is basically just meta data.\n\nCan you explain why you would want to create a vendor_boot.img in this case?",
      "parentUuid": "e8c3d201_c9ded803",
      "revId": "45f9e91ddcc3f7489844a502731fbe03b72d848a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a6f9e045_36547e0c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1899690
      },
      "writtenOn": "2021-11-15T17:36:48Z",
      "side": 1,
      "message": "We\u0027re not trying to create a vendor boot image in this case; we\u0027re trying to package the prebuilt ramdisk with the boot image. For the record, we are setting SKIP_VENDOR_BOOT\u003d1 and still seeing errors.",
      "parentUuid": "47213402_ca3130f0",
      "revId": "45f9e91ddcc3f7489844a502731fbe03b72d848a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7cf5bf19_22d3a37e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2021-11-23T23:11:51Z",
      "side": 1,
      "message": "Sorry for the delayed response. I\u0027ll try to keep a better eye on this patch.\n\nSo if you don\u0027t need the vendor_boot.img, then you should get the same result if you set the following:\n\nSKIP_VENDOR_BOOT\u003d1\nBUILD_INITRAMFS\u003d  (or you can just not set this)\nVENDOR_RAMDISK_BINARY\u003d (or you can just not set this)\n\nThat will skip all the ramdisk tweaking and skip making the vendor_boot.img which would leave you with just the boot.img (Image.lz4 + GKI_RAMDISK_PREBUILT_BINARY).\n\nI noticed that you are copying the VENDOR_RAMDISK_BINARY to $DIST_DIR/ramdisk.$RAMDISK_EXT. If you don\u0027t care about the vendor_boot.img, does that mean you are trying to package the VENDOR_RAMDISK_BINARY with the boot.img? That would only be possible if you have BOOT_IMAGE_HEADER_VERSION \u003c 3.",
      "parentUuid": "a6f9e045_36547e0c",
      "revId": "45f9e91ddcc3f7489844a502731fbe03b72d848a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01a22646_e38c35d0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1899690
      },
      "writtenOn": "2021-11-23T23:17:27Z",
      "side": 1,
      "message": "Yes, that\u0027s correct. We\u0027re using a BOOT_IMAGE_HEADER_VERSION \u003c 3 since we want to package the VENDOR_RAMDISK_BINARY as part of the boot.img.",
      "parentUuid": "7cf5bf19_22d3a37e",
      "revId": "45f9e91ddcc3f7489844a502731fbe03b72d848a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9d63cd3_cfbe58f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2021-11-30T18:20:13Z",
      "side": 1,
      "message": "Is that a requirement? If you could use header version \u003e\u003d 3, then you can achieve the same thing by using GKI_RAMDISK_PREBUILT_BINARY instead of VENDOR_RAMDISK_BINARY.\n\nFor example, you could do this:\n\nGKI_RAMDISK_PREBUILT_BINARY\u003d/path/to/vendor_ramdisk\nSKIP_VENDOR_BOOT\u003d1\nBUILD_INITRAMFS\u003d  (or you can just not set this)\nVENDOR_RAMDISK_BINARY\u003d (or you can just not set this)",
      "parentUuid": "01a22646_e38c35d0",
      "revId": "45f9e91ddcc3f7489844a502731fbe03b72d848a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c26a042d_25fda7f3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1899690
      },
      "writtenOn": "2021-11-30T19:48:10Z",
      "side": 1,
      "message": "Using BOOT_IMAGE_HEADER_VERSION \u003c 3 is a requirement for this project, so I don\u0027t think this will work for us. I appreciate the help though.",
      "parentUuid": "f9d63cd3_cfbe58f8",
      "revId": "45f9e91ddcc3f7489844a502731fbe03b72d848a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a869e60_95ed84f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2021-11-30T22:44:57Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c26a042d_25fda7f3",
      "revId": "45f9e91ddcc3f7489844a502731fbe03b72d848a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89517cc8_d4455f5b",
        "filename": "build_utils.sh",
        "patchSetId": 8
      },
      "lineNbr": 315,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-10-21T14:04:03Z",
      "side": 1,
      "message": "Question, doing this also means the kernel modules built under `INITRAMFS_STAGING_DIR` would not be packed into the vendor_ramdisk, would this be a problem? Do we need to support the case where we don\u0027t want to unpack the prebuilt ramdisk, but still want the built KOs ?",
      "range": {
        "startLine": 315,
        "startChar": 4,
        "endLine": 315,
        "endChar": 70
      },
      "revId": "45f9e91ddcc3f7489844a502731fbe03b72d848a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d41d2c32_58f45eda",
        "filename": "build_utils.sh",
        "patchSetId": 8
      },
      "lineNbr": 315,
      "author": {
        "id": 1899690
      },
      "writtenOn": "2021-10-21T16:49:04Z",
      "side": 1,
      "message": "As of right now, I don\u0027t think so. We\u0027re more concerned with just being able to use a prebuilt ramdisk without including outside KOs.",
      "parentUuid": "89517cc8_d4455f5b",
      "range": {
        "startLine": 315,
        "startChar": 4,
        "endLine": 315,
        "endChar": 70
      },
      "revId": "45f9e91ddcc3f7489844a502731fbe03b72d848a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
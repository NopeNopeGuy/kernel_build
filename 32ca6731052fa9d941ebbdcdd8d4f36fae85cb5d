{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fa25a6fc_266f194c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1905021
      },
      "writtenOn": "2023-10-10T03:24:10Z",
      "side": 1,
      "message": "Tested by\n```\ntools/bazel run //common:kernel_aarch64_dist\ntools/bazel test //build/kernel/kleaf:quick_tests\n```\n\nAnd add `kbuild_options: [\"KASAN_SANITIZE :\u003d n\"]` in oot module\u0027s ddk_module when --kasan applied and not applied.",
      "revId": "32ca6731052fa9d941ebbdcdd8d4f36fae85cb5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65401e82_9420a82e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-10-10T18:12:24Z",
      "side": 1,
      "message": "Are there any other options you want to pass besides KASAN_SANITIZE?\n\nIf not, I would rather add a single `kasan` attribute to ddk_module instead of a free-formed `kbuild_options`. The kbuild_options functionality as it is right now seems really easy to be abused.",
      "revId": "32ca6731052fa9d941ebbdcdd8d4f36fae85cb5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ca010a1_0f18809e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-10-10T18:16:39Z",
      "side": 1,
      "message": "Furthermore, if you want to retain the functionality to disable kasan only for specific files, you can change the attribute to a list. For example:\n\n```\nddk_module(\n    disable_kasan \u003d [\n        \"*\", # special notation for KASAN_SANITIZE :\u003d n\n    ],\n```\n\n```\nddk_module(\n    disable_kasan \u003d [\n        \"a.c\", # generates KASAN_SANITIZE_a.o :\u003d n\n    ],\n```\n\nIf you are only interested in disabling all files, then a boolean is okay",
      "parentUuid": "65401e82_9420a82e",
      "revId": "32ca6731052fa9d941ebbdcdd8d4f36fae85cb5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "011a56bb_e7027dfe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1905021
      },
      "writtenOn": "2023-10-11T01:30:55Z",
      "side": 1,
      "message": "Acutally I prefer the kernel way.\n`KASAN_SANITIZE:\u003dn` is to disable whole oot module, `KASAN_SANITIZE_some_file.o:\u003dn` is to disable specific file.\n\nAnd KASAN_SANITIZE is not the only option we need to pass, for example there are KCOV_INSTRUMENT, KCSAN_SANITIZE can be passed in the same way, do disable_kasan or kasan attribute is not enough.",
      "parentUuid": "0ca010a1_0f18809e",
      "revId": "32ca6731052fa9d941ebbdcdd8d4f36fae85cb5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06f3a50a_c8b720ed",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-10-11T20:30:26Z",
      "side": 1,
      "message": "Do you have a list of all options you are trying to pass?",
      "parentUuid": "011a56bb_e7027dfe",
      "revId": "32ca6731052fa9d941ebbdcdd8d4f36fae85cb5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ddb49e8_3c1d0f3a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1905021
      },
      "writtenOn": "2023-10-12T00:52:30Z",
      "side": 1,
      "message": "It\u0027s not a fixed list, as it\u0027s fully dependent on which file the user want to disable sanitizer is.\n\nFor now, the list is KASAN_SANITIZE, KCSAN_SANITIZE, KCOV_SANITIZE.\nBut it might be file based too, ex\n`KASAN_SANITIZE_file_A.o :\u003d n`, `KASAN_SANITIZE_file_B.o :\u003d n`, ``KASAN_SANITIZE_file_C.o :\u003d n` ...",
      "parentUuid": "06f3a50a_c8b720ed",
      "revId": "32ca6731052fa9d941ebbdcdd8d4f36fae85cb5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da5923b7_126b3674",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-10-13T16:57:33Z",
      "side": 1,
      "message": "I would appreciate if you add 3 attributes instead of adding one free-formed kbuild_options attribute that are easily abused.\n\nSee my previous comment on allowing file-based lists.",
      "parentUuid": "9ddb49e8_3c1d0f3a",
      "revId": "32ca6731052fa9d941ebbdcdd8d4f36fae85cb5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
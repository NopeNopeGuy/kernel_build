{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b60f9d36_c78d7ab3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-06-28T18:53:51Z",
      "side": 1,
      "message": "Test: ?",
      "revId": "7709848c9995fdf9ce6393f2a3964ca3f787ed9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5e5d4f0_9c4ff31a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-06-28T22:46:14Z",
      "side": 1,
      "message": "BTW this breaks on raviole-mainline on partner branch. See email.",
      "revId": "7709848c9995fdf9ce6393f2a3964ca3f787ed9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28fd6938_03c12699",
        "filename": "kleaf/bazel.py",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-06-28T23:01:36Z",
      "side": 1,
      "message": "I think you used to have a filter in preserve_env.sh that changes the value of $PWD becomes the reference to $PWD. However, with the cache dir outside of $PWD, absolute paths now flow into kernel_env\u0027s output script. Does that matter?",
      "range": {
        "startLine": 29,
        "startChar": 4,
        "endLine": 29,
        "endChar": 52
      },
      "revId": "7709848c9995fdf9ce6393f2a3964ca3f787ed9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "008c58bd_2fe6b6c8",
        "filename": "kleaf/bazel.py",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-06-28T23:42:05Z",
      "side": 1,
      "message": "Also, perhaps use a path under output_user_root so that `bazel clean` also cleans it?",
      "parentUuid": "28fd6938_03c12699",
      "range": {
        "startLine": 29,
        "startChar": 4,
        "endLine": 29,
        "endChar": 52
      },
      "revId": "7709848c9995fdf9ce6393f2a3964ca3f787ed9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3b9565e_983aa200",
        "filename": "kleaf/bazel.py",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-06-28T23:52:35Z",
      "side": 1,
      "message": "Actually, putting the path under output_user_root does NOT make `bazel clean` to clean it. I think we\u0027ll just have to make that, if a clean command is issued, then also delete the cache directory.",
      "parentUuid": "008c58bd_2fe6b6c8",
      "range": {
        "startLine": 29,
        "startChar": 4,
        "endLine": 29,
        "endChar": 52
      },
      "revId": "7709848c9995fdf9ce6393f2a3964ca3f787ed9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52b842fc_c379612d",
        "filename": "kleaf/bazel.py",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-08-05T02:25:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3b9565e_983aa200",
      "range": {
        "startLine": 29,
        "startChar": 4,
        "endLine": 29,
        "endChar": 52
      },
      "revId": "7709848c9995fdf9ce6393f2a3964ca3f787ed9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28588453_d9229b12",
        "filename": "kleaf/bazel.py",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-06-28T18:52:50Z",
      "side": 1,
      "message": "nit: I think this should be a top-level function (possibly starts with _ to indicate it is private)",
      "revId": "7709848c9995fdf9ce6393f2a3964ca3f787ed9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ed7f9cb_45b7517f",
        "filename": "kleaf/bazel.py",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-08-05T02:25:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "28588453_d9229b12",
      "revId": "7709848c9995fdf9ce6393f2a3964ca3f787ed9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9561b06_a2c379df",
        "filename": "kleaf/bazel.py",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-06-28T18:52:50Z",
      "side": 1,
      "message": "nit: spaces\n\nwe should have a pylintrc for this file...",
      "range": {
        "startLine": 69,
        "startChar": 55,
        "endLine": 69,
        "endChar": 57
      },
      "revId": "7709848c9995fdf9ce6393f2a3964ca3f787ed9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "654a2ebc_9aec24ed",
        "filename": "kleaf/bazel.py",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-06-28T18:52:50Z",
      "side": 1,
      "message": "How about using the `bazel_args.index(\"--\")` trick above? Otherwise, changes in flags may invalidate the analysis cache.\n\ne.g. if you `bazel query` then `bazel build` then there might be unnecessary overhead.\n\nWe can add more commands in the list in L67 to prevent this, but I think adding the flag unconditionally doesn\u0027t hurt.\n\nref: https://bazel.build/docs/bazelrc\n\n- Every command inherits from common\n- The following commands inherit from (and are more specific than) build: test, run, clean, mobile-install, info, print_action, config, cquery, and aquery\n- coverage inherits from test\n\n*EDIT*: Ah I see that you want it to be override-able from the command line.\n\nHow about just looking for the full list of commands in L67?",
      "range": {
        "startLine": 69,
        "startChar": 30,
        "endLine": 69,
        "endChar": 57
      },
      "revId": "7709848c9995fdf9ce6393f2a3964ca3f787ed9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "468efe37_aa636b9e",
        "filename": "kleaf/bazel.py",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-08-05T02:25:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "654a2ebc_9aec24ed",
      "range": {
        "startLine": 69,
        "startChar": 30,
        "endLine": 69,
        "endChar": 57
      },
      "revId": "7709848c9995fdf9ce6393f2a3964ca3f787ed9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93257b18_2fec0eca",
        "filename": "kleaf/bazel.py",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-08-05T02:25:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9561b06_a2c379df",
      "range": {
        "startLine": 69,
        "startChar": 55,
        "endLine": 69,
        "endChar": 57
      },
      "revId": "7709848c9995fdf9ce6393f2a3964ca3f787ed9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f153a89f_e6446470",
        "filename": "kleaf/bazelrc/local.bazelrc",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-06-28T18:52:50Z",
      "side": 1,
      "message": "This used to break because paths were messed up. Does it work now because we are using the cache dir?",
      "revId": "7709848c9995fdf9ce6393f2a3964ca3f787ed9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "36a9e959_9cc07d34",
        "filename": "kleaf/bazelrc/local.bazelrc",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-08-05T02:25:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f153a89f_e6446470",
      "revId": "7709848c9995fdf9ce6393f2a3964ca3f787ed9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "011e94ca_fe374e2c",
        "filename": "kleaf/docs/fast.md",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-06-28T18:52:50Z",
      "side": 1,
      "message": "I think this should just be in `sandbox.md`\n\nBut feel free to keep a ## Local cache dir section here that points to the section in `sandbox.md`",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 73,
        "endChar": 3
      },
      "revId": "7709848c9995fdf9ce6393f2a3964ca3f787ed9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "552c1aa1_1fdfeee1",
        "filename": "kleaf/docs/fast.md",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-08-05T02:25:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "011e94ca_fe374e2c",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 73,
        "endChar": 3
      },
      "revId": "7709848c9995fdf9ce6393f2a3964ca3f787ed9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60ecfc76_601957ce",
        "filename": "kleaf/impl/kernel_env.bzl",
        "patchSetId": 2
      },
      "lineNbr": 119,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-06-28T18:52:50Z",
      "side": 1,
      "message": "Does it work if `--config\u003dlocal --cache-dir\u003d\"\"`? Do we expect it to work?\n\nIf we don\u0027t expect it to work, maybe\n```\nif local:\n  if not cache_dir:\n    fail()\n  command +\u003d ...\n```",
      "range": {
        "startLine": 119,
        "startChar": 0,
        "endLine": 119,
        "endChar": 111
      },
      "revId": "7709848c9995fdf9ce6393f2a3964ca3f787ed9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f384f90_0a9de1b1",
        "filename": "kleaf/impl/kernel_env.bzl",
        "patchSetId": 2
      },
      "lineNbr": 119,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-06-28T22:43:35Z",
      "side": 1,
      "message": "And if we do want to support --config\u003dlocal --cache-dir\u003d\"\", I think we want to retain the OUT_DIR_SUFFIX logic; otherwise it will break parallel builds. (For ABI monitoring, multiple kernel_env / kernel_config may be executed simultaneously).",
      "parentUuid": "60ecfc76_601957ce",
      "range": {
        "startLine": 119,
        "startChar": 0,
        "endLine": 119,
        "endChar": 111
      },
      "revId": "7709848c9995fdf9ce6393f2a3964ca3f787ed9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d50863b3_b6b6b6f9",
        "filename": "kleaf/impl/kernel_env.bzl",
        "patchSetId": 2
      },
      "lineNbr": 119,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-08-05T02:25:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5f384f90_0a9de1b1",
      "range": {
        "startLine": 119,
        "startChar": 0,
        "endLine": 119,
        "endChar": 111
      },
      "revId": "7709848c9995fdf9ce6393f2a3964ca3f787ed9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
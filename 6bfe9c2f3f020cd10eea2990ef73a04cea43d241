{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3bee5b75_483ed635",
        "filename": "kleaf/BUILD.bazel",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-10-10T14:41:12Z",
      "side": 1,
      "message": "that is very generic as part of the `bazel` invocation. Consider something more explicit, like `--preserve_kbuild_cmd_files`.",
      "range": {
        "startLine": 55,
        "startChar": 12,
        "endLine": 55,
        "endChar": 24
      },
      "revId": "6bfe9c2f3f020cd10eea2990ef73a04cea43d241",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7132cabf_c5188185",
        "filename": "kleaf/BUILD.bazel",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-10T19:38:19Z",
      "side": 1,
      "message": "This is not a flag; it is a \"bool_setting\", meaning that it can only be used in transitions. This cannot be set in the command line.\n\nhttps://bazel.build/extending/config#rule-parameter\n\n\u003e The config module\u0027s functions takes an optional boolean parameter, flag, which is set to false by default. if flag is set to true, the build setting can be set on the command line by users as well as internally by rule writers via default values and transitions. Not all settings should be settable by users. For example, if you as a rule writer have some debug mode that you\u0027d like to turn on inside test rules, you don\u0027t want to give users the ability to indiscriminately turn on that feature inside other non-test rules.",
      "parentUuid": "3bee5b75_483ed635",
      "range": {
        "startLine": 55,
        "startChar": 12,
        "endLine": 55,
        "endChar": 24
      },
      "revId": "6bfe9c2f3f020cd10eea2990ef73a04cea43d241",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33228224_0dd39767",
        "filename": "kleaf/BUILD.bazel",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-11T00:16:24Z",
      "side": 1,
      "message": "Hiding it in impl/ to avoid confusion (so it stays away from other `_flag`\u0027s). Is this better?",
      "parentUuid": "7132cabf_c5188185",
      "range": {
        "startLine": 55,
        "startChar": 12,
        "endLine": 55,
        "endChar": 24
      },
      "revId": "6bfe9c2f3f020cd10eea2990ef73a04cea43d241",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0b3e491_7613a770",
        "filename": "kleaf/impl/common_providers.bzl",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-10-10T14:41:12Z",
      "side": 1,
      "message": "nit: line length.",
      "revId": "6bfe9c2f3f020cd10eea2990ef73a04cea43d241",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c26c9ca_5ac87194",
        "filename": "kleaf/impl/common_providers.bzl",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-11T00:16:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f0b3e491_7613a770",
      "revId": "6bfe9c2f3f020cd10eea2990ef73a04cea43d241",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de8c6138_89071cf3",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 3
      },
      "lineNbr": 825,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-10-10T14:41:12Z",
      "side": 1,
      "message": "Instead of checking inside here, should not rather the caller check for the flag?",
      "revId": "6bfe9c2f3f020cd10eea2990ef73a04cea43d241",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9021510_85d6d916",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 3
      },
      "lineNbr": 825,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-10T19:38:19Z",
      "side": 1,
      "message": "I think this makes the caller (_build_main_action) shorter.\n\n(This is consistent with other \"steps\" too)",
      "parentUuid": "de8c6138_89071cf3",
      "revId": "6bfe9c2f3f020cd10eea2990ef73a04cea43d241",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63240796_a0d7c31f",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 3
      },
      "lineNbr": 829,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-10-10T14:41:12Z",
      "side": 1,
      "message": "isn\u0027t the OUT_DIR where things get collected?",
      "range": {
        "startLine": 829,
        "startChar": 87,
        "endLine": 829,
        "endChar": 100
      },
      "revId": "6bfe9c2f3f020cd10eea2990ef73a04cea43d241",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03bba531_b0fcaa74",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 3
      },
      "lineNbr": 829,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-10T19:38:19Z",
      "side": 1,
      "message": "Yes, this is the source directory; cmd_dir is the dest directory.\n\nWhat\u0027s up with this?",
      "parentUuid": "63240796_a0d7c31f",
      "range": {
        "startLine": 829,
        "startChar": 87,
        "endLine": 829,
        "endChar": 100
      },
      "revId": "6bfe9c2f3f020cd10eea2990ef73a04cea43d241",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad8bb5d9_6daf1ad5",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 3
      },
      "lineNbr": 899,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-10-10T14:41:12Z",
      "side": 1,
      "message": "```\nif ctx.attr._preserve_cmd[BuildSettingInfo].value:\n  steps.append(_get_grab_cmd_step)\n```",
      "range": {
        "startLine": 891,
        "startChar": 0,
        "endLine": 899,
        "endChar": 5
      },
      "revId": "6bfe9c2f3f020cd10eea2990ef73a04cea43d241",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5188bf8_e0365f91",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 3
      },
      "lineNbr": 899,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-10T19:38:19Z",
      "side": 1,
      "message": "ack, but I think this is more complicated because L964, L1025 all needs to check the build setting.\n\nWith my current code, setting the step to an \"empty\" value allows me to unconditionally add things here.",
      "parentUuid": "ad8bb5d9_6daf1ad5",
      "range": {
        "startLine": 891,
        "startChar": 0,
        "endLine": 899,
        "endChar": 5
      },
      "revId": "6bfe9c2f3f020cd10eea2990ef73a04cea43d241",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b51e7a5_781d4855",
        "filename": "kleaf/impl/kernel_module.bzl",
        "patchSetId": 3
      },
      "lineNbr": 367,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-10-10T14:41:12Z",
      "side": 1,
      "message": "would be good to reuse the function from kernel_build.bzl to avoid this duplication.",
      "revId": "6bfe9c2f3f020cd10eea2990ef73a04cea43d241",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13ce9cb8_d9aa0c5a",
        "filename": "kleaf/impl/kernel_module.bzl",
        "patchSetId": 3
      },
      "lineNbr": 367,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-10T19:38:19Z",
      "side": 1,
      "message": "there are actually a few differences like the declared directory and the destination directory, so I think duplication is fine here?",
      "parentUuid": "4b51e7a5_781d4855",
      "revId": "6bfe9c2f3f020cd10eea2990ef73a04cea43d241",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21db6cba_bacfa901",
        "filename": "kleaf/impl/kernel_module.bzl",
        "patchSetId": 3
      },
      "lineNbr": 367,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-11T00:16:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "13ce9cb8_d9aa0c5a",
      "revId": "6bfe9c2f3f020cd10eea2990ef73a04cea43d241",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96156679_3d459f6f",
        "filename": "kleaf/impl/kernel_module.bzl",
        "patchSetId": 3
      },
      "lineNbr": 547,
      "author": {
        "id": 1961395
      },
      "writtenOn": "2022-10-07T23:57:02Z",
      "side": 1,
      "message": "Q: Does it matter if this value is `None`?",
      "range": {
        "startLine": 547,
        "startChar": 45,
        "endLine": 547,
        "endChar": 52
      },
      "revId": "6bfe9c2f3f020cd10eea2990ef73a04cea43d241",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19375381_ecdddb84",
        "filename": "kleaf/impl/kernel_module.bzl",
        "patchSetId": 3
      },
      "lineNbr": 547,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-08T01:02:51Z",
      "side": 1,
      "message": "No; I think depset([None]) is valid. It\u0027ll be shown as [None] when converting it to a list. (Let me double check though)",
      "parentUuid": "96156679_3d459f6f",
      "range": {
        "startLine": 547,
        "startChar": 45,
        "endLine": 547,
        "endChar": 52
      },
      "revId": "6bfe9c2f3f020cd10eea2990ef73a04cea43d241",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cabd4a38_8dda0b70",
        "filename": "kleaf/impl/kernel_module.bzl",
        "patchSetId": 3
      },
      "lineNbr": 547,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-11T00:16:24Z",
      "side": 1,
      "message": "Also, it doesn\u0027t matter because:\n\n- preserve_cmds is a \"setting\", not a \"flag\", so it can only be set from transitions (see my other comment with Matthias);\n- analyze_inputs is the only rule using this flag (CL:2232748)\n- analyze_inputs unconditionally set this to true then use `KernelCmdsInfo.directories`, so we\u0027ll never need to care about `depset([None])` case because we never expand that depset in the analyze_inputs rule",
      "parentUuid": "19375381_ecdddb84",
      "range": {
        "startLine": 547,
        "startChar": 45,
        "endLine": 547,
        "endChar": 52
      },
      "revId": "6bfe9c2f3f020cd10eea2990ef73a04cea43d241",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9eaebf82_dbd6d19b",
        "filename": "kleaf/impl/kernel_modules_install.bzl",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 1961395
      },
      "writtenOn": "2022-10-07T23:57:02Z",
      "side": 1,
      "message": "nit: Initially I thought it was a typo, maybe use `target` instead?",
      "range": {
        "startLine": 146,
        "startChar": 47,
        "endLine": 146,
        "endChar": 48
      },
      "revId": "6bfe9c2f3f020cd10eea2990ef73a04cea43d241",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4689e120_c0abb9df",
        "filename": "kleaf/impl/kernel_modules_install.bzl",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-10-10T14:41:12Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "9eaebf82_dbd6d19b",
      "range": {
        "startLine": 146,
        "startChar": 47,
        "endLine": 146,
        "endChar": 48
      },
      "revId": "6bfe9c2f3f020cd10eea2990ef73a04cea43d241",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d99cb7c_3c006fe2",
        "filename": "kleaf/impl/kernel_modules_install.bzl",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-11T00:16:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4689e120_c0abb9df",
      "range": {
        "startLine": 146,
        "startChar": 47,
        "endLine": 146,
        "endChar": 48
      },
      "revId": "6bfe9c2f3f020cd10eea2990ef73a04cea43d241",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "179c4cc9_11aedfdd",
        "filename": "kleaf/impl/BUILD.bazel",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-11-11T21:04:30Z",
      "side": 1,
      "message": "Please add the new file here",
      "revId": "8ddfb083a7f3236207bb90959ba08df7c987fd04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5a8af0c_4fad8410",
        "filename": "kleaf/impl/kernel_unarchived_uapi_headers.bzl",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-11-11T21:04:30Z",
      "side": 1,
      "message": "also, maybe just name this `src` as a universally used name",
      "range": {
        "startLine": 38,
        "startChar": 9,
        "endLine": 38,
        "endChar": 28
      },
      "revId": "8ddfb083a7f3236207bb90959ba08df7c987fd04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "639d1a2b_35cee991",
        "filename": "kleaf/impl/kernel_unarchived_uapi_headers.bzl",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-11-11T21:04:30Z",
      "side": 1,
      "message": "Actually, can you please change this to the following, or add the following attribute:\n\n```\n\"kernel_build\": attr.label(\n  providers \u003d [KernelBuildUapiInfo],\n  ...\n)\n```\n\nthen in the rule implementation:\n\n```\ninput_tars \u003d ctx.attr.kernel_build[KernelBuildUapiInfo].kernel_uapi_headers.to_list()\nif len(input_tars) !\u003d 1:\n  fail(...)\ninput_tar \u003d input_tars[0]\n```\n\n(If you are adding the attribute, then assert that either kernel_uapi_headers or kernel_build exists)\n\nThis is good because in the BUILD.bazel you see:\n\n```\nkernel_build(name \u003d \"tuna\", ...)\n\nkernel_unarchived_uapi_headers(name \u003d \"tuna_unarchived_uapi_headers\", kernel_build \u003d \":tuna\")\n```\n\n... without assuming that the `kernel_build` macro is creating an extra `tuna_uapi_headers` target.\n\nI know this may seem pedantic but this will make the BUILD file more straightforward to read.",
      "revId": "8ddfb083a7f3236207bb90959ba08df7c987fd04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94d7b3aa_c78219c4",
        "filename": "kleaf/impl/kernel_unarchived_uapi_headers.bzl",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-11-11T21:07:58Z",
      "side": 1,
      "message": "I am actually inclined to not keep the `kernel_uapi_headers` attribute because the file provided by the caller may not contain files prefixed with usr/include.\n\nOr, instead of --strip-components maybe use --transform? That seems more reliable.",
      "parentUuid": "639d1a2b_35cee991",
      "revId": "8ddfb083a7f3236207bb90959ba08df7c987fd04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9aeb216_5f199379",
        "filename": "kleaf/impl/kernel_unarchived_uapi_headers.bzl",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2022-11-11T21:10:13Z",
      "side": 1,
      "message": "I like providing the `kernel_build` attribute instead - seems cleaner to me and then we\u0027re guaranteed of a particular format for the header tarball.",
      "parentUuid": "94d7b3aa_c78219c4",
      "revId": "8ddfb083a7f3236207bb90959ba08df7c987fd04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d2941ea_e9f7eefb",
        "filename": "kleaf/impl/kernel_unarchived_uapi_headers.bzl",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-11-11T21:11:06Z",
      "side": 1,
      "message": "Also re my pseudocode above:\n\n\u003e `len(input_tars) !\u003d 1`\n\nThis will fail if there is a `base_kernel` for the `kernel_build`. The logic is here:\n\nhttps://cs.android.com/android/kernel/superproject/+/common-android-mainline:build/kernel/kleaf/impl/kernel_build.bzl;l\u003d1136;drc\u003deff5e7b5db2eb0bd4d7d8c8b1e9b570f14dc87d6\n\nPerhaps you want to feed a `merged_kernel_uapi_headers` target to this `kernel_unarchive_uapi_headers` rule? Please use your own judgement; I don\u0027t know what your acutal use case is.",
      "parentUuid": "94d7b3aa_c78219c4",
      "revId": "8ddfb083a7f3236207bb90959ba08df7c987fd04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae50e477_ddb0eb28",
        "filename": "kleaf/impl/kernel_unarchived_uapi_headers.bzl",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-11-11T21:12:50Z",
      "side": 1,
      "message": "Or perhaps you will only extract kernel_uapi headers from GKI (or from kernel_build\u0027s that doesn\u0027t have base_kernel), in which case this check in my pseudocode is correct.",
      "parentUuid": "1d2941ea_e9f7eefb",
      "revId": "8ddfb083a7f3236207bb90959ba08df7c987fd04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb46777a_b58b7ca5",
        "filename": "kleaf/impl/kernel_unarchived_uapi_headers.bzl",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-11-11T21:13:46Z",
      "side": 1,
      "message": "If you are providing kernel_build instead, then please ignore this comment.",
      "parentUuid": "a5a8af0c_4fad8410",
      "range": {
        "startLine": 38,
        "startChar": 9,
        "endLine": 38,
        "endChar": 28
      },
      "revId": "8ddfb083a7f3236207bb90959ba08df7c987fd04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
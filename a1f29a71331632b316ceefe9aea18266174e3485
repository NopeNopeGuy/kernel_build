{
  "comments": [
    {
      "key": {
        "uuid": "24f7ab3b_b8558dbf",
        "filename": "build.sh",
        "patchSetId": 10
      },
      "lineNbr": 425,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2019-10-02T21:55:13Z",
      "side": 1,
      "message": "@alistair is this right? After thinking about this it seems like we might want to join the initramfs with the vendor and gki ramdisks, but I\u0027m not sure if just cat\u0027ing them all together is right. For me it\u0027s not relevant since my target uses system-as-root",
      "range": {
        "startLine": 423,
        "startChar": 1,
        "endLine": 425,
        "endChar": 5
      },
      "revId": "a1f29a71331632b316ceefe9aea18266174e3485",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18298c6f_d2451f33",
        "filename": "build.sh",
        "patchSetId": 10
      },
      "lineNbr": 425,
      "author": {
        "id": 1293738
      },
      "writtenOn": "2019-10-03T02:59:52Z",
      "side": 1,
      "message": "This feature landed before vendor-boot, it was meant as a stop-gap for cuttlefish to enable the cuttlefish launcher program (launch_cvd) to concatenate the boot.img initramfs with this one. A final solution should probably just create vendor-boot.img instead, then the bootloader should unpack and do the concatenation.\n\nBut as for whether you can \"just cat them together\", you totally can. That\u0027s exactly what the final bootloader solution will do.",
      "parentUuid": "24f7ab3b_b8558dbf",
      "range": {
        "startLine": 423,
        "startChar": 1,
        "endLine": 425,
        "endChar": 5
      },
      "revId": "a1f29a71331632b316ceefe9aea18266174e3485",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43025cba_847c623d",
        "filename": "build.sh",
        "patchSetId": 10
      },
      "lineNbr": 425,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2019-10-03T17:20:25Z",
      "side": 1,
      "message": "Cool, thanks. I\u0027ll do that then",
      "parentUuid": "18298c6f_d2451f33",
      "range": {
        "startLine": 423,
        "startChar": 1,
        "endLine": 425,
        "endChar": 5
      },
      "revId": "a1f29a71331632b316ceefe9aea18266174e3485",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b255fdf7_769bbbe1",
        "filename": "build.sh",
        "patchSetId": 10
      },
      "lineNbr": 425,
      "author": {
        "id": 1293738
      },
      "writtenOn": "2019-10-04T19:44:25Z",
      "side": 1,
      "message": "\u003e For me it\u0027s not relevant since my target uses system-as-root\n\nThis feature is still relevant as it does all the necessary steps of 1) building the kernel and modules 2) installing the modules 3) running depmod to generate the modules.* meta files. This is exactly what splicing a custom kernel into a system-as-root build should do.\n\nI heard that the method can\u0027t be used directly because it puts into the initramfs path of /lib and we need /vendor/lib, but this seems like a fixable problem to me. We can just add another build.sh control variable which alters the path prefix for the ramdisk.",
      "parentUuid": "18298c6f_d2451f33",
      "range": {
        "startLine": 423,
        "startChar": 1,
        "endLine": 425,
        "endChar": 5
      },
      "revId": "a1f29a71331632b316ceefe9aea18266174e3485",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb1c58ec_ab1453e7",
        "filename": "build.sh",
        "patchSetId": 10
      },
      "lineNbr": 425,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2019-10-15T22:30:46Z",
      "side": 1,
      "message": "I verified this is working properly now with a build that can load the modules on boot from the ramfs",
      "parentUuid": "b255fdf7_769bbbe1",
      "range": {
        "startLine": 423,
        "startChar": 1,
        "endLine": 425,
        "endChar": 5
      },
      "revId": "a1f29a71331632b316ceefe9aea18266174e3485",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}
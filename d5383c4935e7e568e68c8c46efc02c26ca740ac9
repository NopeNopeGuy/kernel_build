{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9d628b0a_533cfa2d",
        "filename": "kleaf/kernel.bzl",
        "patchSetId": 2
      },
      "lineNbr": 1948,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2022-05-03T21:26:24Z",
      "side": 1,
      "message": "It looks like this will only look for external modules, right? What about kernel modules built from the base_kernel? For example, take a look at the slider kernel_build. It lists a handful of modules under `module_outs` and those will land under {modules_staging_dir}/lib/modules/*/kernel/",
      "range": {
        "startLine": 1948,
        "startChar": 0,
        "endLine": 1948,
        "endChar": 40
      },
      "revId": "d5383c4935e7e568e68c8c46efc02c26ca740ac9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60e17bab_4749a0a3",
        "filename": "kleaf/kernel.bzl",
        "patchSetId": 2
      },
      "lineNbr": 1948,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-05-04T00:06:35Z",
      "side": 1,
      "message": "This will only look for the external modules for this particular `kernel_module` rule.\n\nThe in-tree modules are handled in `_kernel_build_impl` above already.",
      "parentUuid": "9d628b0a_533cfa2d",
      "range": {
        "startLine": 1948,
        "startChar": 0,
        "endLine": 1948,
        "endChar": 40
      },
      "revId": "d5383c4935e7e568e68c8c46efc02c26ca740ac9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04c35ddf_456b4676",
        "filename": "kleaf/kernel.bzl",
        "patchSetId": 2
      },
      "lineNbr": 2020,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2022-05-03T21:26:24Z",
      "side": 1,
      "message": "Does the \".\" need to be escaped, e.g \u0027s:^\\./::\u0027?",
      "range": {
        "startLine": 2020,
        "startChar": 127,
        "endLine": 2020,
        "endChar": 128
      },
      "revId": "d5383c4935e7e568e68c8c46efc02c26ca740ac9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9ec76ff_7a75e565",
        "filename": "kleaf/kernel.bzl",
        "patchSetId": 2
      },
      "lineNbr": 2020,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-05-04T00:06:35Z",
      "side": 1,
      "message": "Yes!\n\nI\u0027ll fix that. (I\u0027ll fix the one in kernel_build in another CL)",
      "parentUuid": "04c35ddf_456b4676",
      "range": {
        "startLine": 2020,
        "startChar": 127,
        "endLine": 2020,
        "endChar": 128
      },
      "revId": "d5383c4935e7e568e68c8c46efc02c26ca740ac9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9da51917_429e0e2e",
        "filename": "kleaf/kernel.bzl",
        "patchSetId": 2
      },
      "lineNbr": 2020,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-05-04T19:45:34Z",
      "side": 1,
      "message": "Done; the other fix is in CL:2086108",
      "parentUuid": "c9ec76ff_7a75e565",
      "range": {
        "startLine": 2020,
        "startChar": 127,
        "endLine": 2020,
        "endChar": 128
      },
      "revId": "d5383c4935e7e568e68c8c46efc02c26ca740ac9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
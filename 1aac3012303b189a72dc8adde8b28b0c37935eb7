{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a4c65dee_2a1ceb27",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-08-10T16:50:35Z",
      "side": 1,
      "message": "not yet done with this one yet.",
      "revId": "1aac3012303b189a72dc8adde8b28b0c37935eb7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abf75c2d_0ef24402",
        "filename": "kleaf/build_config_to_bazel.py",
        "patchSetId": 12
      },
      "lineNbr": 17,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-08-10T16:50:35Z",
      "side": 1,
      "message": "go/pystyle#module-docs\n\nhttps://google.github.io/styleguide/pyguide.html#382-modules",
      "revId": "1aac3012303b189a72dc8adde8b28b0c37935eb7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8082411c_50ceaea9",
        "filename": "kleaf/build_config_to_bazel.py",
        "patchSetId": 12
      },
      "lineNbr": 35,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-08-10T16:50:35Z",
      "side": 1,
      "message": "_CAPS_WITH_UNDER\n\nhttps://google.github.io/styleguide/pyguide.html#382-modules",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 35,
        "endChar": 19
      },
      "revId": "1aac3012303b189a72dc8adde8b28b0c37935eb7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6cbd91c_9dc696a7",
        "filename": "kleaf/build_config_to_bazel.py",
        "patchSetId": 12
      },
      "lineNbr": 36,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-08-10T16:50:35Z",
      "side": 1,
      "message": "is that a return code?",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 36,
        "endChar": 25
      },
      "revId": "1aac3012303b189a72dc8adde8b28b0c37935eb7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69c0f83f_557fff60",
        "filename": "kleaf/build_config_to_bazel.py",
        "patchSetId": 12
      },
      "lineNbr": 45,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-08-10T16:50:35Z",
      "side": 1,
      "message": "this is occasionally set by build.config files. perhaps some of them need to go into a separate list to flag as unsupported.",
      "revId": "1aac3012303b189a72dc8adde8b28b0c37935eb7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36b2acc6_3d831fb4",
        "filename": "kleaf/build_config_to_bazel.py",
        "patchSetId": 12
      },
      "lineNbr": 52,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-08-10T16:50:35Z",
      "side": 1,
      "message": "another \"unsupported, but used\"",
      "revId": "1aac3012303b189a72dc8adde8b28b0c37935eb7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c95fa3a2_4471b29e",
        "filename": "kleaf/build_config_to_bazel.py",
        "patchSetId": 12
      },
      "lineNbr": 69,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-08-10T16:50:35Z",
      "side": 1,
      "message": "definitely needs translation for arm64 vs x86_64",
      "range": {
        "startLine": 69,
        "startChar": 5,
        "endLine": 69,
        "endChar": 9
      },
      "revId": "1aac3012303b189a72dc8adde8b28b0c37935eb7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ee315a2_46c25a5d",
        "filename": "kleaf/build_config_to_bazel.py",
        "patchSetId": 12
      },
      "lineNbr": 133,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-08-10T16:50:35Z",
      "side": 1,
      "message": "die()",
      "range": {
        "startLine": 133,
        "startChar": 4,
        "endLine": 133,
        "endChar": 8
      },
      "revId": "1aac3012303b189a72dc8adde8b28b0c37935eb7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "608a6a96_81b26f9d",
        "filename": "kleaf/build_config_to_bazel.py",
        "patchSetId": 12
      },
      "lineNbr": 134,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-08-10T16:50:35Z",
      "side": 1,
      "message": "critical, since you die in the next line",
      "range": {
        "startLine": 134,
        "startChar": 12,
        "endLine": 134,
        "endChar": 17
      },
      "revId": "1aac3012303b189a72dc8adde8b28b0c37935eb7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1cc0e0c_62d81b31",
        "filename": "kleaf/build_config_to_bazel.py",
        "patchSetId": 12
      },
      "lineNbr": 138,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-08-10T16:50:35Z",
      "side": 1,
      "message": "isinstance_ordie",
      "range": {
        "startLine": 138,
        "startChar": 4,
        "endLine": 138,
        "endChar": 20
      },
      "revId": "1aac3012303b189a72dc8adde8b28b0c37935eb7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a54b7a4_136f77b3",
        "filename": "kleaf/build_config_to_bazel.py",
        "patchSetId": 12
      },
      "lineNbr": 148,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-08-10T16:50:35Z",
      "side": 1,
      "message": "is that `os.path.realpath()`?\n\nhttps://docs.python.org/3.10/library/os.path.html#os.path.realpath",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 148,
        "endChar": 20
      },
      "revId": "1aac3012303b189a72dc8adde8b28b0c37935eb7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37781f25_e436dae8",
        "filename": "kleaf/build_config_to_bazel.py",
        "patchSetId": 12
      },
      "lineNbr": 159,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-08-10T16:50:35Z",
      "side": 1,
      "message": "not sure that mechanism is still used and whether we need to support this here.",
      "range": {
        "startLine": 159,
        "startChar": 40,
        "endLine": 159,
        "endChar": 62
      },
      "revId": "1aac3012303b189a72dc8adde8b28b0c37935eb7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab9cd194_9136c672",
        "filename": "kleaf/build_config_to_bazel_test.py",
        "patchSetId": 12
      },
      "lineNbr": 37,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-08-10T16:50:35Z",
      "side": 1,
      "message": "if you are using this as a file-like object, perhaps you can use an in-memory version of that with `io.StringIO`. That would also give you `.getvalue()` to avoid the seeking.\n\nhttps://docs.python.org/3.10/library/io.html#io.StringIO\n\n\nAh, now I see that you are passing this to `buildozer` by name. Then perhaps that does not work. Disregard in that case.",
      "revId": "1aac3012303b189a72dc8adde8b28b0c37935eb7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1161196f_17a91115",
        "filename": "kleaf/build_config_to_bazel_test.py",
        "patchSetId": 12
      },
      "lineNbr": 39,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-08-10T16:50:35Z",
      "side": 1,
      "message": "are you doing this to keep the file alive?\n\naccording to the documentation, you should be able to omit those lines:\n\n```\nIt will be destroyed as soon as it is closed (including an implicit close when the object is garbage collected).\n```\nhttps://docs.python.org/3.10/library/tempfile.html#tempfile.TemporaryFile",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 39,
        "endChar": 63
      },
      "revId": "1aac3012303b189a72dc8adde8b28b0c37935eb7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f568207_201da952",
        "filename": "kleaf/build_config_to_bazel_test.py",
        "patchSetId": 12
      },
      "lineNbr": 72,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-08-10T16:50:35Z",
      "side": 1,
      "message": "that looks like parameterized tests could make this a little more compact.\n\nIn particular the self.assertIn can basically be fed from an (annotted) array of strings.",
      "revId": "1aac3012303b189a72dc8adde8b28b0c37935eb7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
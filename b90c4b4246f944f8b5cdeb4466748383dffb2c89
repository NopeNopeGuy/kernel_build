{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e427a381_3150b27e",
        "filename": "kleaf/bazel.py",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-27T22:26:40Z",
      "side": 1,
      "message": "nit: You can drop the quotes and braces",
      "range": {
        "startLine": 107,
        "startChar": 38,
        "endLine": 107,
        "endChar": 41
      },
      "revId": "b90c4b4246f944f8b5cdeb4466748383dffb2c89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00b4eb25_c161243a",
        "filename": "kleaf/bazel.py",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1140383
      },
      "writtenOn": "2022-10-28T00:45:52Z",
      "side": 1,
      "message": "Its type is expected to be str, not pathlib.Path.\nOtherwise, I have no idea about how to check if self.absolute_user_root is a subdirectory of self.absolute_out_dir in line 184.\npathlib.is_relative_to function is available since Python 3.9. Maybe someone is still using older version (e.g. 3.6).",
      "parentUuid": "e427a381_3150b27e",
      "range": {
        "startLine": 107,
        "startChar": 38,
        "endLine": 107,
        "endChar": 41
      },
      "revId": "b90c4b4246f944f8b5cdeb4466748383dffb2c89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54a6dd22_3c742ed1",
        "filename": "kleaf/bazel.py",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1140383
      },
      "writtenOn": "2022-10-28T00:54:35Z",
      "side": 1,
      "message": "After checking bazel.sh, seems prebuilt python3 instead of host\u0027s is used. I think the version issue is gone.\nI will update according to your suggestion.",
      "parentUuid": "00b4eb25_c161243a",
      "range": {
        "startLine": 107,
        "startChar": 38,
        "endLine": 107,
        "endChar": 41
      },
      "revId": "b90c4b4246f944f8b5cdeb4466748383dffb2c89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfcd1343_a0e3941e",
        "filename": "kleaf/bazel.py",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-28T01:36:04Z",
      "side": 1,
      "message": "Oh! In that case may be `str(known_startup_options.output_user_root)`?\n\nJust a nit though; f-strings works too.\n\nYes, it uses the prebuilt Python binary.",
      "parentUuid": "54a6dd22_3c742ed1",
      "range": {
        "startLine": 107,
        "startChar": 38,
        "endLine": 107,
        "endChar": 41
      },
      "revId": "b90c4b4246f944f8b5cdeb4466748383dffb2c89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b22afc7_6b0cb4a1",
        "filename": "kleaf/bazel.py",
        "patchSetId": 6
      },
      "lineNbr": 109,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-10-27T22:26:40Z",
      "side": 1,
      "message": "nit: instead of doing this, just \n\n```\ndefault\u003d_require_aboslute_path(f\"{self.absolute_out_dir}/bazel/output_user_root\")\n```\n\nat L103? Then you can drop the conditional",
      "revId": "b90c4b4246f944f8b5cdeb4466748383dffb2c89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
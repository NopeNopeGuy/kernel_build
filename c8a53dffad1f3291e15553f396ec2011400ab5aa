{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8aab3413_e9f78748",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2022-04-27T21:07:39Z",
      "side": 1,
      "message": "Can I get +2 for this change?\n\nThis fixes the issue to take account of GKI modules during symbol comparison with build.sh. It is already claimed to be working but that\u0027s not the case with build.sh. However, kleaf do account for the GKI modules as an objects for comparison. This will sync build.sh and kleaf and shouldn\u0027t be tied with the GKI module protected/exported symbol list tooling I have been trying to figure out.\n\nRef: https://source.android.com/devices/architecture/kernel/abi-monitor#comparing-kernel-binaries-to-gki-ref-kmi ",
      "revId": "c8a53dffad1f3291e15553f396ec2011400ab5aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bb3a685_7cc3571c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2022-04-29T08:23:39Z",
      "side": 1,
      "message": "I think the code works. However, please make sure Quentin is OK with this.\n\nI am not an owner.",
      "revId": "c8a53dffad1f3291e15553f396ec2011400ab5aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0e52364_5cd9b980",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2022-05-01T20:18:54Z",
      "side": 1,
      "message": "Ok. Thanks. I\u0027ll wait for Matthias to comeback. This is actually a bug in current build.sh technically as without this anything set as module in gki_defconfig will cause a build error for \"symbols missing from ksymtab\" which is different from symbols missing from the symbollist.",
      "parentUuid": "4bb3a685_7cc3571c",
      "revId": "c8a53dffad1f3291e15553f396ec2011400ab5aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18c50ee4_748c3946",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1569742
      },
      "writtenOn": "2022-05-03T08:55:10Z",
      "side": 1,
      "message": "Sorry I\u0027m not sure to understand that last comment, what would cause \"symbols missing from ksymtab\" to be reported?\n\nAlso, I still believe this regresses the current behaviour as we may not flag vendor modules accessing symbols they shouldn\u0027t access (protected symbols specifically).",
      "parentUuid": "f0e52364_5cd9b980",
      "revId": "c8a53dffad1f3291e15553f396ec2011400ab5aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e0df2ac_4655c590",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2022-05-03T16:32:25Z",
      "side": 1,
      "message": "What I meant is the presubmit errors on this: http://aosp/2078620\n\nThat\u0027s a different behavior than kleaf system; because kleaf does account for the GKI modules where build.sh claims it in doc but it doesn\u0027t account for it.\n\nI am working on the build time check of vendor modules against protected symbol; but that thing is not that straight forward and probably check should not be here. IIUC, this should be considered independent of it; as with out without this change vendor accessing protected symbol behavior doesn\u0027t change.",
      "parentUuid": "18c50ee4_748c3946",
      "revId": "c8a53dffad1f3291e15553f396ec2011400ab5aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c542f76_f5c76d6b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1569742
      },
      "writtenOn": "2022-05-03T17:06:37Z",
      "side": 1,
      "message": "Dunno if that belongs anywhere else: the idea of this check is to make sure vendor module developers get a build-time error if their module will fail to load because it accesses a symbol it shouldn\u0027t. So far this was checked by ensuring ksymtab \u003d\u003d union of vendor symbol lists, but to support GKI modules the correct extension of this check involves checking that vendor modules don\u0027t access protected symbols as that would lead to a module loading failure as well.\n\nIt seems like the correct check is to iterate over vendor modules (which can easily be distinguished from GKI modules as we have a list of GKI modules somewhere in the tree IIRC), and make sure that all undefined symbols in those modules are either on the vendor symbol list, or exported by another vendor module.",
      "parentUuid": "0e0df2ac_4655c590",
      "revId": "c8a53dffad1f3291e15553f396ec2011400ab5aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65420155_15d5fdab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-05-03T17:32:40Z",
      "side": 1,
      "message": "I think you did say that kleaf already correctly handles this, right? Please resolve this comment if it is the case.",
      "revId": "c8a53dffad1f3291e15553f396ec2011400ab5aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d33019e5_52cb6d5d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2022-05-03T18:13:20Z",
      "side": 1,
      "message": "When we are just building the aarch64 from ACK; there are no vendor modules; only GKI modules - so we can\u0027t rely on the vendor modules iteration for this check globally. It will work for the device builds.",
      "parentUuid": "7c542f76_f5c76d6b",
      "revId": "c8a53dffad1f3291e15553f396ec2011400ab5aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "acd62a22_f295abf0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1569742
      },
      "writtenOn": "2022-05-04T08:56:14Z",
      "side": 1,
      "message": "Yep, this doesn\u0027t matter when building from ACK, but some things in our build system (including this check) are done to help partners with their device builds. And we\u0027ve pushed partners to use our stuff for their device builds since the beginning of GKI, so we should be careful not to regress now.",
      "parentUuid": "d33019e5_52cb6d5d",
      "revId": "c8a53dffad1f3291e15553f396ec2011400ab5aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
#!/bin/bash

set -e
set -x

source _init.sh

BUILD_PATH=$ANDROID_GCOV_KERNEL_TOP/out/$ANDROID_GCOV_TARGET/$ANDROID_GCOV_SUBTARGET
SRC_PATH=$ANDROID_GCOV_KERNEL_TOP #/$ANDROID_GCOV_SUBTARGET/$ANDROID_GCOV_SUBSUBTARGET

# Create a link to the source files in the build directory. That is where
# lcov expects to find what it needs.
if [ ! -e $BUILD_PATH/$ANDROID_GCOV_COMMONTARGET ]; then
ln -s \
	$ANDROID_GCOV_KERNEL_PATH \
	$BUILD_PATH/$ANDROID_GCOV_COMMONTARGET
fi

# flask.h is autogenerated, so that is found in the build directory.
# Unfortunately the expected directory is at SRC_PATH, so hackily copy the
# file there
mkdir -p $ANDROID_GCOV_KERNEL_TOP/security/selinux
cp $ANDROID_GCOV_KERNEL_TOP/out/$ANDROID_GCOV_TARGET/$ANDROID_GCOV_SUBTARGET/security/selinux/flask.h \
	$ANDROID_GCOV_KERNEL_TOP/security/selinux/flask.h

lcov \
	--capture \
	-d d/gcov$ANDROID_GCOV_KERNEL_TOP/out/$ANDROID_GCOV_TARGET/$ANDROID_GCOV_SUBTARGET/ \
	-b $SRC_PATH \
	--gcov-tool $(realpath $(dirname $0))/llvm-gcov.sh \
	-o cov.info

genhtml cov.info -o output

{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "43c1bc45_5efacbec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 34
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-01-17T07:07:47Z",
      "side": 1,
      "message": "Requires change in bazel-central-registry",
      "revId": "d4c4a60edab2093f4aaba67959b79ac9e7444b68",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "908c3992_b6fcbcd7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 34
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-01-25T05:43:30Z",
      "side": 1,
      "message": "CL:2924780",
      "parentUuid": "43c1bc45_5efacbec",
      "revId": "d4c4a60edab2093f4aaba67959b79ac9e7444b68",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cc1bb40_c0e589bf",
        "filename": "kleaf/bazelrc/bzlmod.bazelrc",
        "patchSetId": 34
      },
      "lineNbr": 29,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2024-01-17T13:50:28Z",
      "side": 1,
      "message": "nit: Should that not be \n```\ncommon:bzlmod --enable_bzlmod\n\ncommon --registry\u003dfile://%workspace%/external/bazelbuild-bazel-central-registry\ncommon --lockfile_mode\u003doff\n```\n\nI assume the flags are still valid, but just noops if bzlmod is not active.",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 29,
        "endChar": 0
      },
      "revId": "d4c4a60edab2093f4aaba67959b79ac9e7444b68",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5945b8f9_24cee761",
        "filename": "kleaf/bazelrc/bzlmod.bazelrc",
        "patchSetId": 34
      },
      "lineNbr": 29,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-01-17T20:06:28Z",
      "side": 1,
      "message": "They should be like that, but to avoid unintentional interruption (e.g. a bug in Bazel that causes these flags to have side effects when --noenable_bzlmod), I put them behind --config\u003dbzlmod too.",
      "parentUuid": "3cc1bb40_c0e589bf",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 29,
        "endChar": 0
      },
      "revId": "d4c4a60edab2093f4aaba67959b79ac9e7444b68",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24e9bf00_05f8771d",
        "filename": "kleaf/bzlmod/DO_NOT_BUILD_HERE",
        "patchSetId": 34
      },
      "lineNbr": 2,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2024-01-17T13:50:28Z",
      "side": 1,
      "message": "perhaps name the files differently ?",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 2,
        "endChar": 54
      },
      "revId": "d4c4a60edab2093f4aaba67959b79ac9e7444b68",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e95da80_bbb6b749",
        "filename": "kleaf/bzlmod/DO_NOT_BUILD_HERE",
        "patchSetId": 34
      },
      "lineNbr": 2,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-01-17T20:06:28Z",
      "side": 1,
      "message": "If so then buildifier ayeaye plugin also need to be updated.\n\nShould I name that file `bazel.MODULE`, then update the ayeaye plugin to include bazel.MODULE files?",
      "parentUuid": "24e9bf00_05f8771d",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 2,
        "endChar": 54
      },
      "revId": "d4c4a60edab2093f4aaba67959b79ac9e7444b68",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea757778_f9249a36",
        "filename": "kleaf/bzlmod/DO_NOT_BUILD_HERE",
        "patchSetId": 34
      },
      "lineNbr": 2,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2024-01-19T10:59:25Z",
      "side": 1,
      "message": "Following the existing\n\n```\n  WORKSPACE -\u003e kleaf/bazel.WORKSPACE\n```\n\nstrictly speaking it should be\n\n```\n  MODULE.bazel -\u003e kleaf/bzlmod/bazel.MODULE.bazel\n  WORKSPACE -\u003e kleaf/bzlmod/bazel.WORKSPACE\n```\n\nAnd then since the buildifier analyzer looks at the extension, e.g. `.WORKSPACE` and `.bazel`, this would all just work fine and consistent.",
      "parentUuid": "0e95da80_bbb6b749",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 2,
        "endChar": 54
      },
      "revId": "d4c4a60edab2093f4aaba67959b79ac9e7444b68",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb3e2f44_2b5b83a2",
        "filename": "kleaf/bzlmod/DO_NOT_BUILD_HERE",
        "patchSetId": 34
      },
      "lineNbr": 2,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2024-01-19T11:01:13Z",
      "side": 1,
      "message": "Now I see that it needs to be\n\n```\nWORKSPACE.bzlmod -\u003e kleaf/bzlmod/bazel.WORKSPACE.bzlmod\n```\n\nBut then all that is needed is to teach the analyzer to also pick up `.bzlmod`.",
      "parentUuid": "ea757778_f9249a36",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 2,
        "endChar": 54
      },
      "revId": "d4c4a60edab2093f4aaba67959b79ac9e7444b68",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb031267_78f8fbfd",
        "filename": "kleaf/bzlmod/DO_NOT_BUILD_HERE",
        "patchSetId": 34
      },
      "lineNbr": 2,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-01-23T21:22:22Z",
      "side": 1,
      "message": "cl/600888217; and I\u0027ll update the filename here too.",
      "parentUuid": "bb3e2f44_2b5b83a2",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 2,
        "endChar": 54
      },
      "revId": "d4c4a60edab2093f4aaba67959b79ac9e7444b68",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ce5e297_819fabb2",
        "filename": "kleaf/bzlmod/DO_NOT_BUILD_HERE",
        "patchSetId": 34
      },
      "lineNbr": 2,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-01-24T20:25:12Z",
      "side": 1,
      "message": "I tried this. There is a small caveat; `buildifier` has some special handling for special files like `MODULE.bazel`. If I name it `bazel.MODULE.bazel` these special handling are not effective. For example, for these lines:\n\n```\nbazel_dep(\n    name \u003d \"rules_cc\",\n    version \u003d \"0.0.4\",\n)\nbazel_dep(\n    name \u003d \"rules_pkg\",\n    version \u003d \"0.9.1\",\n)\n\nbazel_dep(\n    name \u003d \"stardoc\",\n    version \u003d \"0.5.3\",\n    dev_dependency \u003d True,\n    repo_name \u003d \"io_bazel_stardoc\",\n)\n```\n\nIf the file is named MODULE.bazel, the non dev dependencies are grouped together WITHOUT a blank line in between, then a blank line, then the dev dependencies. If the file is NOT named MODULE.bazel, buildifier does not add this new line between dev and non-dev dependencies and will leave whatever blank lines the user uses (if there are more than 1, then reduce to 1).\n\nSo to retain PERFECT MODULE.bazel format, it needs to be named this way. However, I think it is fine to leave a few blank lines unfixed, so I\u0027ll name it `bazel.MODULE.bazel`.",
      "parentUuid": "fb031267_78f8fbfd",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 2,
        "endChar": 54
      },
      "revId": "d4c4a60edab2093f4aaba67959b79ac9e7444b68",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0b7f985_542e33ee",
        "filename": "kleaf/bzlmod/DO_NOT_BUILD_HERE",
        "patchSetId": 34
      },
      "lineNbr": 2,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-01-25T05:43:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ce5e297_819fabb2",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 2,
        "endChar": 54
      },
      "revId": "d4c4a60edab2093f4aaba67959b79ac9e7444b68",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b7c0f57_3f38c9f7",
        "filename": "kleaf/bzlmod/MODULE.bazel",
        "patchSetId": 34
      },
      "lineNbr": 15,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2024-01-17T13:50:28Z",
      "side": 1,
      "message": "kernels",
      "range": {
        "startLine": 15,
        "startChar": 24,
        "endLine": 15,
        "endChar": 30
      },
      "revId": "d4c4a60edab2093f4aaba67959b79ac9e7444b68",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf08907b_70ce3d80",
        "filename": "kleaf/bzlmod/MODULE.bazel",
        "patchSetId": 34
      },
      "lineNbr": 15,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-01-17T20:06:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b7c0f57_3f38c9f7",
      "range": {
        "startLine": 15,
        "startChar": 24,
        "endLine": 15,
        "endChar": 30
      },
      "revId": "d4c4a60edab2093f4aaba67959b79ac9e7444b68",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f46cec20_0078ef4f",
        "filename": "kleaf/bzlmod/MODULE.bazel",
        "patchSetId": 34
      },
      "lineNbr": 111,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-01-17T17:49:31Z",
      "side": 1,
      "message": "0.6.2",
      "range": {
        "startLine": 111,
        "startChar": 15,
        "endLine": 111,
        "endChar": 20
      },
      "revId": "d4c4a60edab2093f4aaba67959b79ac9e7444b68",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1eff8da_f2a9d1b6",
        "filename": "kleaf/bzlmod/MODULE.bazel",
        "patchSetId": 34
      },
      "lineNbr": 111,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-01-17T20:06:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f46cec20_0078ef4f",
      "range": {
        "startLine": 111,
        "startChar": 15,
        "endLine": 111,
        "endChar": 20
      },
      "revId": "d4c4a60edab2093f4aaba67959b79ac9e7444b68",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
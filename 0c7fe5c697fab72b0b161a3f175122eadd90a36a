{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d019780f_244b8884",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 23,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-10T11:11:38Z",
      "side": 1,
      "message": "mention LTO",
      "revId": "0c7fe5c697fab72b0b161a3f175122eadd90a36a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d7f0f65_7d9260a7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 23,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-04-02T00:13:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d019780f_244b8884",
      "revId": "0c7fe5c697fab72b0b161a3f175122eadd90a36a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7225f765_2b53c120",
        "filename": "build.sh",
        "patchSetId": 13
      },
      "lineNbr": 423,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-10T11:11:38Z",
      "side": 1,
      "message": "let\u0027s actively opt in to that deprecation (or out). build.config.common could be defining a flag to either opt in or out the deprecation. Probably opt out on android13*",
      "revId": "0c7fe5c697fab72b0b161a3f175122eadd90a36a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3dc42d6_55593b33",
        "filename": "build.sh",
        "patchSetId": 13
      },
      "lineNbr": 423,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-04-02T00:13:23Z",
      "side": 1,
      "message": "Matthias says that let\u0027s actively enable this on android13 too",
      "parentUuid": "7225f765_2b53c120",
      "revId": "0c7fe5c697fab72b0b161a3f175122eadd90a36a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3841b3c_302b2053",
        "filename": "build.sh",
        "patchSetId": 13
      },
      "lineNbr": 425,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-10T11:11:38Z",
      "side": 1,
      "message": "is deprecated for this branch. Please migrate to Kleaf.",
      "range": {
        "startLine": 425,
        "startChar": 37,
        "endLine": 425,
        "endChar": 47
      },
      "revId": "0c7fe5c697fab72b0b161a3f175122eadd90a36a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d8e4326b_17e11cba",
        "filename": "build.sh",
        "patchSetId": 13
      },
      "lineNbr": 425,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-04-02T00:13:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3841b3c_302b2053",
      "range": {
        "startLine": 425,
        "startChar": 37,
        "endLine": 425,
        "endChar": 47
      },
      "revId": "0c7fe5c697fab72b0b161a3f175122eadd90a36a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0af818d_1e088273",
        "filename": "kleaf/convert_to_bazel.sh",
        "patchSetId": 13
      },
      "lineNbr": 23,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-10T11:11:38Z",
      "side": 1,
      "message": "this might need to be prefixed with ${ROOT_DIR} if ${CWD} !\u003d ${ROOT_DIR}\n\n(but this is a rare case and alternatively we could also emit a `cd ${ROOT_DIR} \u0026\u0026 tools/bazel` in that case)",
      "range": {
        "startLine": 23,
        "startChar": 54,
        "endLine": 23,
        "endChar": 69
      },
      "revId": "0c7fe5c697fab72b0b161a3f175122eadd90a36a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23fd256f_1ae8a1e4",
        "filename": "kleaf/convert_to_bazel.sh",
        "patchSetId": 13
      },
      "lineNbr": 23,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-18T00:04:38Z",
      "side": 1,
      "message": "I don\u0027t think that\u0027s needed. For example, if I am in the `build` directory, executing `BUILD_CONFIG\u003d../common/build.config.gki.aarch64 ./build.sh` gives:\n\n```\n/mnt/sdc/android/kernel/build/../common/build.config.gki.aarch64: line 1: /mnt/sdc/android/kernel/build//mnt/sdc/android/kernel/common/build.config.common: No such file or directory\n```\n\nand executing `BUILD_CONFIG\u003dcommon/build.config.gki.aarch64 ./build.sh` exits immediately with a non-zero exit code.\n\nI think `_setup_env.sh` already assumes $ROOT_DIR\u003d$PWD:\n\nhttps://cs.android.com/android/kernel/superproject/+/common-android-mainline:build/kernel/_setup_env.sh;l\u003d24;drc\u003de5f575376c3abcbc0cafe58746407af68b976c49\n\nso you can\u0027t really run build.sh from anywhere else.",
      "parentUuid": "e0af818d_1e088273",
      "range": {
        "startLine": 23,
        "startChar": 54,
        "endLine": 23,
        "endChar": 69
      },
      "revId": "0c7fe5c697fab72b0b161a3f175122eadd90a36a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "055875be_72b550e4",
        "filename": "kleaf/convert_to_bazel.sh",
        "patchSetId": 13
      },
      "lineNbr": 23,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-23T17:35:29Z",
      "side": 1,
      "message": "yeah, there is probably only a very artificial way for calling this from anywhere else than root.",
      "parentUuid": "23fd256f_1ae8a1e4",
      "range": {
        "startLine": 23,
        "startChar": 54,
        "endLine": 23,
        "endChar": 69
      },
      "revId": "0c7fe5c697fab72b0b161a3f175122eadd90a36a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b12a4079_008c03ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2022-04-08T15:19:48Z",
      "side": 1,
      "message": "I think the conclusion was this approach is OK for now.",
      "revId": "1e21c3e98d261f58bdf20560b7a4df1ce988a70a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6b3819d_be9d7b8f",
        "filename": "build.sh",
        "patchSetId": 2
      },
      "lineNbr": 737,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2022-04-08T15:21:23Z",
      "side": 1,
      "message": "Better as \"\\.\" not \".\".",
      "range": {
        "startLine": 737,
        "startChar": 44,
        "endLine": 737,
        "endChar": 45
      },
      "revId": "1e21c3e98d261f58bdf20560b7a4df1ce988a70a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50438cbf_66a11439",
        "filename": "build.sh",
        "patchSetId": 2
      },
      "lineNbr": 737,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2022-04-08T23:20:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6b3819d_be9d7b8f",
      "range": {
        "startLine": 737,
        "startChar": 44,
        "endLine": 737,
        "endChar": 45
      },
      "revId": "1e21c3e98d261f58bdf20560b7a4df1ce988a70a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc56303f_54b5edff",
        "filename": "build.sh",
        "patchSetId": 2
      },
      "lineNbr": 738,
      "author": {
        "id": 1569742
      },
      "writtenOn": "2022-04-07T08:51:29Z",
      "side": 1,
      "message": "If this guys hasn\u0027t changed, I think this will fail to flag a vendor module using a \u0027protected\u0027 symbol, which is useful to have at build time. This script might require a bigger rework to make sure that:\n 1. the vendor symbol list is a strict subset of the ABI exported by the kernel image + GKI modules;\n 2. all undefined symbols in vendor modules are in the vendor symbol list.\n \nFollowing my comment on the other CL, all this can be done without maintaining a list of protected symbols I think?",
      "range": {
        "startLine": 738,
        "startChar": 26,
        "endLine": 738,
        "endChar": 48
      },
      "revId": "1e21c3e98d261f58bdf20560b7a4df1ce988a70a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5b82c0d_92b5f662",
        "filename": "build.sh",
        "patchSetId": 2
      },
      "lineNbr": 738,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2022-04-07T19:01:21Z",
      "side": 1,
      "message": "We still need the list for the runtime protection look up, right?\n\nMay be we should set up a GVC; somehow I feel like I am not fully understanding what you have been suggesting. I\u0027ll set one up for my tonight.",
      "parentUuid": "dc56303f_54b5edff",
      "range": {
        "startLine": 738,
        "startChar": 26,
        "endLine": 738,
        "endChar": 48
      },
      "revId": "1e21c3e98d261f58bdf20560b7a4df1ce988a70a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
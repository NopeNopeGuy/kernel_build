{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2bbbfc8c_1f9b7103",
        "filename": "kleaf/utils.bzl",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2022-04-08T15:06:53Z",
      "side": 1,
      "message": "declare_directory actually supports a sibling argument, so maybe reword this comment to reflect why you are not using that.",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 74,
        "endChar": 62
      },
      "revId": "7e8f9b67738308704355d60cc54057e7c73bb106",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "506e2b04_78706d34",
        "filename": "kleaf/utils.bzl",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-04-08T21:06:06Z",
      "side": 1,
      "message": "What do you mean? This just gives an alternative command to use. In fact, I am using this declare_directory in many places already, but I notice the shortcoming explained in this comment. Also it will conflict if I have an action to output this directory, then have another action to output to a file within that directory, even when the second action takes the directory as an input. declare_directory simply doesn\u0027t make sense here because intermediates aren\u0027t final outputs.",
      "parentUuid": "2bbbfc8c_1f9b7103",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 74,
        "endChar": 62
      },
      "revId": "7e8f9b67738308704355d60cc54057e7c73bb106",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30214a7d_42c06189",
        "filename": "kleaf/utils.bzl",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-04-08T22:20:36Z",
      "side": 1,
      "message": "I\u0027ve updated the comment, PTAL.",
      "parentUuid": "506e2b04_78706d34",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 74,
        "endChar": 62
      },
      "revId": "7e8f9b67738308704355d60cc54057e7c73bb106",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f3be84c_999407a0",
        "filename": "kleaf/utils.bzl",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2022-04-08T15:06:53Z",
      "side": 1,
      "message": "later",
      "range": {
        "startLine": 78,
        "startChar": 47,
        "endLine": 78,
        "endChar": 49
      },
      "revId": "7e8f9b67738308704355d60cc54057e7c73bb106",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fdc57eeb_0563c7c8",
        "filename": "kleaf/utils.bzl",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-04-08T22:20:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f3be84c_999407a0",
      "range": {
        "startLine": 78,
        "startChar": 47,
        "endLine": 78,
        "endChar": 49
      },
      "revId": "7e8f9b67738308704355d60cc54057e7c73bb106",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23894cc8_2241e780",
        "filename": "kleaf/utils.bzl",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2022-04-12T08:59:48Z",
      "side": 1,
      "message": "Sorry, slightly overloaded here.\n\nI meant exactly what I said. Perhaps I missed a use of the sibling argument in the existing code. The use of \"sibling\" is closer to what you are trying to achieve or had before than the use of declare_directory without \"sibling\".\n\nAnd context: I saw some code implementing some new functionality, so I did the due diligence check to make sure that the thing it was replacing was indeed unsuitable. Then I found that there existed an extra argument to the thing it was replacing that narrowed the gap between existing and wanted behaviours.",
      "parentUuid": "fdc57eeb_0563c7c8",
      "range": {
        "startLine": 78,
        "startChar": 47,
        "endLine": 78,
        "endChar": 49
      },
      "revId": "7e8f9b67738308704355d60cc54057e7c73bb106",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
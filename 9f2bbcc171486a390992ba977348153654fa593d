{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7058fe46_60c4aa45",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2023-02-20T09:28:05Z",
      "side": 1,
      "message": "The commit message links to a reverted change. Please update.",
      "revId": "9f2bbcc171486a390992ba977348153654fa593d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0f7c516_15718f17",
        "filename": "abi/verify_ksymtab.py",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2023-02-20T09:44:23Z",
      "side": 1,
      "message": "I would just say \"symbol list\". There are many choices for naming this argument (GKI symbols, KMI symbol list, ABI symbol list). I would use whatever most closely matches the intent of the script.\n\nDon\u0027t say \"allow\" as there is actually a symbol allow list elsewhere with a different function.",
      "range": {
        "startLine": 35,
        "startChar": 12,
        "endLine": 35,
        "endChar": 63
      },
      "revId": "9f2bbcc171486a390992ba977348153654fa593d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "111c167c_d9343cee",
        "filename": "abi/verify_ksymtab.py",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-02-20T17:49:25Z",
      "side": 1,
      "message": "In case of builds that do not have modules we only have vmlinux.symvers, but the functionality still works. Hence, please make this generic `--symvers-file`.",
      "range": {
        "startLine": 41,
        "startChar": 12,
        "endLine": 41,
        "endChar": 26
      },
      "revId": "9f2bbcc171486a390992ba977348153654fa593d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d12c4d72_3ed7bafd",
        "filename": "abi/verify_ksymtab.py",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2023-02-20T09:44:23Z",
      "side": 1,
      "message": "What might else they be? This comment isn\u0027t adding value.",
      "range": {
        "startLine": 46,
        "startChar": 4,
        "endLine": 46,
        "endChar": 48
      },
      "revId": "9f2bbcc171486a390992ba977348153654fa593d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52e1f306_422381a0",
        "filename": "abi/verify_ksymtab.py",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2023-02-20T09:44:23Z",
      "side": 1,
      "message": "This is an important part of the interface and shoulds be documented in the usage message.\n\nHowever, now is as good time as any to move away from:\n\n1. communication via environment variables\n2. defaulting the list in the script\n\nIs the intent that KMI_STRICT_MODE_OBJECTS consist of all GKI (non-partner) objects?",
      "range": {
        "startLine": 47,
        "startChar": 28,
        "endLine": 47,
        "endChar": 52
      },
      "revId": "9f2bbcc171486a390992ba977348153654fa593d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "166ef1e5_d4796051",
        "filename": "abi/verify_ksymtab.py",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-02-20T17:49:25Z",
      "side": 1,
      "message": "KMI_STRICT_MODE_OBJECTS is passed as part of the command line. Can we instead use the change to make this a program argument (with `[\u0027vmlinux\u0027,]` being the default) instead of an environment variable? This used to be overridable through the environment, but this is no longer the case.",
      "revId": "9f2bbcc171486a390992ba977348153654fa593d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72e5ce5e_23f962a1",
        "filename": "abi/verify_ksymtab.py",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-02-20T17:49:25Z",
      "side": 1,
      "message": "```\nsymbol_name, object_name, export_type \u003d line.strip().split(\"\\t\")\n```",
      "range": {
        "startLine": 54,
        "startChar": 1,
        "endLine": 57,
        "endChar": 37
      },
      "revId": "9f2bbcc171486a390992ba977348153654fa593d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f5a4f4a_89add8e5",
        "filename": "abi/verify_ksymtab.py",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-02-20T17:49:25Z",
      "side": 1,
      "message": "since this loop is anyway over, consider\n```\n    for line in module_symvers_file:\n      symbol, object, export_type \u003d line.strip().split(\"\\t\")\n      if export_type.startswith(\"EXPORT_SYMBOL\") and object in objects:\n        ksymtab_symbols.append(symbol)\n```",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 57,
        "endChar": 37
      },
      "revId": "9f2bbcc171486a390992ba977348153654fa593d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f22130d2_3405f46a",
        "filename": "abi/verify_ksymtab.py",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2023-02-20T09:44:23Z",
      "side": 1,
      "message": "Add a comment as to the expected format of this file, either here or at the top.\n\nWe have two different formats in use. The ones partners use are in libabigail\u0027s .ini format. Later on, the build system uses a flat file of symbols (and there should be no need to strip whitespace from those).",
      "range": {
        "startLine": 59,
        "startChar": 1,
        "endLine": 59,
        "endChar": 18
      },
      "revId": "9f2bbcc171486a390992ba977348153654fa593d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff815369_7b4feee9",
        "filename": "abi/verify_ksymtab.py",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-02-20T17:49:25Z",
      "side": 1,
      "message": "this list does not need to be declared empty here. The definition within the upcoming block is sufficient.",
      "revId": "9f2bbcc171486a390992ba977348153654fa593d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a41fbe2f_eedad22d",
        "filename": "abi/verify_ksymtab.py",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-02-20T17:49:25Z",
      "side": 1,
      "message": "```\nabi_symbols \u003d abi_symbol_list_file.read().splitlines()\n```",
      "range": {
        "startLine": 61,
        "startChar": 4,
        "endLine": 63,
        "endChar": 5
      },
      "revId": "9f2bbcc171486a390992ba977348153654fa593d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f113c9f1_8e50b478",
        "filename": "abi/verify_ksymtab.py",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2023-02-20T09:44:23Z",
      "side": 1,
      "message": "I don\u0027t think this newline is needed.",
      "range": {
        "startLine": 68,
        "startChar": 11,
        "endLine": 68,
        "endChar": 13
      },
      "revId": "9f2bbcc171486a390992ba977348153654fa593d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
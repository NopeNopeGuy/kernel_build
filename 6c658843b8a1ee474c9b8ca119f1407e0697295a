{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6436de39_f6e44641",
        "filename": "kleaf/docs/testing.md",
        "patchSetId": 6
      },
      "lineNbr": 14,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-28T11:14:20Z",
      "side": 1,
      "message": "foo is a too far-fetched name for the target to make this a useful example. Try using real-world names (or at least close to those).",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 37
      },
      "revId": "6c658843b8a1ee474c9b8ca119f1407e0697295a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb45d211_589fe8fe",
        "filename": "kleaf/docs/testing.md",
        "patchSetId": 6
      },
      "lineNbr": 14,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-29T00:17:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6436de39_f6e44641",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 37
      },
      "revId": "6c658843b8a1ee474c9b8ca119f1407e0697295a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a66977f_badab116",
        "filename": "kleaf/tests/kernel_build_test.py",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-28T11:14:20Z",
      "side": 1,
      "message": "the same comments as in an earlier patch apply, but generally this is a lot of code duplication with `kernel_module_test.py`.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 35,
        "endChar": 0
      },
      "revId": "6c658843b8a1ee474c9b8ca119f1407e0697295a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05653635_c9d4509c",
        "filename": "kleaf/tests/kernel_build_test.py",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-28T22:17:25Z",
      "side": 1,
      "message": "Just 6 lines (L25, 27, 28, 29, 31, 34). Their arguments can be different. I think it is cleaner to duplicate rather than putting in a common utils script because the arguments are different.",
      "parentUuid": "2a66977f_badab116",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 35,
        "endChar": 0
      },
      "revId": "6c658843b8a1ee474c9b8ca119f1407e0697295a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "159132dc_a5e1649f",
        "filename": "kleaf/tests/kernel_build_test.py",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-29T01:55:24Z",
      "side": 1,
      "message": "yeah now it grows bigger.\n\nMaybe I should move it to a common utils script with function pointers?\n\n```\n# common.py\ndef load_arguments(parser_fn):\n  ...\n  parser_fn(parser)\n  return parser.parse_args(...)\n```\n\n```\nkernel_module_test.py\ndef argparser_fn(parser):\n  parser.add_argument(...)\narguments \u003d common.load_arguments(argparser_fn)\n```",
      "parentUuid": "05653635_c9d4509c",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 35,
        "endChar": 0
      },
      "revId": "6c658843b8a1ee474c9b8ca119f1407e0697295a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f7dd96f_65d8b255",
        "filename": "kleaf/tests/kernel_build_test.py",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-28T11:14:20Z",
      "side": 1,
      "message": "don\u0027t rely on 12",
      "range": {
        "startLine": 39,
        "startChar": 68,
        "endLine": 39,
        "endChar": 69
      },
      "revId": "6c658843b8a1ee474c9b8ca119f1407e0697295a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2939981_a7431043",
        "filename": "kleaf/tests/kernel_build_test.py",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-28T11:14:20Z",
      "side": 1,
      "message": "if this is in a string section, the beginning of the line is not guaranteed. If something encodes \"ALinux\", a valid choice for a references to the string could be an offset into the line.",
      "range": {
        "startLine": 39,
        "startChar": 6,
        "endLine": 39,
        "endChar": 7
      },
      "revId": "6c658843b8a1ee474c9b8ca119f1407e0697295a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "02057a69_e54a9bdd",
        "filename": "kleaf/tests/kernel_build_test.py",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-29T00:17:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2939981_a7431043",
      "range": {
        "startLine": 39,
        "startChar": 6,
        "endLine": 39,
        "endChar": 7
      },
      "revId": "6c658843b8a1ee474c9b8ca119f1407e0697295a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8962cbb3_536bd162",
        "filename": "kleaf/tests/kernel_build_test.py",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-29T00:17:42Z",
      "side": 1,
      "message": "changed to 6,40",
      "parentUuid": "6f7dd96f_65d8b255",
      "range": {
        "startLine": 39,
        "startChar": 68,
        "endLine": 39,
        "endChar": 69
      },
      "revId": "6c658843b8a1ee474c9b8ca119f1407e0697295a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6927dab_a5b030cf",
        "filename": "kleaf/tests/kernel_build_test.py",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2022-03-30T18:06:31Z",
      "side": 1,
      "message": "I don\u0027t think the kernel will ever use anything less than 12.",
      "parentUuid": "8962cbb3_536bd162",
      "range": {
        "startLine": 39,
        "startChar": 68,
        "endLine": 39,
        "endChar": 69
      },
      "revId": "6c658843b8a1ee474c9b8ca119f1407e0697295a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e4978dc_38148740",
        "filename": "kleaf/tests/kernel_test.bzl",
        "patchSetId": 6
      },
      "lineNbr": 51,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-28T11:14:20Z",
      "side": 1,
      "message": "I believe this needs to be a macro in order to define those tests in projects. And that is necessary in order to do `bazel test ...`",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 51,
        "endChar": 17
      },
      "revId": "6c658843b8a1ee474c9b8ca119f1407e0697295a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac2f4b7b_241b2305",
        "filename": "kleaf/tests/kernel_test.bzl",
        "patchSetId": 6
      },
      "lineNbr": 51,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-28T22:17:25Z",
      "side": 1,
      "message": "What do you mean? This works",
      "parentUuid": "6e4978dc_38148740",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 51,
        "endChar": 17
      },
      "revId": "6c658843b8a1ee474c9b8ca119f1407e0697295a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73304768_3363a1be",
        "filename": "kleaf/tests/kernel_test.bzl",
        "patchSetId": 6
      },
      "lineNbr": 56,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-03-28T11:14:20Z",
      "side": 1,
      "message": "strictly speaking this is a template, not a script. But I hope in the final implementation (with the comments addressed), it can actually be a script.",
      "range": {
        "startLine": 56,
        "startChar": 9,
        "endLine": 56,
        "endChar": 16
      },
      "revId": "6c658843b8a1ee474c9b8ca119f1407e0697295a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4463489_ac422150",
        "filename": "kleaf/tests/kernel_test.bzl",
        "patchSetId": 6
      },
      "lineNbr": 56,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-28T22:17:25Z",
      "side": 1,
      "message": "Yeah I know ðŸ˜ž\nSee the other comment in aosp/2036989",
      "parentUuid": "73304768_3363a1be",
      "range": {
        "startLine": 56,
        "startChar": 9,
        "endLine": 56,
        "endChar": 16
      },
      "revId": "6c658843b8a1ee474c9b8ca119f1407e0697295a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59009a54_1ecc03a3",
        "filename": "kleaf/tests/kernel_test.bzl",
        "patchSetId": 6
      },
      "lineNbr": 56,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-03-29T01:57:51Z",
      "side": 1,
      "message": "There\u0027s a workaround. Similar to how copy_to_dist_dir find the dist manifest, find the arguments file by looking into `os.path.dirname(__file__)`:\n\nhttps://cs.android.com/android/platform/superproject/+/master:build/bazel_common_rules/dist/dist.py;l\u003d44;drc\u003d65c2e9e92bbf70cce29c9bbd5e02b182164e887e\n\nI think this is still not as good, though. WDYT?",
      "parentUuid": "a4463489_ac422150",
      "range": {
        "startLine": 56,
        "startChar": 9,
        "endLine": 56,
        "endChar": 16
      },
      "revId": "6c658843b8a1ee474c9b8ca119f1407e0697295a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
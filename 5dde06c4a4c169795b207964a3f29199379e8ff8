{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a62c7b63_a657a147",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 224,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2022-09-22T16:12:48Z",
      "side": 1,
      "message": "space before open-paren",
      "range": {
        "startLine": 224,
        "startChar": 52,
        "endLine": 224,
        "endChar": 53
      },
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89468779_149539e3",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 224,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2022-09-22T16:12:48Z",
      "side": 1,
      "message": "^space here too",
      "range": {
        "startLine": 224,
        "startChar": 64,
        "endLine": 224,
        "endChar": 65
      },
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e0e55e8_e0a50438",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 224,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2022-09-22T16:12:48Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 224,
        "startChar": 43,
        "endLine": 224,
        "endChar": 52
      },
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e6dc7c6_c5da1295",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 224,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2022-09-22T20:32:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4e0e55e8_e0a50438",
      "range": {
        "startLine": 224,
        "startChar": 43,
        "endLine": 224,
        "endChar": 52
      },
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66bb02d6_1a8a9de7",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 224,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2022-09-22T20:32:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a62c7b63_a657a147",
      "range": {
        "startLine": 224,
        "startChar": 52,
        "endLine": 224,
        "endChar": 53
      },
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "07c3a70b_c5c0448b",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 224,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2022-09-22T20:32:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "89468779_149539e3",
      "range": {
        "startLine": 224,
        "startChar": 64,
        "endLine": 224,
        "endChar": 65
      },
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0cf0e5cb_bdbd9702",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2022-09-21T06:40:09Z",
      "side": 1,
      "message": "I differed from `modinfo` based approach to check whether a module is signed or not because of these reasons:\n\n1. Every signed module has last string as \"~Module signature appended~\\n\". `llvm-strings` is already available as part of our prebuilts where as `modinfo` needs to be added to keep our build system self contained.\n\n2. Initially I spent lot of time to get the `modinfo` working with python\u0027s `subprocess.run()` and `subprocess.check_output()` on my desktop before finding and settling with `llvm-strings` approach. It doesn\u0027t give error but output is always empty with return code as 0. However, `os.system()` does work but again `llvm-strings` is more efficient.\n\nThis works:\n\n```\ncmd \u003d \"modinfo -F signer \" + module\nos.system(cmd)\n```\n\nThese don\u0027t work:\n\n```\nmodinfo_result \u003d subprocess.run([\"/usr/sbin/modinfo\", \"-F signer\", module], capture_output\u003dTrue, check\u003dTrue)\n```\n\n```\nout \u003d subprocess.check_output([\"/usr/sbin/modinfo\", \"-F signer\", module],\n                                stderr\u003dsubprocess.DEVNULL).decode(\"ascii\")\n```\n\nMy guess is Python\u0027s `subprocess` doesn\u0027t work with program name as symbolic link as `insmod`, `rmmmod` and `modinfo` are symbolic link to `/bin/kmod` and depending on the link name `/bin/kmod` changes its behavior.",
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1dd9a541_6aa968c4",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-09-27T15:17:33Z",
      "side": 1,
      "message": "`\"-F\", \"signer\"` are two separate strings\n\nsymbolic links should not be an issue here at all. please make it work with `subprocess`. There is no proper error handling with `os.system`.\n\n`llvm-strings` works coincidentally and not because it is using a well defined interface. I would rather not recommend using that for this purpose.\n\nThis also does not work for modules that are signed by a different key, which is technically a valid use case.",
      "parentUuid": "0cf0e5cb_bdbd9702",
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "166969d2_80b97d42",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2022-09-27T19:08:54Z",
      "side": 1,
      "message": "\u003e `\"-F\", \"signer\"` are two separate strings\n\nThanks. Yes, that was the issue. It works now.\n\n\u003e `llvm-strings`\n\nAll signed modules must have last string set to that so not really a coincident. With out that as the last string in the signed module, module signature verification will failed at the runtime. With `modinfo` we will be checking some other string (`\"Build time autogenerated kernel key\\n\"`) in the binary. If you still prefer modinfo, I\u0027ll work on getting it added in the prebuilts, and use that. Let me know.\n\n\u003e This also does not work for modules that are signed by a different key, which is technically a valid use case.\n\nIt\u0027s technically not a valid use case.\n\nAlso, if someone wants to signed modules; they need to have their key in the default keyring of the GKI image (release by Google) for the runtime verification. If we leave space and have them insert the key in the binary; then that key needs to be verifiable by the default key in the keyring, so we need to make our build time key available to them.\n\nWe have been clear about this in our documentation as well: \n\nhttps://source.android.com/docs/core/architecture/kernel/loadable-kernel-modules#module-signing",
      "parentUuid": "1dd9a541_6aa968c4",
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fce0780b_171c67f6",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2022-09-28T00:31:50Z",
      "side": 1,
      "message": "Added `modinfo` in hermetic tools (http://aosp/2234352) and updated to use that instead of `llvm-strings`.",
      "parentUuid": "166969d2_80b97d42",
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96d35a69_95e13604",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 227,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2022-09-22T16:12:48Z",
      "side": 1,
      "message": "Just return boolean-expression",
      "range": {
        "startLine": 227,
        "startChar": 1,
        "endLine": 227,
        "endChar": 4
      },
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3d954dd_9dfc3831",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 227,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2022-09-22T20:32:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "96d35a69_95e13604",
      "range": {
        "startLine": 227,
        "startChar": 1,
        "endLine": 227,
        "endChar": 4
      },
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6b1916a_de88a3da",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 317,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2022-09-22T16:12:48Z",
      "side": 1,
      "message": "^space",
      "range": {
        "startLine": 317,
        "startChar": 46,
        "endLine": 317,
        "endChar": 47
      },
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c99cc889_af54592a",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 317,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2022-09-22T16:12:48Z",
      "side": 1,
      "message": "^space",
      "range": {
        "startLine": 317,
        "startChar": 19,
        "endLine": 317,
        "endChar": 22
      },
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d31bfea_1b59df75",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 317,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2022-09-22T20:32:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c99cc889_af54592a",
      "range": {
        "startLine": 317,
        "startChar": 19,
        "endLine": 317,
        "endChar": 22
      },
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2bda9078_cedc8c8c",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 317,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2022-09-22T20:32:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e6b1916a_de88a3da",
      "range": {
        "startLine": 317,
        "startChar": 46,
        "endLine": 317,
        "endChar": 47
      },
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e668353f_720c5349",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 319,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2022-09-22T16:12:48Z",
      "side": 1,
      "message": "I think the correct style is no extra space after [ or before ].",
      "range": {
        "startLine": 319,
        "startChar": 16,
        "endLine": 319,
        "endChar": 18
      },
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "524683a4_8c2b3082",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 319,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2022-09-22T20:32:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e668353f_720c5349",
      "range": {
        "startLine": 319,
        "startChar": 16,
        "endLine": 319,
        "endChar": 18
      },
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cab10132_9b55a30c",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 320,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2022-09-22T16:12:48Z",
      "side": 1,
      "message": "There is going to be a partition by predicate function in the standard library.[^0]\n\nAlso, it would be a good idea to use a new name instead of modules.\n\nThere is even the chance that some code wants the original combined modules list.\n\n[^0] I\u0027d be wrong. https://stackoverflow.com/questions/8793772 and https://giannitedesco.github.io/2020/12/14/a-faster-partition-function.html and many more.",
      "range": {
        "startLine": 319,
        "startChar": 1,
        "endLine": 320,
        "endChar": 64
      },
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "874c8673_76a21dd8",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 320,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2022-09-22T20:32:44Z",
      "side": 1,
      "message": "Thanks for taking a look.\n\nI did some execution time analysis with 211 modules on my desktop for this piece of code.\n\nCurrent code takes `4.84s` on avg, that\u0027s what is being taken by other approaches with +/- `0.01s` variation from those stack overflow links.\n\nFastest is the `from more_itertools import partition` approch; which is taking just `0.10s` but it returns generators and converting those to lists ends up at `4.83s`. Though I have to install more_itertools on desktop. This is an overhead and not worth the benefits received.\n\nSo, leaving this as it is. Wdyt?",
      "parentUuid": "cab10132_9b55a30c",
      "range": {
        "startLine": 319,
        "startChar": 1,
        "endLine": 320,
        "endChar": 64
      },
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1dea8f2c_a63c2b44",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 320,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2022-09-26T10:57:59Z",
      "side": 1,
      "message": "Given that is_signature_present spawns a process. How about this?\n\nMake a temporary list that just contains (name, boolean) for each module. Then you can write two list comprehensions.\n\nThis restores symmetry and avoids someone later thinking that the second comprehension second one is O(N^2) and replacing the condition with !is_signature_present (which will make it O(N) but much slower).",
      "parentUuid": "874c8673_76a21dd8",
      "range": {
        "startLine": 319,
        "startChar": 1,
        "endLine": 320,
        "endChar": 64
      },
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87dafc6f_787f02f2",
        "filename": "abi/extract_symbols",
        "patchSetId": 1
      },
      "lineNbr": 320,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2022-09-28T00:31:50Z",
      "side": 1,
      "message": "I am not sure I understand what you are trying to explain here, but is this something what you are suggesting?\n\n```\n  modules_with_sign_flag \u003d [(mod, is_signature_present(mod)) for mod in modules]\n  gki_modules \u003d [mod for mod in modules_with_sign_flag if mod[1]]\n  local_modules \u003d [mod for mod in modules_with_sign_flag if not mod[1]]\n```",
      "parentUuid": "1dea8f2c_a63c2b44",
      "range": {
        "startLine": 319,
        "startChar": 1,
        "endLine": 320,
        "endChar": 64
      },
      "revId": "5dde06c4a4c169795b207964a3f29199379e8ff8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
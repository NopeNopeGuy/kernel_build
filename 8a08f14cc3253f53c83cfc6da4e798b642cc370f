{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b8c83326_7f92fbe8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-05-22T22:22:26Z",
      "side": 1,
      "message": "This breaks integration test test_setup_with_prebuilts, which calls bazel in a different directory with PATH polluted. I need to resolve this before merging this change.",
      "revId": "8a08f14cc3253f53c83cfc6da4e798b642cc370f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2428868f_7abab303",
        "filename": "kleaf/hermetic_tools.bzl",
        "patchSetId": 2
      },
      "lineNbr": 201,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-05-21T22:55:42Z",
      "side": 1,
      "message": "@lberki@google.com, Is it bad practice to return declare_file() from another rule in DefaultInfo? If so, I\u0027ll probably change the CL so it apply cfg\u003d\"exec\" on `deps` and `symlinks`, and create two copies of the symlinks instead (That is, there will be two `//build/kernel:hermetic-tools` with two sets of symlinks, but there will only be one `@pigz//:pigz` ever compiled).\n\nI ask this question because when I `bazel build //build/kernel:hermetic-tools`, it now prints paths like:\n\n```\nbazel-out/k8-opt-exec-ST-d57f47055a04/bin/build/kernel/hermetic-tools/xz\n```\n\nBefore the change, the output is:\n\n```\nbazel-bin/build/kernel/hermetic-tools/xz\n```",
      "range": {
        "startLine": 201,
        "startChar": 8,
        "endLine": 201,
        "endChar": 28
      },
      "revId": "8a08f14cc3253f53c83cfc6da4e798b642cc370f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4b1e038_d81f7580",
        "filename": "kleaf/hermetic_tools.bzl",
        "patchSetId": 2
      },
      "lineNbr": 201,
      "author": {
        "id": 1066075
      },
      "writtenOn": "2024-05-22T07:25:57Z",
      "side": 1,
      "message": "Returning files in the `DefaultInfo` of a rule that were declared in another is a perfectly reasonable thing to do. Even the simplest rules (think `filegroup()`) do that all the time.\n\nI was worried that this would not work this way because what does not work is returning an executable created by another rule in `DefaultInfo.executable`, but if you don\u0027t do that, all the power to you.\n\nThe change in the path is expected. It\u0027s because the new `xz` is in the exec configuration (hence the `-exec-` part in the path) whereas the old one was in the target configuration (which is why `bazel-bin/` can directly link to it)\n\nIs the new path acceptable to you?",
      "parentUuid": "2428868f_7abab303",
      "range": {
        "startLine": 201,
        "startChar": 8,
        "endLine": 201,
        "endChar": 28
      },
      "revId": "8a08f14cc3253f53c83cfc6da4e798b642cc370f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f93fa5a2_d41ba80c",
        "filename": "kleaf/hermetic_tools.bzl",
        "patchSetId": 2
      },
      "lineNbr": 201,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-05-22T22:20:46Z",
      "side": 1,
      "message": "Yeah, I think so. I have put an entry in the GKI newsletter to announce this to partners in case they are depending on this implementation detail.",
      "parentUuid": "e4b1e038_d81f7580",
      "range": {
        "startLine": 201,
        "startChar": 8,
        "endLine": 201,
        "endChar": 28
      },
      "revId": "8a08f14cc3253f53c83cfc6da4e798b642cc370f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fb06391_42c4b8d2",
        "filename": "kleaf/hermetic_tools.bzl",
        "patchSetId": 2
      },
      "lineNbr": 210,
      "author": {
        "id": 1961395
      },
      "writtenOn": "2024-05-21T23:01:35Z",
      "side": 1,
      "message": "qq: why is not needed to specify the list of `providers` here?",
      "range": {
        "startLine": 210,
        "startChar": 41,
        "endLine": 210,
        "endChar": 42
      },
      "revId": "8a08f14cc3253f53c83cfc6da4e798b642cc370f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55557031_b5579cc7",
        "filename": "kleaf/hermetic_tools.bzl",
        "patchSetId": 2
      },
      "lineNbr": 210,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-05-21T23:08:47Z",
      "side": 1,
      "message": "https://bazel.build/rules/lib/toplevel/attr#label\n\nIf providers is set, and the target doesn\u0027t provide the given providers, Bazel will fail early. This is mainly useful for public APIs.\n\nIn this case, we control what\u0027s provided to actual (this is a private rule), so I think it is unnecessarily duplicating information.",
      "parentUuid": "9fb06391_42c4b8d2",
      "range": {
        "startLine": 210,
        "startChar": 41,
        "endLine": 210,
        "endChar": 42
      },
      "revId": "8a08f14cc3253f53c83cfc6da4e798b642cc370f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
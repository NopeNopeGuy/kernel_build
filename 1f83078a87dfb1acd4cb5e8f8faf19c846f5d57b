{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bb8ffe02_2097489e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-07-17T17:12:37Z",
      "side": 1,
      "message": "I created a patchset cleaning up some formatting an style issues and some minor other things. Please base any future changes on this version.",
      "revId": "1f83078a87dfb1acd4cb5e8f8faf19c846f5d57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8dfdb272_ae59da4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-07-19T15:57:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bb8ffe02_2097489e",
      "revId": "1f83078a87dfb1acd4cb5e8f8faf19c846f5d57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4900328c_90d4c731",
        "filename": "kleaf/kernel_sbom.py",
        "patchSetId": 14
      },
      "lineNbr": 90,
      "author": {
        "id": 1318142
      },
      "writtenOn": "2023-07-17T20:51:07Z",
      "side": 1,
      "message": "This is used for SPDX tagvalue format and is not necessary in SPDX JSON because field checksum.algorithm has value \"SHA1\".",
      "range": {
        "startLine": 90,
        "startChar": 15,
        "endLine": 90,
        "endChar": 21
      },
      "revId": "1f83078a87dfb1acd4cb5e8f8faf19c846f5d57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "130da33d_5b2f5264",
        "filename": "kleaf/kernel_sbom.py",
        "patchSetId": 14
      },
      "lineNbr": 90,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-07-17T22:31:01Z",
      "side": 1,
      "message": "see a later change where I dropped that already.",
      "parentUuid": "4900328c_90d4c731",
      "range": {
        "startLine": 90,
        "startChar": 15,
        "endLine": 90,
        "endChar": 21
      },
      "revId": "1f83078a87dfb1acd4cb5e8f8faf19c846f5d57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5242d3e4_55b481bd",
        "filename": "kleaf/kernel_sbom.py",
        "patchSetId": 14
      },
      "lineNbr": 99,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-07-17T17:12:37Z",
      "side": 1,
      "message": "The date should be actually extracted from the vmlinux binary or from the full extended version string. Taking the local time is not an option as it breaks deterministic builds.",
      "revId": "1f83078a87dfb1acd4cb5e8f8faf19c846f5d57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "294e9174_8e150def",
        "filename": "kleaf/kernel_sbom.py",
        "patchSetId": 14
      },
      "lineNbr": 99,
      "author": {
        "id": 1318142
      },
      "writtenOn": "2023-07-17T20:22:16Z",
      "side": 1,
      "message": "This timestamp is used as \"created time of the SPDX doc\", so it should not link to the vmlinux binary.",
      "parentUuid": "5242d3e4_55b481bd",
      "revId": "1f83078a87dfb1acd4cb5e8f8faf19c846f5d57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f6df5a0_47704116",
        "filename": "kleaf/kernel_sbom.py",
        "patchSetId": 14
      },
      "lineNbr": 99,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-07-17T22:31:01Z",
      "side": 1,
      "message": "That inherently makes the build non-reproducible. I am quite strictly against such things. The time we already use is the latest commit timestamp and as such a fair representation of the actual sources involved. Would that be good enough?",
      "parentUuid": "294e9174_8e150def",
      "revId": "1f83078a87dfb1acd4cb5e8f8faf19c846f5d57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18d75d6e_5b7fab92",
        "filename": "kleaf/kernel_sbom.py",
        "patchSetId": 14
      },
      "lineNbr": 99,
      "author": {
        "id": 1318142
      },
      "writtenOn": "2023-07-18T02:28:05Z",
      "side": 1,
      "message": "I didn\u0027t explain clearly in my last comment. \n\nThe timestamp is the create time of the SPDX doc and the SPDX doc 1-1 links to the kernel binary, but the timestamp doesn\u0027t link to the commit information carried in the binary, considering there might be multiple binaries built from the same commit, for example for multiple archs/arch variants/toolchains, and each binary has its own SPDX doc and create timestamp. \n\nSee the SPDX spec for more details: https://spdx.github.io/spdx-spec/v2.3/document-creation-information/#69-created-field",
      "parentUuid": "5f6df5a0_47704116",
      "revId": "1f83078a87dfb1acd4cb5e8f8faf19c846f5d57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2557903f_ca740a15",
        "filename": "kleaf/kernel_sbom.py",
        "patchSetId": 14
      },
      "lineNbr": 99,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-07-18T08:32:51Z",
      "side": 1,
      "message": "Thanks for clarifying that. I am not going to argue against the standard definition, yet it is counterproductive in an environment where we want to create deterministic builds. In particular, this means we cannot create a deterministic distribution despite having relevant inputs to distinguish such as a commit timestamp and commit sha.",
      "parentUuid": "18d75d6e_5b7fab92",
      "revId": "1f83078a87dfb1acd4cb5e8f8faf19c846f5d57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7e73b40_ce70478f",
        "filename": "kleaf/kernel_sbom.py",
        "patchSetId": 14
      },
      "lineNbr": 102,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-07-17T17:12:37Z",
      "side": 1,
      "message": "the namespace contains the full version string. Is that actually an URL that will resolve? It certainly does not fit the name \"namespace\".",
      "revId": "1f83078a87dfb1acd4cb5e8f8faf19c846f5d57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b45c891c_5235b2e3",
        "filename": "kleaf/kernel_sbom.py",
        "patchSetId": 14
      },
      "lineNbr": 102,
      "author": {
        "id": 1318142
      },
      "writtenOn": "2023-07-17T20:22:16Z",
      "side": 1,
      "message": "The document namespace is actually a unique identifier/URI for the SPDX document, so if it is a unique value for every SPDX doc created by this script in build process it is ok.",
      "parentUuid": "d7e73b40_ce70478f",
      "revId": "1f83078a87dfb1acd4cb5e8f8faf19c846f5d57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be000399_f39cf490",
        "filename": "kleaf/kernel_sbom.py",
        "patchSetId": 14
      },
      "lineNbr": 102,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-07-17T22:31:01Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "b45c891c_5235b2e3",
      "revId": "1f83078a87dfb1acd4cb5e8f8faf19c846f5d57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2324536_1d97cfbf",
        "filename": "kleaf/kernel_sbom.py",
        "patchSetId": 14
      },
      "lineNbr": 231,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-07-17T17:12:37Z",
      "side": 1,
      "message": "The version should be actually extracted from the vmlinux binary or from the full extended version string.",
      "revId": "1f83078a87dfb1acd4cb5e8f8faf19c846f5d57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92a8b87e_2eced49f",
        "filename": "kleaf/kernel_sbom.py",
        "patchSetId": 14
      },
      "lineNbr": 231,
      "author": {
        "id": 1318142
      },
      "writtenOn": "2023-07-17T20:22:16Z",
      "side": 1,
      "message": "Not sure how the version looks like in vmlinux binary, it is ok if it is like the example \"5.15.110-android14-11-00098-gbdd2312e95c7-ab10365441\" whick contains buildid, otherwise we need to see if it contains some data to make it unique since it is used in document namespace.",
      "parentUuid": "c2324536_1d97cfbf",
      "revId": "1f83078a87dfb1acd4cb5e8f8faf19c846f5d57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06af1b48_a24ab858",
        "filename": "kleaf/kernel_sbom.py",
        "patchSetId": 14
      },
      "lineNbr": 231,
      "author": {
        "id": 1981917
      },
      "writtenOn": "2023-07-17T21:37:30Z",
      "side": 1,
      "message": "so, I thought we can invoke this script from $KVERSION from build system/.sh spots. Is there some $ENV or general way to extract version from this script\u0027s context as well?",
      "parentUuid": "92a8b87e_2eced49f",
      "revId": "1f83078a87dfb1acd4cb5e8f8faf19c846f5d57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69fddb84_343716ff",
        "filename": "kleaf/kernel_sbom.py",
        "patchSetId": 14
      },
      "lineNbr": 231,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-07-17T22:31:01Z",
      "side": 1,
      "message": "We will probably just call the script from kleaf with the version we have at hand.\n\nLet\u0027s wait for aosp/2656740 to land then.\n\nCc: @elsk@google.com",
      "parentUuid": "06af1b48_a24ab858",
      "revId": "1f83078a87dfb1acd4cb5e8f8faf19c846f5d57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca43144d_a8f5bc8d",
        "filename": "kleaf/kernel_sbom.py",
        "patchSetId": 14
      },
      "lineNbr": 231,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-07-19T15:57:40Z",
      "side": 1,
      "message": "Actually not needed.",
      "parentUuid": "69fddb84_343716ff",
      "revId": "1f83078a87dfb1acd4cb5e8f8faf19c846f5d57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "262db37e_f3d5df59",
        "filename": "kleaf/kernel_sbom.py",
        "patchSetId": 14
      },
      "lineNbr": 238,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2023-07-17T17:12:37Z",
      "side": 1,
      "message": "note, I removed the `**/*` glob as support for subdirectories is lacking right now. Files with colliding names are not handled as they get the same id.",
      "range": {
        "startLine": 238,
        "startChar": 52,
        "endLine": 238,
        "endChar": 53
      },
      "revId": "1f83078a87dfb1acd4cb5e8f8faf19c846f5d57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "07f0430e_1ef28f63",
        "filename": "kleaf/kernel_sbom.py",
        "patchSetId": 14
      },
      "lineNbr": 238,
      "author": {
        "id": 1981917
      },
      "writtenOn": "2023-07-17T21:37:30Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "262db37e_f3d5df59",
      "range": {
        "startLine": 238,
        "startChar": 52,
        "endLine": 238,
        "endChar": 53
      },
      "revId": "1f83078a87dfb1acd4cb5e8f8faf19c846f5d57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
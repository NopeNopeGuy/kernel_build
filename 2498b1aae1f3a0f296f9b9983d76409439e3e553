{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "61966181_4bcf6675",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1905021
      },
      "writtenOn": "2023-10-20T23:39:46Z",
      "side": 1,
      "message": "@john can you show how to use it?\nWe need to build normal build and kasan build daily in CI. and will the sanitizers enabled for ddk_module too?",
      "revId": "2498b1aae1f3a0f296f9b9983d76409439e3e553",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c9b3e91_aff134f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2023-10-21T00:06:16Z",
      "side": 1,
      "message": "Sure - just added a snippet in the docs on how to use it.\n\nYifan, can you confirm - if a `ddk_module` uses a `kernel_build` which sets a sanitizer this way, the `ddk_module` would have the sanitizer applied as well, correct?",
      "parentUuid": "61966181_4bcf6675",
      "revId": "2498b1aae1f3a0f296f9b9983d76409439e3e553",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6650039f_1d7686d0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-10-23T17:36:48Z",
      "side": 1,
      "message": "The ddk_module will see the same `CONFIG_`\u0027s, so yes.",
      "parentUuid": "9c9b3e91_aff134f9",
      "revId": "2498b1aae1f3a0f296f9b9983d76409439e3e553",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb177afe_e01345d5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-10-23T17:37:06Z",
      "side": 1,
      "message": "unresolving for visibility",
      "parentUuid": "6650039f_1d7686d0",
      "revId": "2498b1aae1f3a0f296f9b9983d76409439e3e553",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37a277fe_aeba58bc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-10-23T17:37:21Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "cb177afe_e01345d5",
      "revId": "2498b1aae1f3a0f296f9b9983d76409439e3e553",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c37e6609_309aefb1",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 6
      },
      "lineNbr": 423,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-10-20T23:45:16Z",
      "side": 1,
      "message": "Also list possible values? This makes the docs easier to read for humans.",
      "revId": "2498b1aae1f3a0f296f9b9983d76409439e3e553",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53ad15bf_892ab180",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 6
      },
      "lineNbr": 423,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2023-10-21T00:06:16Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "c37e6609_309aefb1",
      "revId": "2498b1aae1f3a0f296f9b9983d76409439e3e553",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38958cf8_eb0ace19",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 6
      },
      "lineNbr": 2132,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-10-20T23:45:16Z",
      "side": 1,
      "message": "`values \u003d `?\n\nEDIT: Ah I see, the implementation is only checking if the value is \"default\" or not.",
      "revId": "2498b1aae1f3a0f296f9b9983d76409439e3e553",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55c5c2a3_4dca406e",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 6
      },
      "lineNbr": 2132,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2023-10-21T00:06:16Z",
      "side": 1,
      "message": "Yeah, there\u0027s no `values` for a string_list. Not sure why!",
      "parentUuid": "38958cf8_eb0ace19",
      "revId": "2498b1aae1f3a0f296f9b9983d76409439e3e553",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8add4845_29d918b2",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 6
      },
      "lineNbr": 2132,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-10-23T17:36:48Z",
      "side": 1,
      "message": "That\u0027s fine. file_selector should do value checking already. (Please confirm with passing invalid values to kernel_build.sanitizers and see if there\u0027s an error)\n\nI\u0027ll file a bazel bug for this",
      "parentUuid": "55c5c2a3_4dca406e",
      "revId": "2498b1aae1f3a0f296f9b9983d76409439e3e553",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4926d67c_064257cb",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 6
      },
      "lineNbr": 2132,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-10-23T17:37:21Z",
      "side": 1,
      "message": "unresolving for visibility",
      "parentUuid": "8add4845_29d918b2",
      "revId": "2498b1aae1f3a0f296f9b9983d76409439e3e553",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d8493ff_72a97f85",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 6
      },
      "lineNbr": 2132,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-10-23T17:45:55Z",
      "side": 1,
      "message": "Bazel bug: https://github.com/bazelbuild/bazel/issues/19923\n\nPlease do confirm that passing an invalid value is an error. Thank you!",
      "parentUuid": "4926d67c_064257cb",
      "revId": "2498b1aae1f3a0f296f9b9983d76409439e3e553",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7149b3a3_0249ec53",
        "filename": "kleaf/impl/kernel_build.bzl",
        "patchSetId": 6
      },
      "lineNbr": 2132,
      "author": {
        "id": 1965070
      },
      "writtenOn": "2023-10-23T22:25:37Z",
      "side": 1,
      "message": "Confirmed - setting `sanitizers \u003d [\"foo\"]`:\n```\nselector is foo, but no expected value in files matches. Acceptable values:\n[\"kasan_any_mode\", \"kasan_sw_tags\", \"kasan_generic\", \"kcsan\", \"default\"]\n```",
      "parentUuid": "9d8493ff_72a97f85",
      "revId": "2498b1aae1f3a0f296f9b9983d76409439e3e553",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
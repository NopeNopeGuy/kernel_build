{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "02617d31_f54b329e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1066075
      },
      "writtenOn": "2023-12-14T14:44:16Z",
      "side": 1,
      "message": "Looks reasonable to me, but Xudong has sharper eyes in this domain so adding him to Cc",
      "revId": "321639086fca81443f737d52d6baa40fc1e82b79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2c18194_0812c3bf",
        "filename": "kleaf/impl/local_repository.bzl",
        "patchSetId": 7
      },
      "lineNbr": 95,
      "author": {
        "id": 1086744
      },
      "writtenOn": "2023-12-14T16:37:37Z",
      "side": 1,
      "message": "note that you might run into name conflicts if multiple modules provide tags with the same name. not sure how real that risk is.\n\nIf you\u0027re using Bazel 7.0, you may prefer just forgoing this extension and just have modules use [`use_repo_rule`](https://bazel.build/rules/lib/globals/module#use_repo_rule) with `kleaf_{new_,}local_repository`.",
      "range": {
        "startLine": 95,
        "startChar": 16,
        "endLine": 95,
        "endChar": 37
      },
      "revId": "321639086fca81443f737d52d6baa40fc1e82b79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aeffe78b_5f074db5",
        "filename": "kleaf/impl/local_repository.bzl",
        "patchSetId": 7
      },
      "lineNbr": 95,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-12-14T18:29:17Z",
      "side": 1,
      "message": "Is use_repo_rule a preferred option? I read your comment in\n\nhttps://github.com/bazelbuild/bazel/issues/17141#issuecomment-1622343142\n\nwhich gives me a sentiment that it is introduced to just discourage people from requesting `load()` in MODULE.bazel.\n\n---\n\n\u003e note that you might run into name conflicts if multiple modules provide tags with the same name. not sure how real that risk is.\n\nThis should not be a real risk for us because @@kleaf should be the only user (aosp/2863915). Though, I don\u0027t know if there\u0027s a way to restrict the visibility of this module extension.\n\nThat being said, I do agree that `use_repo_rule` will yield cleaner code, so I will use that. Thanks for your suggestion!",
      "parentUuid": "f2c18194_0812c3bf",
      "range": {
        "startLine": 95,
        "startChar": 16,
        "endLine": 95,
        "endChar": 37
      },
      "revId": "321639086fca81443f737d52d6baa40fc1e82b79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1bacc7a_dd811c1c",
        "filename": "kleaf/impl/local_repository.bzl",
        "patchSetId": 7
      },
      "lineNbr": 95,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-12-14T18:48:46Z",
      "side": 1,
      "message": "use_repo_rule doesn\u0027t have dev_dependency, though. Is there any plan to add dev_dependency to use_repo_rule?\n\nThis is not a big deal though; I don\u0027t think it is blocking us.",
      "parentUuid": "aeffe78b_5f074db5",
      "range": {
        "startLine": 95,
        "startChar": 16,
        "endLine": 95,
        "endChar": 37
      },
      "revId": "321639086fca81443f737d52d6baa40fc1e82b79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
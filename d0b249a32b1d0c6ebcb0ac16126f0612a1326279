{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8b13df5a_5329aabe",
        "filename": "kleaf/docs/get_kernel_output.md",
        "patchSetId": 14
      },
      "lineNbr": 1,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-12-15T10:37:25Z",
      "side": 1,
      "message": "Thank you for your contribution, much appreciated! I like the feature, yet I am not yet convinced about the interface. It is not immediately obvious what \u0027output\u0027 refers to and how it could be \u0027get\u0027. What the feature in fact does is preserving the kbuild output directory. How about we name it accordingly (and in line with the upstream terminology)  `--preserve_kbuild_output` ?\n\nhttps://docs.kernel.org/kbuild/kbuild.html#kbuild-output",
      "range": {
        "startLine": 1,
        "startChar": 3,
        "endLine": 1,
        "endChar": 20
      },
      "revId": "d0b249a32b1d0c6ebcb0ac16126f0612a1326279",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e30f3f60_4ef90f07",
        "filename": "kleaf/docs/get_kernel_output.md",
        "patchSetId": 14
      },
      "lineNbr": 1,
      "author": {
        "id": 1767641
      },
      "writtenOn": "2022-12-16T02:31:41Z",
      "side": 1,
      "message": "thanks for the suggestion, I\u0027ll change it and test soon",
      "parentUuid": "8b13df5a_5329aabe",
      "range": {
        "startLine": 1,
        "startChar": 3,
        "endLine": 1,
        "endChar": 20
      },
      "revId": "d0b249a32b1d0c6ebcb0ac16126f0612a1326279",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f96e8bbe_a218e855",
        "filename": "kleaf/docs/get_kernel_output.md",
        "patchSetId": 14
      },
      "lineNbr": 1,
      "author": {
        "id": 1767641
      },
      "writtenOn": "2022-12-19T10:39:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e30f3f60_4ef90f07",
      "range": {
        "startLine": 1,
        "startChar": 3,
        "endLine": 1,
        "endChar": 20
      },
      "revId": "d0b249a32b1d0c6ebcb0ac16126f0612a1326279",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19aebee5_a00671b3",
        "filename": "kleaf/docs/get_kernel_output.md",
        "patchSetId": 14
      },
      "lineNbr": 8,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-12-15T10:37:25Z",
      "side": 1,
      "message": "Grabbing \"everything unconditionally\" might serve the use case, but is perhaps quite wasteful in terms of disk space and runtime. Most tools are interested in a tiny bit of the output, e.g. only object files or only .cmd files. How about adding the ability to glob as a parameter, e.g. to preserve all object files:\n\n  --preserve_kbuild_output\u003d**/*.o\n  \nI am open about how to handle multiple expressions, but those are two options I could imagine:\n\n1) `--preserve_kbuild_output\u003d**/*.o,**/*.cmd`\n  \n  \n2) `--preserve_kbuild_output\u003d**/*.o --preserve_kbuild_output\u003d**/*.cmd`\n\n\nThe current use case would be supported via `--preserve_kbuild_output\u003d**/*`, which could also be a default argument if omitted.\n\nWhat do you think?",
      "range": {
        "startLine": 8,
        "startChar": 52,
        "endLine": 8,
        "endChar": 82
      },
      "revId": "d0b249a32b1d0c6ebcb0ac16126f0612a1326279",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8060544_475765b1",
        "filename": "kleaf/docs/get_kernel_output.md",
        "patchSetId": 14
      },
      "lineNbr": 8,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-12-15T19:36:05Z",
      "side": 1,
      "message": "FYI: For cmds you can rely on the `preserve_cmd` bool_setting. We can change it to a proper flag if there\u0027s a need.",
      "parentUuid": "19aebee5_a00671b3",
      "range": {
        "startLine": 8,
        "startChar": 52,
        "endLine": 8,
        "endChar": 82
      },
      "revId": "d0b249a32b1d0c6ebcb0ac16126f0612a1326279",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "925e95d4_6ba4fde6",
        "filename": "kleaf/docs/get_kernel_output.md",
        "patchSetId": 14
      },
      "lineNbr": 8,
      "author": {
        "id": 1767641
      },
      "writtenOn": "2022-12-16T02:31:41Z",
      "side": 1,
      "message": "Actually it\u0027s about the protocol how we provide kernel output things to other teams for their job. And we always just provide the whole kernel output and said \u0027that\u0027s all\u0027, so they can grab things and need without cross team communication which usually takes lots of time for same result.\n\n\n\u003e I am open about how to handle multiple expressions, but those are two options I could imagine:\nThanks, It\u0027s a good idea, so the internal implementation of `--gcov` and `--cmd` can also reuse this.\n\nWould we need to support in this CL or the following commit?",
      "parentUuid": "d8060544_475765b1",
      "range": {
        "startLine": 8,
        "startChar": 52,
        "endLine": 8,
        "endChar": 82
      },
      "revId": "d0b249a32b1d0c6ebcb0ac16126f0612a1326279",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fcc6c30_cf4cf604",
        "filename": "kleaf/docs/get_kernel_output.md",
        "patchSetId": 14
      },
      "lineNbr": 8,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-12-16T16:58:20Z",
      "side": 1,
      "message": "I think it is ok to support this in a later CL. Though in your own interest to reduce build times it would be good to have.",
      "parentUuid": "925e95d4_6ba4fde6",
      "range": {
        "startLine": 8,
        "startChar": 52,
        "endLine": 8,
        "endChar": 82
      },
      "revId": "d0b249a32b1d0c6ebcb0ac16126f0612a1326279",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ecef8fe_0d6e49c5",
        "filename": "kleaf/docs/get_kernel_output.md",
        "patchSetId": 14
      },
      "lineNbr": 8,
      "author": {
        "id": 1767641
      },
      "writtenOn": "2022-12-19T10:39:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0fcc6c30_cf4cf604",
      "range": {
        "startLine": 8,
        "startChar": 52,
        "endLine": 8,
        "endChar": 82
      },
      "revId": "d0b249a32b1d0c6ebcb0ac16126f0612a1326279",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d4897b8_72a9b62a",
        "filename": "kleaf/docs/get_kernel_output.md",
        "patchSetId": 14
      },
      "lineNbr": 11,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2022-12-15T10:37:25Z",
      "side": 1,
      "message": "Can you explain why config\u003dlocal is not sufficient for your use case? It already preserves the output directory and is suitable to be used in CI.",
      "range": {
        "startLine": 11,
        "startChar": 16,
        "endLine": 11,
        "endChar": 28
      },
      "revId": "d0b249a32b1d0c6ebcb0ac16126f0612a1326279",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c498900_97f2a044",
        "filename": "kleaf/docs/get_kernel_output.md",
        "patchSetId": 14
      },
      "lineNbr": 11,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-12-15T19:34:38Z",
      "side": 1,
      "message": "I suggested not using --config\u003dlocal because it is for development purposes only and it breaks hermeticity. It also relies on OUT_DIR_SUFFIX (though the `last` symlink would solve this). See bug.\n\n\u003e ready for CI\n\nIn fact, `--config\u003drelease` (which implies `--config\u003dstamp`) conflicts with `--config\u003dlocal`.",
      "parentUuid": "8d4897b8_72a9b62a",
      "range": {
        "startLine": 11,
        "startChar": 16,
        "endLine": 11,
        "endChar": 28
      },
      "revId": "d0b249a32b1d0c6ebcb0ac16126f0612a1326279",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09450c3b_a9284089",
        "filename": "kleaf/docs/get_kernel_output.md",
        "patchSetId": 14
      },
      "lineNbr": 11,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2022-12-16T00:12:06Z",
      "side": 1,
      "message": "Also, grabbing the outputs is the first step to bazel-lize the subsequent steps that the partner wants to do on the output files. I know they currently don\u0027t have plans to do that, but still -- let\u0027s try containing things inside the Bazel framework as much as possible.",
      "parentUuid": "1c498900_97f2a044",
      "range": {
        "startLine": 11,
        "startChar": 16,
        "endLine": 11,
        "endChar": 28
      },
      "revId": "d0b249a32b1d0c6ebcb0ac16126f0612a1326279",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
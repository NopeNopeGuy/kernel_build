{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "005023f5_7ece0323",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-05-16T19:42:22Z",
      "side": 1,
      "message": "Also overall comment: I think local mode and offline mode should be separate.\n\nThe `--local` flag refers to that, during init_ddk.py execution, there should not be internet access (usually assuming that there\u0027s already a source tree checkout / prebuilts downloaded).\n\nThe offline mode refers to that during `bazel build` it should not reach out to the internet; i.e. `--config\u003dno_internet`. To do that, we need local_path_override().\n\nThe offline mode may be the default and we probably don\u0027t need a flag for it.",
      "revId": "b58c941cc92733864cec62570037592bcaf215cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2bcbdc34_13667462",
        "filename": "init/init_ddk.py",
        "patchSetId": 6
      },
      "lineNbr": 60,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-05-16T00:07:33Z",
      "side": 1,
      "message": "note: rules_rust will go away CL:3090287",
      "range": {
        "startLine": 60,
        "startChar": 6,
        "endLine": 60,
        "endChar": 16
      },
      "fixSuggestions": [
        {
          "fixId": "0bac2773_bf0566e1",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "init/init_ddk.py",
              "range": {
                "startLine": 59,
                "startChar": 0,
                "endLine": 63,
                "endChar": 0
              },
              "replacement": ""
            },
            {
              "path": "init/init_ddk.py",
              "range": {
                "startLine": 119,
                "startChar": 0,
                "endLine": 120,
                "endChar": 0
              },
              "replacement": "                if not skip_line and line.strip():\n"
            },
            {
              "path": "init/init_ddk.py",
              "range": {
                "startLine": 154,
                "startChar": 0,
                "endLine": 155,
                "endChar": 0
              },
              "replacement": "                if not section or line.strip():\n"
            },
            {
              "path": "init/init_ddk.py",
              "range": {
                "startLine": 157,
                "startChar": 0,
                "endLine": 158,
                "endChar": 0
              },
              "replacement": ""
            },
            {
              "path": "init/init_ddk.py",
              "range": {
                "startLine": 159,
                "startChar": 0,
                "endLine": 163,
                "endChar": 0
              },
              "replacement": ""
            }
          ]
        }
      ],
      "revId": "b58c941cc92733864cec62570037592bcaf215cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5dd757aa_96750f34",
        "filename": "init/init_ddk.py",
        "patchSetId": 6
      },
      "lineNbr": 60,
      "author": {
        "id": 1961395
      },
      "writtenOn": "2024-05-20T15:09:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2bcbdc34_13667462",
      "range": {
        "startLine": 60,
        "startChar": 6,
        "endLine": 60,
        "endChar": 16
      },
      "revId": "b58c941cc92733864cec62570037592bcaf215cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de06340b_7f56eb88",
        "filename": "init/init_ddk.py",
        "patchSetId": 6
      },
      "lineNbr": 163,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-05-16T00:07:33Z",
      "side": 1,
      "message": "I don\u0027t think the root module should have bazel_dep() on anything unless the user actually uses it (e.g. for the integration tests, I use skylib, so I explicitly add it).\n\nWhat does this fix?",
      "revId": "b58c941cc92733864cec62570037592bcaf215cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "378e731c_6dfaebf5",
        "filename": "init/init_ddk.py",
        "patchSetId": 6
      },
      "lineNbr": 163,
      "author": {
        "id": 1961395
      },
      "writtenOn": "2024-05-16T20:10:59Z",
      "side": 1,
      "message": "I hit an error with `rules_cc` (http://b/338440785#comment3) my module was just a sample one with the minimum to compile. IMO is hard to know what thing the user will need, hence I added all what was available.",
      "parentUuid": "de06340b_7f56eb88",
      "revId": "b58c941cc92733864cec62570037592bcaf215cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6c3da0f_55a186a5",
        "filename": "init/init_ddk.py",
        "patchSetId": 6
      },
      "lineNbr": 163,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-05-17T20:42:54Z",
      "side": 1,
      "message": "The error with rules_cc should be resolved by adding an empty WORKSPACE.bzlmod file. The problem is probably that without a WORKSPACE file, Bazel generates one with non-empty content that defines **legacy** `rules_cc` (not the bzlmod `rules_cc`, which becomes `@@rules_cc~` later), and something depends on it. I think adding an empty WORKSPACE.bzlmod is a better workaround than explicitly defining bazel_dep(rules_cc) albeit still a workaround.",
      "parentUuid": "378e731c_6dfaebf5",
      "revId": "b58c941cc92733864cec62570037592bcaf215cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4d55638_9c6e6e5c",
        "filename": "init/init_ddk.py",
        "patchSetId": 6
      },
      "lineNbr": 163,
      "author": {
        "id": 1961395
      },
      "writtenOn": "2024-05-20T15:09:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6c3da0f_55a186a5",
      "revId": "b58c941cc92733864cec62570037592bcaf215cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd0df757_40f38c47",
        "filename": "init/init_ddk.py",
        "patchSetId": 6
      },
      "lineNbr": 185,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-05-16T19:42:22Z",
      "side": 1,
      "message": "I am referring to here. I think\n\n```\nif self.kleaf_repo:\n    module_bazel_content +\u003d self._get_local_path_overrides()\n```\n\nmight be more correct (without checking the --local flag)",
      "revId": "b58c941cc92733864cec62570037592bcaf215cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07a19e77_f5436020",
        "filename": "init/init_ddk.py",
        "patchSetId": 6
      },
      "lineNbr": 318,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-05-16T19:50:37Z",
      "side": 1,
      "message": "unrelated: could you explain why _handle_prebuilts needs self.ddk_workspace again?\n\nBackground: I am working on extracting the headers and I am planning to use `if self.prebuilts_dir` as the predicate. If there are prebuilts, I\u0027ll extract headers from there.",
      "range": {
        "startLine": 318,
        "startChar": 11,
        "endLine": 318,
        "endChar": 33
      },
      "fixSuggestions": [
        {
          "fixId": "4e926181_53441b8e",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "init/init_ddk.py",
              "range": {
                "startLine": 318,
                "startChar": 0,
                "endLine": 319,
                "endChar": 0
              },
              "replacement": "        if not self.prebuilts_dir:\n"
            }
          ]
        }
      ],
      "revId": "b58c941cc92733864cec62570037592bcaf215cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
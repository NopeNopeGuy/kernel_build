{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "27a87562_8a27c286",
        "filename": "_setup_env.sh",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-21T23:21:34Z",
      "side": 1,
      "message": "What does this do?",
      "range": {
        "startLine": 78,
        "startChar": 27,
        "endLine": 78,
        "endChar": 29
      },
      "revId": "f3f9142c996b6654ca195d556e125a408d5e5bcb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a245130_a84145c1",
        "filename": "_setup_env.sh",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2021-06-22T13:24:59Z",
      "side": 1,
      "message": "${var+x} is a parameter expansion which evaluates to nothing if var is unset, and substitutes the string x otherwise.",
      "parentUuid": "27a87562_8a27c286",
      "range": {
        "startLine": 78,
        "startChar": 27,
        "endLine": 78,
        "endChar": 29
      },
      "revId": "f3f9142c996b6654ca195d556e125a408d5e5bcb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38cf1737_2e203437",
        "filename": "_setup_env.sh",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-22T17:20:51Z",
      "side": 1,
      "message": "The +x is to work around spaces in the variable, is that right? So this is basically \n\n```\n[ -z \"${SOURCE_DATE_EPOCH}\" ]\n```\n?",
      "parentUuid": "5a245130_a84145c1",
      "range": {
        "startLine": 78,
        "startChar": 27,
        "endLine": 78,
        "endChar": 29
      },
      "revId": "f3f9142c996b6654ca195d556e125a408d5e5bcb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd6a9261_26e64bc8",
        "filename": "_setup_env.sh",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1625880
      },
      "writtenOn": "2021-06-25T15:03:20Z",
      "side": 1,
      "message": "\u003e        ${parameter:+word}\n\u003e               Use Alternate Value.  If parameter is null or unset, nothing is substituted, otherwise the expansion of word is substituted.\n\n\nYou are missing a colon.",
      "parentUuid": "38cf1737_2e203437",
      "range": {
        "startLine": 78,
        "startChar": 27,
        "endLine": 78,
        "endChar": 29
      },
      "revId": "f3f9142c996b6654ca195d556e125a408d5e5bcb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c3c2e8e_6a2709fc",
        "filename": "_setup_env.sh",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2021-06-25T15:06:39Z",
      "side": 1,
      "message": "Except it distinguishes between the value being unset and the value being set to the empty value. Probably it does not make a difference here, yet I wanted to allow the pass through of any value set.\n\nYet, for the details, +x is a parameter expansion\n\n  ${parameter:+word}\n  If parameter is null or unset, nothing is substituted, otherwise the expansion of word is substituted.\n\nFurther\n  Omitting the colon results in a test only for a parameter that is unset.\n  \nhttps://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html",
      "parentUuid": "38cf1737_2e203437",
      "range": {
        "startLine": 78,
        "startChar": 27,
        "endLine": 78,
        "endChar": 29
      },
      "revId": "f3f9142c996b6654ca195d556e125a408d5e5bcb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd96b89f_7b7e3b87",
        "filename": "kleaf/bazel.sh",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-21T23:21:34Z",
      "side": 1,
      "message": "I know we only support common/ for now, but do we plan to support other KERNEL_DIR values in the future? If so, how would KERNEL_DIR be inferred?",
      "range": {
        "startLine": 19,
        "startChar": 50,
        "endLine": 19,
        "endChar": 56
      },
      "revId": "f3f9142c996b6654ca195d556e125a408d5e5bcb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f598a72f_f7165e3c",
        "filename": "kleaf/bazel.sh",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2021-06-22T13:24:59Z",
      "side": 1,
      "message": "I dropped this altogether. It would invalidate a whole build when it changes. Though I let the pass through for when e.g. Treehugger sets it. I leave this a bit open now. Properly TBD later.",
      "parentUuid": "bd96b89f_7b7e3b87",
      "range": {
        "startLine": 19,
        "startChar": 50,
        "endLine": 19,
        "endChar": 56
      },
      "revId": "f3f9142c996b6654ca195d556e125a408d5e5bcb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5183d6f9_8e885984",
        "filename": "kleaf/bazel.sh",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-22T17:20:51Z",
      "side": 1,
      "message": "Ack \n\nIndeed. Maybe we should do a similar thing as how Android treats build dates.",
      "parentUuid": "f598a72f_f7165e3c",
      "range": {
        "startLine": 19,
        "startChar": 50,
        "endLine": 19,
        "endChar": 56
      },
      "revId": "f3f9142c996b6654ca195d556e125a408d5e5bcb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
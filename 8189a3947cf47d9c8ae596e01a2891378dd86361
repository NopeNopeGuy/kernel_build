{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c62311cd_fb8448a3",
        "filename": "kleaf/environment.bzl",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1066075
      },
      "writtenOn": "2021-06-21T16:00:23Z",
      "side": 1,
      "message": "This is very inventive ðŸ˜Š\n\nBazel does have a facility for passing in shell environment variables to actions, it\u0027s called --action_env:\n\nhttps://docs.bazel.build/versions/main/command-line-reference.html#flag--action_env\n\nCould you maybe use that so that you need to submit less code?",
      "range": {
        "startLine": 15,
        "startChar": 4,
        "endLine": 15,
        "endChar": 62
      },
      "revId": "8189a3947cf47d9c8ae596e01a2891378dd86361",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "58f9cd50_28525272",
        "filename": "kleaf/environment.bzl",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2021-06-21T16:39:25Z",
      "side": 1,
      "message": "This is for compatibility with the current scripts to make the transition easier.\nCurrently, the invocation is\n\n  BUILD_CONFIG\u003dcommon/build.config.gki.aarch64 build/build.sh\n  \nand the transition I have in mind is to allow\n\n  BUILD_CONFIG\u003dcommon/build.config.gki.aarch64 bazel build //common:kernel\n  \nAnd that is supposed to pick up the correct configuration from the environment. There is more, like LTO\u003d(full|thin|off) that we need to support until we transitioned completely. These things are deep in developer\u0027s local scripts and I do not want to start with immediately breaking them.",
      "parentUuid": "c62311cd_fb8448a3",
      "range": {
        "startLine": 15,
        "startChar": 4,
        "endLine": 15,
        "endChar": 62
      },
      "revId": "8189a3947cf47d9c8ae596e01a2891378dd86361",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d1fe600_942a5f2e",
        "filename": "kleaf/environment.bzl",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-21T23:04:47Z",
      "side": 1,
      "message": "\u003e I do not want to start with immediately breaking them.\n\nWe aren\u0027t breaking the first invocation that uses build/build.sh directly, right? \n\nTo use Bazel, they\u0027ll have to change their scripts anyways. So, why not take one step further and ask them to change their scripts to use `--action_env`?",
      "parentUuid": "58f9cd50_28525272",
      "range": {
        "startLine": 15,
        "startChar": 4,
        "endLine": 15,
        "endChar": 62
      },
      "revId": "8189a3947cf47d9c8ae596e01a2891378dd86361",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bfd633d_863ecd82",
        "filename": "kleaf/environment.bzl",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1066075
      },
      "writtenOn": "2021-06-22T06:16:40Z",
      "side": 1,
      "message": "Please feel free to go ahead and submit this if you think it\u0027s optimal! I thought that your initial plan was what we do with the Android OS builds which is to symlink bazel.sh to tools/bazel so that we have a wrapper we can control and which people can still call as \"bazel\".\n\nIf you don\u0027t want to do that for some reason, I guess this works?",
      "parentUuid": "8d1fe600_942a5f2e",
      "range": {
        "startLine": 15,
        "startChar": 4,
        "endLine": 15,
        "endChar": 62
      },
      "revId": "8189a3947cf47d9c8ae596e01a2891378dd86361",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26a9f2cc_b1e42296",
        "filename": "kleaf/environment.bzl",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2021-06-22T13:24:59Z",
      "side": 1,
      "message": "There are several things here to clarify:\n\n --action_env\u003dVAR does take VAR from the invocation environment and makes the value available to the action. This is useful for actual pass through. E.g. for SOURCE_DATE_EPOCH where a change actually invalidates the actions.\n\n The implementation here does only capture the environment variable to make them available to BUILD files. It is not supposed to be passed through to the action\u0027s environment. This case is to have a default target, e.g. \u0027kernel\u0027 that has a different implementation based on the definition of the environment variable at invocation time. E.g. compare\n  $ BUILD_CONFIG\u003dcommon/build.config.gki.aarch64  bazel build //common:kernel\n  $ BUILD_CONFIG\u003dcommon/build.config.gki.x86_64  bazel build //common:kernel\n  \nThe BUILD_CONFIG influences the build environment (a direct input into //common:kernel). By changing this variable the rule generation of that particular env rule changes. I.e. it should not affect any other action execution.\n\nBUILD_CONFIG is not the best example, and we might not even use this feature for it. But there is more: Developers regularly set LTO\u003dthin or LTO\u003dnone on their local machines to cut down local build times. I would like to support this use case at least for some time. Captured env variables can partially(!) influence rule generation in this case. action_env would affect all rules and would invalidate too much. My ideal version for LTO would be `bazel build --lto\u003dthin ...` in the end though.\n\nI would say, let\u0027s leave it for now. The actual transition plan is not yet decided anyway.",
      "parentUuid": "9bfd633d_863ecd82",
      "range": {
        "startLine": 15,
        "startChar": 4,
        "endLine": 15,
        "endChar": 62
      },
      "revId": "8189a3947cf47d9c8ae596e01a2891378dd86361",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
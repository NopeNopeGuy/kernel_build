{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "67e91fe0_47b014e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2021-12-03T01:10:18Z",
      "side": 1,
      "message": "Requesting a review as WIP:\n\nThis is what I have been using for testing; but like to know your feedback whether this is the right place and way to generate the erofs image with GKI modules during the kernel build.\n\nIf it is, the further items to be worked on this are:\n\n1. Removal of the flag and image will always get built as long as common/android/gki_aarch64_modules is not empty i.e. there is at least a module to be bundled.\n2. Remove reuse of the BUILD_INITRAMFS infrastructure as it is now; factor out common code to collect modules in a directory, and call it as needed.\n3. Errors and fs image limit (\u003c32M partition size for system_dlkm) checks.\n\nI need this to be finalize sooner; so I can have prebuilts created and make available for AOSP build where I have AOSP \u0026 CF changes (https://android-review.googlesource.com/q/topic:system_dlkm) ready for presubmit but this prebuilt image a dependency.",
      "revId": "6298b41d1e04429165b0d2af2c22c1589d834a49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bce67e5a_6f5a73b6",
        "filename": "build.sh",
        "patchSetId": 4
      },
      "lineNbr": 272,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2021-12-03T17:57:16Z",
      "side": 1,
      "message": "Does it add value to include \"_EROFS\"? Are there other types of system_dlkm formats?",
      "range": {
        "startLine": 272,
        "startChar": 21,
        "endLine": 272,
        "endChar": 27
      },
      "revId": "6298b41d1e04429165b0d2af2c22c1589d834a49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a306ba9_28ea0e4b",
        "filename": "build.sh",
        "patchSetId": 4
      },
      "lineNbr": 272,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2021-12-04T03:12:00Z",
      "side": 1,
      "message": "Ack. Will drop this as any given type we will only support one type of system_dlkm format. Initially, I wanted to be future proof.\n\nAt some point this may be dropped completely as we will always need to build the image once we have at least one GKI module.\n\nIdea of this review is to get a gauge of whether this is the right place and way to add support for building system_dlkm without having any aosp dependency; looks like it is.",
      "parentUuid": "bce67e5a_6f5a73b6",
      "range": {
        "startLine": 272,
        "startChar": 21,
        "endLine": 272,
        "endChar": 27
      },
      "revId": "6298b41d1e04429165b0d2af2c22c1589d834a49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1105133_403a959d",
        "filename": "build.sh",
        "patchSetId": 4
      },
      "lineNbr": 866,
      "author": {
        "id": 1402878
      },
      "writtenOn": "2021-12-03T15:45:39Z",
      "side": 1,
      "message": "# TODO (b/1233456) ....\n\nto track the bug - go/todont",
      "revId": "6298b41d1e04429165b0d2af2c22c1589d834a49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d57cb648_1950c4c3",
        "filename": "build.sh",
        "patchSetId": 4
      },
      "lineNbr": 866,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2021-12-04T03:12:00Z",
      "side": 1,
      "message": "Thanks. Definitely good to know about this as I wasn\u0027t aware.\n\nFor comment, I\u0027ll add this code in the next patch-set; so TODO won\u0027t be required.",
      "parentUuid": "a1105133_403a959d",
      "revId": "6298b41d1e04429165b0d2af2c22c1589d834a49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}